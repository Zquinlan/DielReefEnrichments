filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
group_by(Organism, Timepoint, DayNight, feature_number)%>%
mutate(Replicate = as.numeric(Replicate),
xic = case_when(sum(xic) == 4000 ~ xic + Replicate,
sum(xic) == 2000 ~ xic + Replicate,
TRUE ~ as.numeric(xic)),
Replicate = as.character(Replicate))%>%
ungroup()%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
mutate(log2 = log2(TF/mean(T0, na.rm = TRUE)))%>%
ungroup(), by = c("feature_number"))%>%
select(-c("T0", "TF"))%>%
spread(feature_number, log2)
osm_correlation <- osm_major_depletolites%>%
left_join(osm_large_otu, by = c("Organism", "DayNight", "Replicate"))%>%
gather(feature_number, log10, 5:685)%>%
gather(OTU, log2_change, 6:31)%>%
select(-c(contains("Experiment")))
osm_metabolite_metabolite_corr <- osm_major_depletolites%>%
select(-Experiment)%>%
left_join(osm_major_depletolites%>%
select(-Experiment), by = c("Organism", "DayNight", "Replicate"))%>%
gather(feature_number, log10, contains(".x"))%>%
gather(feature_number.y, log10.y, contains(".y"))
osm_corr_test <- osm_correlation%>%
group_by(OTU, feature_number)%>%
nest()%>%
mutate(data = map(data, ~ cor.test(.x$log10, .x$log2_change, method = "pearson")%>%
broom::tidy()))
# osm_metab_corr_test <- osm_metabolite_metabolite_corr%>%
#   group_by(feature_number, feature_number.y)%>%
#   nest()%>%
#   mutate(data = map(data, ~ cor.test(.x$log10, .x$log10.y, method = "pearson")%>%
#                       broom::tidy()))
write_csv(osm_metab_corr_test%>%
unnest(data), "analysis/metab_corr_results_unensted.csv")
## Edge table
osm_corr_pvals <- osm_corr_test%>%
unnest(data)%>%
# left_join(networking, by = c("feature_number"))%>%
mutate(fdr = p.adjust(p.value, method = "BH"))%>%
filter(fdr < 0.0001)%>%
select(1,2,fdr)
osm_metab_corr_pvals <- osm_metab_corr_test%>%
unnest(data)%>%
filter(feature_number != feature_number.y)%>%
# left_join(networking, by = c("feature_number"))%>%
mutate(fdr = p.adjust(p.value, method = "BH"))%>%
filter(fdr < 0.001)%>%
select(1,2,fdr)
osm_corr_combined <- osm_metab_corr_pvals%>%
ungroup()%>%
filter(fdr < 0.000000001)%>%
mutate(feature_number = gsub(".x", "", feature_number),
feature_number.y = gsub(".y", "", feature_number.y))%>%
rename(node_2 = feature_number.y)%>%
bind_rows(osm_corr_pvals%>%
ungroup()%>%
rename(node_2 = OTU))%>%
filter(feature_number != node_2)
write_csv(osm_corr_combined, "./analysis/osm_cytoscape_correlations_edge.csv")
## Node table
corr_nodes <- osm_otus%>%
select(-c(p.value:Class, Order, sp, T0, TF))%>%
distinct(OTU, Tax_plot, Family, Genus, Organism, log2_change)%>%
spread(Organism, log2_change)%>%
mutate(sample = "ASV",
OTU_code = OTU,
label = Family,
label = case_when(label == "Clade_I" ~ "SAR 11",
Genus %like% "%NS5_%" ~ "NS5 Marine Group",
Genus %like% "%Dong%" ~ "Donghicola",
Genus %like% "Meso%" ~ "Mesoflavibacter",
Genus %like% "Wino%" ~ "Winogradskyella",
TRUE ~ as.character(label))
)%>%
unite(color, c("label", "OTU_code"), sep = ";", remove = FALSE)%>%
rename(shared_name = OTU)%>%
bind_rows(molnet_class%>%
mutate(sample = "metabolite")%>%
select(-Organism)%>%
separate(molnet_string, c(CF_kingdom, CF_superclass, CF_class, CF_subclass), sep = ";")%>%
left_join(osm_dunnetts%>%
select(feature_number, Organism), by = "feature_number")%>%
rename(shared_name = feature_number,
label = CF_subclass,
color = `CF_superclass`))
write_csv(corr_nodes, "analysis/osm_cyto_node.csv")
# GRAPHING -- data sleuthing Porites --------------------------------------
porites_depletes <- osm_dunnetts%>%
filter(Organism == "Porites lobata")
porites_asv <- osm_otus%>%
# filter(log2_change >= 1,
#        TF >= 0.001)%>%
select(Tax_plot, OTU)%>%
distinct(Tax_plot, OTU)%>%
left_join(microbe_no_rare, by = c("OTU"))%>%
filter(DayNight == "Day",
Organism == "Porites lobata")
# PLOT FOR CRAIG ----------------------------------------------------------
osm_correlation%>%
filter(feature_number == "2734",
OTU == "Otu0062")%>%
ggplot(aes(log10, log2_change, col = Organism)) +
geom_point()
pdf("./plots/cyromorphaceae.pdf", height = 7, width = 8)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill == "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
# GRAPHING -- [OSM] FCM data ----------------------------------------------------
fcm_graphing <- fcm_wdf%>%
filter(!Organism == 'Influent',
!Organism == 'Offshore',
DayNight == "Day")%>%
mutate(Hours = case_when(Timepoint == "T0" ~ 0,
Timepoint == "T1" ~ 4,
Timepoint == "T2" ~ 13,
Timepoint == "T3" ~ 17,
Timepoint == "T4" ~ 23,
Timepoint == "T5" ~ 28,
Timepoint == "T6" ~ 37,
Timepoint == "TF" ~ 48))
pdf("~/Documents/GitHub/DORCIERR/data/plots/osm_fcm_DayNight.pdf", width = 7, height = 5)
fcm_graphing%>%
ggplot(aes(x= Hours, y = `Cells ÂµL-1`, color = Organism))+
geom_point(stat = "summary", fun.y = "mean") +
geom_line(aes(group = Organism), stat = "summary", fun.y = "mean") +
facet_wrap(~ DayNight) +
# scale_color_manual(values = c("darkorchid3", "#50A45C", "#AF814B", "#5BBCD6")) +
scale_y_continuous(limits = c(0,900), breaks= seq(0, 900, 100)) +
scale_x_continuous(limits = c(0,50), breaks = seq(0, 50, 5)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
dev.off()
# GRAPHING -- [OSM] PCoAs Labile ------------------------------------------
osm_dom_pco <- dom_stats_wdf%>%
spread(Timepoint, log)%>%
filter(DayNight == "Day")%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(mean_t0 = mean(T0, na.rm = TRUE))%>%
mutate(change = TF - mean_t0)%>%
ungroup()%>%
mutate(zscore = ((change - mean(change, na.rm = TRUE))/sd(change, na.rm = TRUE)))%>%
mutate(zscore = zscore + 78)%>%
select(-c(TF, T0, mean_t0, change))%>%
unite(sample, c(1:4), sep = "_")%>%
spread(2,3)%>%
column_to_rownames(var = "sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
## Plot Eigenvalues
osm_dom_pco$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## PCoA plot
pdf("./plots/osm_dom_pcoa.pdf", width = 6, height = 5)
osm_dom_pco$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
separate(sample, c("experiemnt", "Organism", "replicate", "DayNight"), sep = "_")%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = Organism, shape = DayNight)) +
geom_point(stat = "identity", aes(size = 0.2)) +
scale_shape_manual(values = c(19)) +
# scale_color_manual(values = c("darkorchid3", "#50A45C", "#AF814B", "#5BBCD6")) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
xlab(str_c("Axis 1", " (", round(osm_dom_pco$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(osm_dom_pco$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
ggtitle("Labile features")
dev.off()
# GRAPHING -- [OSM] PCoAs microbes ------------------------------------------
osm_pcoa_microbe <- microbe_no_rare%>%
filter(DayNight == "Day")%>%
unite(sample, c(Organism, DayNight, Replicate), sep = "_")%>%
select(-c(Experiment, T0, TF))%>%
group_by(sample, OTU)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(log2_change = log2_change + 19)%>%
spread(OTU, log2_change)%>%
column_to_rownames("sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
## Plot Eigenvalues
osm_pcoa_microbe$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
## PCoA plot
pdf("./plots/osm_microbes_pcoa.pdf", width = 6, height = 5)
osm_pcoa_microbe$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
separate(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = Organism, shape = DayNight)) +
geom_point(stat = "identity", aes(size = 0.2)) +
scale_shape_manual(values = c(19)) +
# scale_color_manual(values = c("darkorchid3", "#50A45C", "#AF814B", "#5BBCD6")) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
xlab(str_c("Axis 1", " (", round(osm_pcoa_microbe$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(osm_pcoa_microbe$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
ggtitle("microbial communities")
dev.off()
# GRAPHING â- PCoAs DOM --------------------------------------
#looking at exudate features
dom_pco <- dom_stats_wdf%>%
spread(Timepoint, log)%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(mean_t0 = mean(T0, na.rm = TRUE))%>%
mutate(change = TF - mean_t0)%>%
ungroup()%>%
mutate(zscore = ((change - mean(change, na.rm = TRUE))/sd(change, na.rm = TRUE)))%>%
mutate(zscore = zscore + 78)%>%
select(-c(TF, T0, mean_t0, change))
dom_graphing <- dom_pco%>%
spread(5,6)
dorc_all_pcoa <- dom_pco%>%
unite(sample, c(1:4), sep = "_")%>%
spread(2,3)%>%
column_to_rownames(var = "sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
#This plots Eigenvalues
dorc_all_pcoa$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
# S3 method for pcoa
pco_scores_all <- dorc_all_pcoa$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
mutate(feature = "all")%>%
separate(sample, c("experiemnt", "Organism", "replicate", "DayNight"), sep = "_")
# Dorc_all_labile_exudates plot
pdf("./plots/dom_pcoa.pdf", width = 6, height = 5)
dorc_all_pcoa$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
separate(sample, c("experiemnt", "Organism", "replicate", "DayNight"), sep = "_")%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = Organism, shape = DayNight)) +
geom_point(stat = "identity", aes(size = 0.2)) +
scale_shape_manual(values = c(1,19)) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
xlab(str_c("Axis 1", " (", round(dorc_all_pcoa$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(dorc_all_pcoa$values$Relative_eig[2], digits = 4)*100, "%)", sep = "")) +
ggtitle("All DOM features")
dev.off()
# GRAPHING -- PCoA's Microbes ---------------------------------------------
pcoa_microbe <- microbe_no_rare%>%
# filter(OTU %in% micro_sigs_vector)%>%
filter(Timepoint == "TF")%>%
unite(sample, c(Organism, DayNight, Replicate), sep = "_")%>%
select(-c(sample_code, Experiment, Timepoint,
numOtus, sum, reads, ra))%>%
group_by(sample, OTU)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(zscore = (log10 -mean(log10))/sd(log10))%>%
mutate(zscore = zscore + 0.75)%>%
select(-c(log10, `Cells ÂµL-1`, cell_abun))%>%
spread(OTU, zscore)%>%
column_to_rownames("sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
pcoa_microbe$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
pdf("~/Documents/GitHub/DORCIERR/data/plots/microbe_pcoa.pdf", width = 6, height = 5)
pcoa_microbe$vectors%>%
as.data.frame()%>%
rownames_to_column("sample")%>%
separate(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = Organism, shape = DayNight)) +
geom_point(stat = "identity", aes(size = 0.2)) +
scale_shape_manual(values = c(1,19)) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
xlab(str_c("Axis 1", " (", round(pcoa_microbe$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(pcoa_microbe$values$Relative_eig[2], digits = 4)*100, "%)", sep = ""))
dev.off()
# GRAPHING -- DOC and XIC -------------------------------------------------
pdf("plots/doc_xic_compare.pdf", width = 6, height = 5)
doc_log10%>%
filter(DayNight == "Day")%>%
ggplot(aes(Organism, DOC)) +
geom_bar(stat = "summary", fun.y = "mean") +
facet_wrap(~Timepoint) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dom_stats_wdf%>%
filter(DayNight == "Day")%>%
ggplot(aes(Organism, log)) +
geom_bar(stat = "summary", fun.y = "sum") +
facet_wrap(~Timepoint) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
test <- dom_stats_wdf%>%
group_by(Timepoint, Organism, DayNight)%>%
summarize_if(is.numeric, mean)
write_csv(test, "test.csv")
# GRAPHING -- Extraction Efficiency ---------------------------------------
extraction_efficiency%>%
filter(DayNight == "Day")%>%
ggplot(aes(Organism, efficiency, color = Organism)) +
geom_boxplot() +
facet_wrap(~Timepoint) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
# SUMMARY -- DOM-----------------------------------------------------------------
summary_no_background <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real"))$feature_number%>%
length()
summary_no_back_trans <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real")%>%
filter(Dorcierr_transient == "real"))$feature_number%>%
length()
summary_log2 <-log2_features%>%
group_by(DayNight)%>%
nest()%>%
mutate(log2_change = map(data, ~ length(.x$feature_number)))%>%
select(-data)
summary_ttest <- t_pvals%>%
mutate(count = 1)%>%
select(c(Organism, DayNight, activity, count))%>%
group_by(Organism, DayNight, activity)%>%
summarize_if(is.numeric, sum)%>%
spread(DayNight, count)
summary_ttest_meta <- compound_prevalance%>%
mutate(data = map(data, ~ mutate(.x, count = 1)%>%
select(count)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)))%>%
unnest(data)
summary_average_xic <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
# filter(Timepoint == "T0")%>%
# select(-Timepoint)%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF))%>%
spread(Organism, log2_change)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))
summary_dunnett <- dunnetts_dom%>%
right_join(dom_stats_wdf%>%
select(c(feature_number, Timepoint, DayNight, Organism, log))%>%
group_by(feature_number,Timepoint, DayNight, Organism)%>%
summarize_if(is.numeric, mean, na.rm = TRUE), by = c("feature_number", "DayNight", "Organism"))%>%
left_join(networking, by = "feature_number")%>%
select(-p.value)
summary_count_dunnett <- dunnetts_dom%>%
select(activity, Organism, DayNight)%>%
group_by(activity, Organism, DayNight)%>%
mutate(count = 1)%>%
summarize_if(is.numeric, sum)
# summary_ttest <- t_pvals%>%
#   mutate(depletolites = map(data, ~ filter(.x, activity == "depletolites")$feature_number%>%
#                               length()),
#          accumlites = map(data, ~ filter(.x, activity == "accumulites")$feature_number%>%
#                             length()),
#          recalcitrant = map(data, ~ filter(.x, activity == "recalcitrant")$feature_number%>%
#                               length()))%>%
#   select(-data)
#
# summary_anova <- anova_dom_t0%>%
#   select(-c(feature_number, term, p.value, FDR))%>%
#   mutate(anova_groups_summary = 1)%>%
#   group_by(DayNight, activity, anova)%>%
#   summarize_if(is.numeric, sum)
write_csv(t_test_features%>%
filter(`characterization scores` == "Good"), "~/Documents/GitHub/DORCIERR/data/analysis/t_test_features.csv")
write_csv(summary_dunnett%>%
unite(sample, c(Organism, DayNight, Timepoint), sep = "_")%>%
spread(sample, log), "~/Documents/GitHub/DORCIERR/data/analysis/cytoscape_dunnetts.csv")
View(osm_metabolite_metabolite_corr)
