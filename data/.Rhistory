sample_pc = T0*pc,
log_snc = log(sample_nc),
log_spc = log(sample_pc))%>%
ungroup()%>%
group_by(Organism, Replicate, DayNight)%>%
mutate(weighted_log2 = weighted.mean(log2_change, log10(T0)))%>%
ungroup()%>%
filter(NOSC < 0,
DayNight == 'Day')
n_mulreg <- mul_reg%>%
filter(N > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC+log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z` + NOSC, data = .)
# summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
# Calculating modeled lability  value--------------------------------------------
# N present
n_mass_coe <- n_mulreg$coefficients["`row m/z`"]
n_nosc_coe <- n_mulreg$coefficients["NOSC"]
n_n_coe <- n_mulreg$coefficients["log_snc"]
n_intercept <- n_mulreg$coefficients["(Intercept)"]
#N absent
m_mass_coe <- mass_mulreg$coefficients["`row m/z`"]
m_nosc_coe <- mass_mulreg$coefficients["NOSC"]
m_intercept <- mass_mulreg$coefficients["(Intercept)"]
mul_reg_fcm <- mul_reg%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'Replicate'))
#Linear model
lability_lm <- mul_reg_fcm%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
# Cell vs modelled --------------------------------------------------------
# pdf("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.pdf", width = 15, height = 10)
mul_reg_fcm%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
# geom_text(aes(x = -11.4, y = 680,
#               label = paste("p-value: ", lab_p%>%
#                               formatC(format = "e", digits = 2), "***", sep = "")), size = 9) +
# geom_text(aes(x = -11.4, y = 650,
#               label = paste("r²: ", lab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
mul_reg <- log2_change_vals%>%
inner_join(t_pvals%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network, N, P, C, NOSC)%>%
filter(network != '-1'),
by = 'feature_number')%>%
left_join(net_activity, by = c('network', 'DayNight'))%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
filter(NOSC < 0,
DayNight == 'Day')%>%
group_by(Organism, DayNight, Replicate)%>%
mutate(nc = N/C,
pc = P/C,
activity2 = activity,
sample_nc = T0*nc,
sample_pc = T0*pc,
log_snc = log(sample_nc),
log_spc = log(sample_pc))%>%
ungroup()%>%
group_by(Organism, Replicate, DayNight)%>%
mutate(weighted_log2 = weighted.mean(log2_change, log10(T0)))%>%
ungroup()
n_mulreg <- mul_reg%>%
filter(N > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC+log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z` + NOSC, data = .)
# sink("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.txt")
# summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
# Calculating modeled lability  value--------------------------------------------
# N present
n_mass_coe <- n_mulreg$coefficients["`row m/z`"]
n_nosc_coe <- n_mulreg$coefficients["NOSC"]
n_n_coe <- n_mulreg$coefficients["log_snc"]
n_intercept <- n_mulreg$coefficients["(Intercept)"]
#N absent
m_mass_coe <- mass_mulreg$coefficients["`row m/z`"]
m_nosc_coe <- mass_mulreg$coefficients["NOSC"]
m_intercept <- mass_mulreg$coefficients["(Intercept)"]
mul_reg_fcm <- mul_reg%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'Replicate'))
#Linear model
lability_lm <- mul_reg_fcm%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
# Cell vs modelled --------------------------------------------------------
# pdf("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.pdf", width = 15, height = 10)
mul_reg_fcm%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
# geom_text(aes(x = -11.4, y = 680,
#               label = paste("p-value: ", lab_p%>%
#                               formatC(format = "e", digits = 2), "***", sep = "")), size = 9) +
# geom_text(aes(x = -11.4, y = 650,
#               label = paste("r²: ", lab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
mul_reg <- log2_change_vals%>%
inner_join(t_pvals%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network, N, P, C, NOSC)%>%
filter(network != '-1'),
by = 'feature_number')%>%
left_join(net_activity, by = c('network', 'DayNight'))%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
filter(NOSC < 0,
DayNight == 'Day')%>%
group_by(Organism, DayNight, Replicate)%>%
mutate(nc = N/C,
pc = P/C,
activity2 = activity,
sample_nc = T0*nc/sum(T0),
sample_pc = T0*pc/sum(T0),
log_snc = log(sample_nc),
log_spc = log(sample_pc))%>%
ungroup()%>%
group_by(Organism, Replicate, DayNight)%>%
mutate(weighted_log2 = weighted.mean(log2_change, log10(T0)))%>%
ungroup()
n_mulreg <- mul_reg%>%
filter(N > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC+log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z` + NOSC, data = .)
# sink("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.txt")
# summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
n_mass_coe <- n_mulreg$coefficients["`row m/z`"]
n_nosc_coe <- n_mulreg$coefficients["NOSC"]
n_n_coe <- n_mulreg$coefficients["log_snc"]
n_intercept <- n_mulreg$coefficients["(Intercept)"]
#N absent
m_mass_coe <- mass_mulreg$coefficients["`row m/z`"]
m_nosc_coe <- mass_mulreg$coefficients["NOSC"]
m_intercept <- mass_mulreg$coefficients["(Intercept)"]
mul_reg_fcm <- mul_reg%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'Replicate'))
#Linear model
lability_lm <- mul_reg_fcm%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
# Cell vs modelled --------------------------------------------------------
# pdf("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.pdf", width = 15, height = 10)
mul_reg_fcm%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
# geom_text(aes(x = -11.4, y = 680,
#               label = paste("p-value: ", lab_p%>%
#                               formatC(format = "e", digits = 2), "***", sep = "")), size = 9) +
# geom_text(aes(x = -11.4, y = 650,
#               label = paste("r²: ", lab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
# STATS - multiple regressions --------------------------------------------
mul_reg <- log2_change_vals%>%
inner_join(t_pvals%>%
# filter(activity != 'recalcitrant')%>%
# rename(feat_activity = activity)%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network, N, P, C, NOSC)%>%
filter(network != '-1'),
by = 'feature_number')%>%
left_join(net_activity, by = c('network', 'DayNight'))%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
group_by(Organism, DayNight, Replicate)%>%
mutate(nc = N/C,
pc = P/C,
activity2 = activity,
sample_nc = T0*nc,
sample_pc = T0*pc,
log_snc = log(sample_nc),
log_spc = log(sample_pc))%>%
ungroup()%>%
filter(NOSC <= 0,
DayNight == 'Day')
n_mulreg <- mul_reg%>%
filter(N > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC+log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC, data = .)
# summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
n_mass_coe <- n_mulreg$coefficients["`row m/z`"]
n_nosc_coe <- n_mulreg$coefficients["NOSC"]
n_n_coe <- n_mulreg$coefficients["log_snc"]
n_intercept <- n_mulreg$coefficients["(Intercept)"]
n_mano_coe <- n_mulreg$coefficients["`row m/z`:NOSC"]
#N absent
m_mass_coe <- mass_mulreg$coefficients["`row m/z`"]
m_nosc_coe <- mass_mulreg$coefficients["NOSC"]
m_intercept <- mass_mulreg$coefficients["(Intercept)"]
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + nc_ra*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))
lability_val <- log2_change_vals%>%
inner_join(t_pvals%>%
# filter(activity != 'depletolite')%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network, C:dG)%>%
filter(network != '-1'),
by = 'feature_number')%>%
left_join(metadata%>%
select(feature_number, `row m/z`),
by = 'feature_number')%>%
left_join(net_activity,
by = c('network', 'DayNight'))%>%
left_join(net_glm%>%
filter(DayNight == 'Day',
activity == 'depletolite',
response_var == 'row m/z')%>%
select(DayNight, r2)%>%
rename(mass_r2 = r2),
by = 'DayNight')%>%
left_join(nc_loglin%>%
filter(activity == 'depletolite')%>%
select(DayNight, r2)%>%
rename(nc_r2 = r2),
by = 'DayNight')%>%
left_join(pc_loglin%>%
filter(activity == 'depletolite')%>%
select(DayNight, r2)%>%
rename(pc_r2 = r2),
by = 'DayNight')%>%
left_join(fcm_T0_5%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'DayNight', 'Replicate'))%>%
# filter(activity == 'depletolite')%>%
select(-c(Experiment, TF))%>%
group_by(Organism, DayNight, Replicate)%>%
mutate(nc = N/C,
pc = P/C,
sample_nc = T0*nc,
log_snc = log(sample_nc),
sample_pc = T0*pc,
log_spc = log(sample_pc),
activity2 = activity,
nc_ra = sample_nc/sum(T0),
pc_ra = sample_pc/sum(T0),
mass_x_r2 = `row m/z`/mean(`row m/z`)*mass_r2,
nc_x_r2 = nc_ra*nc_r2,
pc_x_r2 = pc_ra*pc_r2,
lability = mass_x_r2  + pc_x_r2) #nc was taken out because not significant p value
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))
#Linear model
lability_lm <- mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
mul_reg_fcm <- mul_reg%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
left_join(fcm_T0_5%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'DayNight', 'Replicate'))
mul_reg_fcm <- mul_reg%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(N > 0 ~ (`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe +  n_intercept),
N == 0 ~ (`row m/z`*m_mass_coe + NOSC*m_nosc_coe + m_intercept),
TRUE ~ NA_real_))%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
left_join(fcm_T0_5%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'Replicate'))
#Linear model
lability_lm <- mul_reg_fcm%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
# geom_text(aes(x = -12.8, y = 680,
#               label = paste("p-value: ", lab_p%>%
#                               formatC(format = "e", digits = 2), "***", sep = "")), size = 9) +
# geom_text(aes(x = -12.8, y = 650,
#               label = paste("r²: ", lab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
weight_l2%>%
ggplot(aes(weighted_log2, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = bquote(Weighted ~Log[2] ~Change(Log[2]*XIC))) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
head(mul_reg)
n_mulreg <- mul_reg%>%
filter(N > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`+NOSC+log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z` + NOSC, data = .)
# sink("~/Documents/SDSU_Scripps/DORCIERR/MLR_compare/xic.txt")
# summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
