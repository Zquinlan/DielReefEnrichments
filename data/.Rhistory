summary_ttest_meta <- compound_prevalance%>%
unnest(data)%>%
group_by(reactivity, DayNight)%>%
nest()%>%
mutate(data = map(data, ~ mutate(.x, count = 1)%>%
select(count)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)))%>%
unnest(data)%>%
unite(active, c(DayNight, reactivity), sep = "_")%>%
spread(active, count)
View(summary_ttest_meta)
summary_ttest_meta <- compound_prevalance%>%
unnest(data)%>%
group_by(reactivity, DayNight)%>%
nest()%>%
mutate(data = map(data, ~ mutate(.x, count = 1)%>%
select(count)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)))%>%
unnest(data)
# META-STATS --Compounds prevalance ---------------------------------------
compound_prevalance <- t_pvals%>%
mutate(exudate_type = 1)%>%
mutate(fdr_mixed = case_when(FDR_greater < 0.05 ~ FDR_greater,
FDR_lesser < 0.05 ~ FDR_lesser))%>%
select(c(1:3, activity, fdr_mixed))%>%
unite(org_act, c(Organism, activity), sep = "_")%>%
spread(org_act, fdr_mixed)%>%
group_by(DayNight, feature_number)%>%
nest()%>%
mutate(data = map(data, ~ mutate(.x, reactivity = paste(colnames(.)[!is.na(.) > 0], sep = ", ", collapse = ", "))))%>%
unnest(data)%>%
left_join(networking, by = "feature_number")%>%
group_by(DayNight, reactivity)%>%
nest()
summary_ttest_meta <- compound_prevalance%>%
mutate(data = map(data, ~ mutate(.x, count = 1)%>%
select(count)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)))%>%
unnest(data)
View(t_pvals)
View(t_pvals%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite"))
View(t_pvals%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"))
write_csv(t_pvals%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_depletolites" )
compound_prevalance%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(exudate_type, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
compound_prevalance%>%
unnest(data)%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(exudate_type, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
compound_prevalance%>%
unnest(data)%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(reactivity, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
compound_prevalance%>%
unnest(data)%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(reactivity, y = .$N/.$C, col = reactivity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
compound_prevalance%>%
unnest(data)%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(reactivity, y = .$N/.$C, col = reactivity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
legend.position = "none"# get rid of legend panel bg
)
compound_prevalance%>%
unnest(data)%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(reactivity, y = .$N/.$C, col = reactivity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
legend.position = "none"# get rid of legend panel bg
)
write_csv(t_pvals%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_depletolites.csv" )
t_pvals%>%
left_join(networking, by = "feature_number")%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "summary", fun.y = mean) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
filter(`characterization scores` == "Good")%>%
fitler(activity != "reclacitrant")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
filter(`characterization scores` == "Good")%>%
filter(activity != "reclacitrant")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
filter(`characterization scores` == "Good")%>%
filter(activity != "recalcitrant")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
head(dom_stats_wdf)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
left_join(dom_stats_wdf%>%
filter(Timepoint == "T0")%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean)%>%
select(-Replicate), by = c("Organism", "DayNight", "feature_number"))%>%
filter(`characterization scores` == "Good")%>%
filter(activity != "recalcitrant")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity, size = log)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
t_pvals%>%
left_join(networking, by = "feature_number")%>%
left_join(dom_stats_wdf%>%
filter(Timepoint == "T0")%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean),
by = c("Organism", "DayNight", "feature_number"))%>%
filter(`characterization scores` == "Good")%>%
filter(activity != "recalcitrant")%>%
ggplot(aes(Organism, y = .$N/.$C, col = activity, size = log)) +
facet_wrap(~DayNight) +
# geom_boxplot() +
geom_point(stat = "identity") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
write_csv(t_pvals%>% filter(Organism == "Pocillopora verrucosa", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_accumulites.csv" )
write_csv(t_pvals%>% filter(Organism == "Dictyota", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota.csv" )
write_csv(t_pvals%>% filter(Organism == "Dictyota", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_accumulite.csv" )
write_csv(t_pvals%>% filter(Organism == "Dictyota", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_delpletolite.csv" )
head(dom_stats_wdf)
head(t_pvals)
summary_average_xic <- dom_stats_wdf%>%
select(-Replciate)%>%
group_by(Timepoint, DayNight, Organism, feature_number)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
filter(Timepoint == "T0")%>%
spread(Organism, log)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))
summary_average_xic <- dom_stats_wdf%>%
select(-Replicate)%>%
group_by(Timepoint, DayNight, Organism, feature_number)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
filter(Timepoint == "T0")%>%
spread(Organism, log)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))
head(summary_average_xic)
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_accumulites.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_accumulite.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_delpletolite.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_depletolites.csv" )
head(log2_features)
summary_average_xic <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
filter(log2_change >= 1 | log2_change <= -1)%>%
ungroup()
head(summary_average_xic)
summary_average_xic <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
filter(log2_change >= 1 | log2_change <= -1)%>%
ungroup()%>%
select(-c(T0, TF))%>%
spread(Organism, log2_change)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))
head(summary_average_xic)
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_accumulites.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_accumulite.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_delpletolite.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_depletolites.csv" )
summary_average_xic <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF))%>%
spread(Organism, log2_change)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_accumulites.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Pocillopora verrucosa", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/pocillopora_depletolites.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "accumulite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_accumulite.csv" )
write_csv(summary_average_xic%>% filter(Organism == "Dictyota", activity == "depletolite")%>% left_join(networking, by = "feature_number"), "./analysis/dictyota_delpletolite.csv" )
head(summary_average_xic)
# # STATS -- ANOVA metabolties Organism T0 -------------------------------------------------------
anova_dom_t0_df <- t_pvals%>%
unnest(data)%>%
select(c(DayNight, feature_number, activity))%>%
left_join(dom_stats_wdf, by = c("feature_number", "DayNight"))%>%
filter(Timepoint == "T0")%>%
group_by(feature_number, DayNight, activity)
head(t_pvals)
# # STATS -- ANOVA metabolties Organism T0 -------------------------------------------------------
anova_dom_t0_df <- t_pvals%>%
select(c(DayNight, feature_number, activity))%>%
left_join(dom_stats_wdf, by = c("feature_number", "DayNight"))%>%
filter(Timepoint == "T0")%>%
group_by(feature_number, DayNight, activity)
# # STATS -- ANOVA metabolties Organism T0 -------------------------------------------------------
anova_dom_t0_df <- t_pvals%>%
select(c(DayNight, feature_number, activity))%>%
left_join(dom_stats_wdf, by = c("feature_number", "DayNight"))%>%
filter(Timepoint == "T0")
dom_dunnetts <- anova_dom_t0_df%>%
mutate(Organism = factor(Organism))%>%
mutate(Organism = fct_relevel(Organism, organism_order_dom))%>%
group_by(feature_number, DayNight, activity)%>%
nest()%>%
mutate(data = map(data, ~ aov(log ~ Organism, data = .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(data, ~summary(.x)%>%
tidy()))%>%
select(-data)%>%
unnest(dunnett_summary)%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
# STATS POST-HOC -- DOM Dunnetts T0 ---------------------------------------
organism_order_dom <- as.factor(anova_dom_t0_df$Organism)%>%
relevel("Water control")%>%
levels()%>%
as.vector()
dom_dunnetts <- anova_dom_t0_df%>%
mutate(Organism = factor(Organism))%>%
mutate(Organism = fct_relevel(Organism, organism_order_dom))%>%
group_by(feature_number, DayNight, activity)%>%
nest()%>%
mutate(data = map(data, ~ aov(log ~ Organism, data = .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(data, ~summary(.x)%>%
tidy()))%>%
select(-data)%>%
unnest(dunnett_summary)%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
warnings()
head(anova_dom_to   )
head(anova_dom_t0_df)
dom_dunnetts <- anova_dom_t0_df%>%
group_by(feature_number, DayNight, activity)%>%
mutate(sum = sum(log))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
mutate(Organism = factor(Organism))%>%
mutate(Organism = fct_relevel(Organism, organism_order_dom))%>%
nest()%>%
mutate(data = map(data, ~ aov(log ~ Organism, data = .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(data, ~summary(.x)%>%
tidy()))%>%
select(-data)%>%
unnest(dunnett_summary)%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
