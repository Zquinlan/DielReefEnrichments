as.matrix()
canopus_y <- canopus_training['log2_change']%>%
as.matrix()
canopus_test_x <-  canopus_test[2:ncol(canopus_test)]%>%
as.matrix()
canopus_test_y <- canopus_test['log2_change']%>%
as.matrix()
#running
glmnet_canopus <- cv.glmnet(canopus_x, canopus_y, parallel = TRUE)
lambda_se <- glmnet_canopus$lambda.1se
#running model with parameters after lasso
canopus_model <- glmnet(canopus_x, canopus_y, intercept = TRUE, lambda = lambda_se, standarize = TRUE)
canopus_coeff <- coef(canopus_model)%>%
as.matrix()%>%
as.data.frame()%>%
rename(coefficients = 1)%>%
rownames_to_column("variable")%>%
filter(coefficients != 0)
intercept <- canopus_coeff[[1,2]]
predicted_training <- predict(canopus_model, newx = canopus_x)
predicted <- predict(canopus_model, newx = canopus_test_x)
rootmse <- rmse_vec(as.vector(canopus_test_y), as.vector(predicted))
rootmse_training <- rmse_vec(as.vector(canopus_y), as.vector(predicted_training))
canopus_model$dev.ratio
predicted%>%
as.data.frame()%>%
rename(predicted = 1)%>%
add_column(actuals = canopus_test_y)%>%
rownames_to_column('sample')%>%
ggplot() +
geom_point(aes(sample, actuals), color = 'blue') +
geom_point(aes(sample, predicted), color = 'red')
sink('./analysis/model_rmse_r2.txt')
rootmse
rootmse_training
canopus_model$dev.ratio
sink()
canopus_weighted_lability <- feature_stats_wdf%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
inner_join(canopus_mulreg%>%
rownames_to_column("row")%>%
separate(row, c('feature_number', 'Organism', 'Replicate'), sep = "_")%>%
select(-log2_change)%>%
gather(variable, value, 4:ncol(.))%>%
inner_join(canopus_coeff, by = 'variable')%>%
mutate(modeled_lab = value*coefficients)%>%
select(feature_number, Organism, modeled_lab)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(modeled_lab = modeled_lab + intercept),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(weighted_lability = spatstat::weighted.median(modeled_lab, log10))%>%
# mutate(weighted_lability = mean(modeled_lab))%>%
group_by(Organism)%>%
mutate(x_err = sd(weighted_lability))%>%
select(Organism, weighted_lability, x_err)%>%
unique()%>%
summarize_if(is.numeric, mean)%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
group_by(Organism)%>%
mutate(y_err = sd(cells_ul))%>%
summarize_if(is.numeric, mean),
by = c('Organism'))
#
# # dredge_n_select <- MuMIn::dredge(lm_test_canopus)
# # test <- AIC(lm_test_canopus)
#
canopus_weighted_lability_stats <- feature_stats_wdf%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
inner_join(canopus_mulreg%>%
rownames_to_column("row")%>%
separate(row, c('feature_number', 'Organism', 'Replicate'), sep = "_")%>%
select(-log2_change)%>%
gather(variable, value, 4:ncol(.))%>%
inner_join(canopus_coeff, by = 'variable')%>%
mutate(modeled_lab = value*coefficients)%>%
select(feature_number, Organism, modeled_lab)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(modeled_lab = modeled_lab + intercept),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(weighted_lability = spatstat::weighted.median(modeled_lab, log10))%>%
# mutate(weighted_lability = mean(modeled_lab))%>%
group_by(Organism)%>%
mutate(x_err = sd(weighted_lability))%>%
select(Organism, weighted_lability, x_err)%>%
unique()%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
group_by(Organism)%>%
mutate(y_err = sd(cells_ul))%>%
summarize_if(is.numeric, mean),
by = c('Organism'))
#Linear model
weight_lability_lm <- canopus_weighted_lability_stats%>%
lm(cells_ul ~ weighted_lability, data = .)
wlab_p <- (weight_lability_lm%>%
tidy()%>%
filter(term == 'weighted_lability'))$p.value
wlab_f <- (weight_lability_lm%>%
tidy()%>%
filter(term == 'weighted_lability'))$statistic
wlab_slope <- weight_lability_lm$coefficients["weighted_lability"]
wlab_intercept <- weight_lability_lm$coefficients["(Intercept)"]
wlab_r2 <- summary(weight_lability_lm)$adj.r.squared
pdf('~/Documents/GitHub/DORCIERR/data/plots/canopus_weighted_lability.pdf', width = 12, height = 10)
canopus_weighted_lability%>%
ggplot(aes(weighted_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
geom_errorbar(aes(ymin = cells_ul - y_err, ymax = cells_ul + y_err)) +
geom_errorbarh(aes(xmin = weighted_lability - x_err, xmax = weighted_lability + x_err))+
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote(Specific ~growth ~rate ~('Cells'~µL^-1 ~hr^-1)), x = "Metabolite pool modeled lability") +
# geom_text(aes(x = -1.3, y = 0.09,
#               label = paste("p-value: ", wlab_p%>%
#                               formatC(format = "e", digits = 2), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.086,
#               label = paste("F statistic: ", wlab_f%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.082,
#               label = paste("r²: ", wlab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.078,
#               label = paste("Cells µL^-1", " = ", wlab_slope%>%
#                               round(digits = 2), "*lability + ", wlab_intercept%>%
#                               round(digits = 2), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
#checking gaussian
pdf("./plots/canopus_gaussian_check.pdf")
gaussian_check <- prep(recipe)%>%
juice()%>%
gather(variable, value)%>%
inner_join(canopus_coeff%>% select(variable),
by = 'variable')%>%
group_by(variable)%>%
nest()%>%
mutate(non_transformed = map(data, ~ .x$value%>%
na.omit()%>%
car::qqPlot(ylab = variable, xlab = "Normal quantiles",
main = paste(variable, " Centered-Scaled"))))
dev.off()
# VIZUALIZATIONS -- CANOPUS Random Forest ---------------------------------
names(canopus_mulreg) <- make.names(names(canopus_mulreg))
rf <- foreach(ntree = 100, .combine=randomForest::combine, .multicombine=TRUE, .packages='randomForest') %dopar% {
randomForest(log2_change ~ ., canopus_mulreg, importance = TRUE, proximity = TRUE, ntree = ntree)
}
mda_canopus <- rf$importance%>%
as.data.frame()%>%
rownames_to_column("feature")
ggplot(mda_canopus, aes(x= reorder(feature, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity")
head(mda_canopus)
rf$localImportance
View(rf)
head(rf$importanceSD)
head(mda_canopus)
?randomForest
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity")
mean_se <- mda_canopus%>%
filter(`%IncMSE` >= mean(`%IncMSE`) + sd(`%IncMSE`))
mean_se <- (mda_canopus%>%
filter(`%IncMSE` == mean(`%IncMSE`) + sd(`%IncMSE`)))$feature
View(mda_canopus)
mda_canopus[2]
mean(mda_canopus[2]) + sd(mda_canopus[2])
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse == mean(inc_mse) + sd(inc_mse)))$feature
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse == mean(inc_mse) + sd(inc_mse)))
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse)))
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse),
inc_mse == min(inc_mse)))
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse),
inc_mse == min(inc_mse)))$feature
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse),
inc_mse == min(inc_mse)))
mean_se <- (mda_canopus%>%
mutate(inc_mse = as.numeric(`%IncMSE`))%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse)))
View(mean_se)
mean_se$feature[mean_se$inc_mse = min(mean_se$inc_mse)]
mean_se$feature[mean_se$inc_mse == min(mean_se$inc_mse)]
rf_xline <- mean_se$feature[mean_se$inc_mse == min(mean_se$inc_mse)]
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = rf_xline)
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = 11)
rf_xline <- nrow(mean_se)
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = 11)
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = 11, color = 'red')
rf_xline <- nrow(mean_se) + 0.5
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = 11, color = 'red')
ggplot(mda_canopus, aes(x= reorder(feature, -`%IncMSE`), y = `%IncMSE`)) +
geom_point(stat = "identity") +
geom_vline(xintercept = rf_xline, color = 'red')
# VIZUALIZATIONS -- CANOPUS Random Forest ---------------------------------
names(canopus_training) <- make.names(names(canopus_training))
rf <- foreach(ntree = 100, .combine=randomForest::combine, .multicombine=TRUE, .packages='randomForest') %dopar% {
randomForest(log2_change ~ ., canopus_training, importance = TRUE, proximity = TRUE, ntree = ntree)
}
?glmnet
as.vector()
# selecting variables to use in model
mean_se <- (mda_canopus%>%
rename(inc_mse = `%IncMSE`)%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse)))$features%>%
as.vector()
# selecting variables to use in model
mean_se <- (mda_canopus%>%
rename(inc_mse = `%IncMSE`)%>%
filter(inc_mse >= mean(inc_mse) + sd(inc_mse)))$feature%>%
as.vector()
training_rf_variables <- canopus_training%>%
select(c('log2_change', mean_se))
test_rf_variable <- canopus_test%>%
select(c('log2_change', mean_se))
training_x <- training_rf_variables[2:ncol(training_rf_variables)]%>%
as.matrix()
training_y <- training_rf_variables['log2_change']%>%
as.matrix()
test_x <- test_rf_variable[2:ncol(test_rf_variable)]%>%
as.matrix()
test_y <- test_rf_variable['log2_change']%>%
as.matrix()
#model
training_rf_variables <- canopus_training%>%
select(c('log2_change', mean_se))
test_rf_variable <- canopus_test%>%
select(c('log2_change', mean_se))
training_x <- training_rf_variables[2:ncol(training_rf_variables)]%>%
as.matrix()
training_y <- training_rf_variables['log2_change']%>%
as.matrix()
test_rf_variable <- canopus_test%>%
select(c('log2_change', mean_se))
head(canopus_test)
View(canopus_test)
test_rf_variable <- canopus_test%>%
select(c('log2_change', mean_se))
test_rf_variable <- canopus_test
test_x <- test_rf_variable[2:ncol(test_rf_variable)]%>%
as.matrix()
test_y <- test_rf_variable['log2_change']%>%
as.matrix()
rf_can_model <- glmnet(training_x, training_y, intercept = TRUE, standarize = TRUE)
predicted_training <- predict(rf_can_model, newx = training_x)
predicted <- predict(rf_can_model, newx = test_x)
rf_can_model <- glm(log2_change ~ ., data = training_rf_variables)
View(rf_can_model)
summary(rf_can_model)
rf_can_model <- glm(log2_change ~ mean_se, data = canopus_training)
rf_can_model <- glm(log2_change ~ c(mean_se), data = canopus_training)
rf_can_model <- lm(log2_change ~ ., data = training_rf_variables)
summary(rf_can_model)
coef(rf_can_model)
rf_canopus_coeff <- coef(canopus_model)%>%
as.matrix()%>%
as.data.frame()%>%
rename(coefficients = 1)%>%
rownames_to_column("variable")%>%
filter(coefficients != 0)
rf_intercept = rf_canopus_coeff[[1,2]]
canopus_weighted_lability_stats <- feature_stats_wdf%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
inner_join(canopus_mulreg%>%
rownames_to_column("row")%>%
separate(row, c('feature_number', 'Organism', 'Replicate'), sep = "_")%>%
select(-log2_change)%>%
gather(variable, value, 4:ncol(.))%>%
inner_join(rf_canopus_coeff, by = 'variable')%>%
mutate(modeled_lab = value*coefficients)%>%
select(feature_number, Organism, modeled_lab)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(modeled_lab = modeled_lab + rf_intercept),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(weighted_lability = spatstat::weighted.median(modeled_lab, log10))%>%
# mutate(weighted_lability = mean(modeled_lab))%>%
group_by(Organism)%>%
mutate(x_err = sd(weighted_lability))%>%
select(Organism, weighted_lability, x_err)%>%
unique()%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
group_by(Organism)%>%
mutate(y_err = sd(cells_ul))%>%
summarize_if(is.numeric, mean),
by = c('Organism'))
#Linear model
weight_lability_lm <- canopus_weighted_lability_stats%>%
lm(cells_ul ~ weighted_lability, data = .)
wlab_p <- (weight_lability_lm%>%
tidy()%>%
filter(term == 'weighted_lability'))$p.value
wlab_f <- (weight_lability_lm%>%
tidy()%>%
filter(term == 'weighted_lability'))$statistic
wlab_slope <- weight_lability_lm$coefficients["weighted_lability"]
wlab_intercept <- weight_lability_lm$coefficients["(Intercept)"]
wlab_r2 <- summary(weight_lability_lm)$adj.r.squared
canopus_weighted_lability%>%
ggplot(aes(weighted_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
geom_errorbar(aes(ymin = cells_ul - y_err, ymax = cells_ul + y_err)) +
geom_errorbarh(aes(xmin = weighted_lability - x_err, xmax = weighted_lability + x_err))+
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote(Specific ~growth ~rate ~('Cells'~µL^-1 ~hr^-1)), x = "Metabolite pool modeled lability") +
# geom_text(aes(x = -1.3, y = 0.09,
#               label = paste("p-value: ", wlab_p%>%
#                               formatC(format = "e", digits = 2), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.086,
#               label = paste("F statistic: ", wlab_f%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.082,
#               label = paste("r²: ", wlab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.078,
#               label = paste("Cells µL^-1", " = ", wlab_slope%>%
#                               round(digits = 2), "*lability + ", wlab_intercept%>%
#                               round(digits = 2), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
canopus_weighted_lability <- feature_stats_wdf%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
inner_join(canopus_mulreg%>%
rownames_to_column("row")%>%
separate(row, c('feature_number', 'Organism', 'Replicate'), sep = "_")%>%
select(-log2_change)%>%
gather(variable, value, 4:ncol(.))%>%
inner_join(rf_canopus_coeff, by = 'variable')%>%
mutate(modeled_lab = value*coefficients)%>%
select(feature_number, Organism, modeled_lab)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(modeled_lab = modeled_lab + rf_intercept),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(weighted_lability = spatstat::weighted.median(modeled_lab, log10))%>%
# mutate(weighted_lability = mean(modeled_lab))%>%
group_by(Organism)%>%
mutate(x_err = sd(weighted_lability))%>%
select(Organism, weighted_lability, x_err)%>%
unique()%>%
summarize_if(is.numeric, mean)%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
group_by(Organism)%>%
mutate(y_err = sd(cells_ul))%>%
summarize_if(is.numeric, mean),
by = c('Organism'))
canopus_weighted_lability%>%
ggplot(aes(weighted_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
geom_errorbar(aes(ymin = cells_ul - y_err, ymax = cells_ul + y_err)) +
geom_errorbarh(aes(xmin = weighted_lability - x_err, xmax = weighted_lability + x_err))+
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote(Specific ~growth ~rate ~('Cells'~µL^-1 ~hr^-1)), x = "Metabolite pool modeled lability") +
# geom_text(aes(x = -1.3, y = 0.09,
#               label = paste("p-value: ", wlab_p%>%
#                               formatC(format = "e", digits = 2), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.086,
#               label = paste("F statistic: ", wlab_f%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.082,
#               label = paste("r²: ", wlab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.078,
#               label = paste("Cells µL^-1", " = ", wlab_slope%>%
#                               round(digits = 2), "*lability + ", wlab_intercept%>%
#                               round(digits = 2), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
rf_canopus_coeff <- coef(rf_can_model)%>%
as.matrix()%>%
as.data.frame()%>%
rename(coefficients = 1)%>%
rownames_to_column("variable")%>%
filter(coefficients != 0)
rf_intercept = rf_canopus_coeff[[1,2]]
canopus_weighted_lability <- feature_stats_wdf%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
inner_join(canopus_mulreg%>%
rownames_to_column("row")%>%
separate(row, c('feature_number', 'Organism', 'Replicate'), sep = "_")%>%
select(-log2_change)%>%
gather(variable, value, 4:ncol(.))%>%
inner_join(rf_canopus_coeff, by = 'variable')%>%
mutate(modeled_lab = value*coefficients)%>%
select(feature_number, Organism, modeled_lab)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
mutate(modeled_lab = modeled_lab + rf_intercept),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(weighted_lability = spatstat::weighted.median(modeled_lab, log10))%>%
# mutate(weighted_lability = mean(modeled_lab))%>%
group_by(Organism)%>%
mutate(x_err = sd(weighted_lability))%>%
select(Organism, weighted_lability, x_err)%>%
unique()%>%
summarize_if(is.numeric, mean)%>%
left_join(fcm_T0_5%>%
filter(DayNight == 'Day')%>%
group_by(Organism)%>%
mutate(y_err = sd(cells_ul))%>%
summarize_if(is.numeric, mean),
by = c('Organism'))
canopus_weighted_lability%>%
ggplot(aes(weighted_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
geom_errorbar(aes(ymin = cells_ul - y_err, ymax = cells_ul + y_err)) +
geom_errorbarh(aes(xmin = weighted_lability - x_err, xmax = weighted_lability + x_err))+
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote(Specific ~growth ~rate ~('Cells'~µL^-1 ~hr^-1)), x = "Metabolite pool modeled lability") +
# geom_text(aes(x = -1.3, y = 0.09,
#               label = paste("p-value: ", wlab_p%>%
#                               formatC(format = "e", digits = 2), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.086,
#               label = paste("F statistic: ", wlab_f%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.082,
#               label = paste("r²: ", wlab_r2%>%
#                               round(digits = 4), sep = "")), size = 9) +
# geom_text(aes(x = -1.3, y = 0.078,
#               label = paste("Cells µL^-1", " = ", wlab_slope%>%
#                               round(digits = 2), "*lability + ", wlab_intercept%>%
#                               round(digits = 2), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
