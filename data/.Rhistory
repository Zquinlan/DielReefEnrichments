asvDiversity <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
spread(OTU, ra)%>%
gather(OTU, ra, 8:ncol(.))%>%
mutate(ra = replace_na(ra, 0))%>%
spread(OTU, ra)%>%
select(Organism, DayNight, 8:ncol(.))%>%
group_by(Organism, DayNight)%>%
nest()%>%
mutate(shannon = map(data, ~ diversity(.x, index = 'shannon')),
specN = map(data, ~ rowSums(.x > 0, na.rm = TRUE)))%>%
unnest(c(shannon, specN))%>%
mutate(eveness = shannon/log(specN))
# STATS -- Diversity and Richness -----------------------------------------
asvDiversity <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
spread(OTU, ra)%>%
gather(OTU, ra, 8:ncol(.))%>%
mutate(ra = replace_na(ra, 0))%>%
spread(OTU, ra)%>%
select(Organism, DayNight, 8:ncol(.))%>%
group_by(Organism, DayNight)%>%
nest()%>%
mutate(shannon = map(data, ~ diversity(.x, index = 'shannon')),
specN = map(data, ~ rowSums(.x > 0, na.rm = TRUE)))%>%
unnest(c(shannon, specN))%>%
mutate(eveness = shannon/log(specN))
head(asvDiversity)
# STATS -- Diversity and Richness -----------------------------------------
asvDiversity <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
spread(OTU, ra)%>%
gather(OTU, ra, 8:ncol(.))%>%
mutate(ra = replace_na(ra, 0))%>%
spread(OTU, ra)%>%
select(Organism, DayNight, 8:ncol(.))%>%
group_by(Organism, DayNight)%>%
nest()%>%
mutate(shannon = map(data, ~ diversity(.x, index = 'shannon')),
specN = map(data, ~ rowSums(.x > 0, na.rm = TRUE)))
View(asvDiversity)
# STATS -- Diversity and Richness -----------------------------------------
asvDiversity <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
spread(OTU, ra)%>%
gather(OTU, ra, 8:ncol(.))%>%
mutate(ra = replace_na(ra, 0))%>%
spread(OTU, ra)%>%
select(Organism, DayNight, 8:ncol(.))
head(mmicrobe_combined)
head(microbe_combined)
test <- microbe_combined%>% select(OTU, sample_code, ra)%>% column_to_rownames(var = 'sample_code')%>% spread(OTU, ra)
test <- microbe_combined%>% select(OTU, sample_code, ra)%>% spread(OTU, ra)%>% column_to_rownames(var = 'sample_code')
head(test)
test2 <- test%>% diversity()
head(test2)
View(test2)
test3 <- test2%>% rownames_to_column(var = 'sample')
test3 <- test2%>% as.data.frame()%>% rownames_to_column(var = 'sample')
View(test2)
test <- microbe_combined%>% unite(sample, c('Organism', 'Replicate', 'DayNight', 'Timepoint'))%>% select(OTU, sample, ra)%>% spread(OTU, ra)%>% column_to_rownames(var = 'sample')
test2 <- test%>% diversity()
test3 <- test2%>% as.data.frame()%>% rownames_to_column(var = 'sample')
View(test)
View(test3)
View(unifracTail)
## Plot Eigenvalues
pcoa$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
asvSummarySigs%>%
ggplot(aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_text(aes(label = shape), family= 'OpenSansEmoji') +
geom_text_repel(aes(label = label), nudge_y = 0.04, nudge_x = 0.05, cex = 5, max.overlaps = 20) +
geom_point(data = asvSummaryNonDayNightSigs, aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_point(data = asvNonSigSummary, aes(xVal, yVal, color = 'Water control', size = maxRa, alpha = 0.7)) +
scale_color_manual(values = c("#669900", "#FF850A", "#9900FF", "#33CC33", 'Grey')) +
scale_size_continuous(range = c(3,15), breaks = c(0.005, 0.01, 0.1, 0.3, 0.5)) +
guides(size = guide_legend(title = 'Relative Abundance', override.aes = aes(label = '\u2022')),
color  = guide_legend(title = 'Organism', override.aes = aes(label = '\u2022'))) +
labs(color = 'Organism',
x = bquote(atop(Organism ~specificity, ~((Algal ~max- ~Coral ~max)/(~Overall ~max)))),
y= bquote(atop(Diel ~specificity, ~((Day ~max- ~Night ~max)/(~Overall ~max))))) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"),
axis.text = element_text(size = 25),
axis.title = element_text(size = 25))
# STATS permutation ANOVA -- Microbe TWO-Way ------------------------------------------
aov_microbe <- microbe_combined%>%
filter(abundant == "abundant")%>%
select(-abundant)%>%
inner_join(ra_bigger_TF%>%
ungroup()%>%
select(OTU)%>%
unique(), by = 'OTU')%>%
spread(Timepoint, ra)%>%
group_by(Organism, DayNight, OTU)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
delta = TF-T0,
delta = case_when(delta < 0 ~ 0,
TRUE ~ delta))%>%
ungroup()%>%
group_by(OTU)%>%
nest()%>%
mutate(anova = map(data, ~ aovp(TF ~ Organism*DayNight, data = .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
select(term, `Pr.Prob.`)))%>%
select(-data)%>%
unnest(anova)
anova_microbe_pvalues <- aov_microbe%>%
ungroup()%>%
# filter(p.value < 0.05)%>%
mutate(FDR = p.adjust(.$`Pr.Prob.`, method = "BH"),
term = gsub('1', '', term))%>%
filter(FDR < 0.05)
organism_significant_microbes <- (anova_microbe_pvalues%>%
filter(term == "Organism" | term == 'Organism:DayNight'))$OTU%>%
unique()%>%
as.vector()
DayNight_significant_microbes <- (anova_microbe_pvalues%>%
filter(term == "Organism:DayNight"))$OTU%>%
as.vector()
different_microbes <- anova_microbe_pvalues$OTU%>%
unique()%>%
as.vector()
# VIZUALIZATIONS -- Asv summary plot -------------------------------------
aovMicrobeSummary <- anova_microbe_pvalues%>%
select(-Pr.Prob.)%>%
spread(term, FDR)
asvSummaryPlot <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
group_by(OTU, DayNight, Organism)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
filter(Organism != 'CCA')%>%
group_by(OTU)%>%
mutate(maxRa = max(ra),
size = case_when(maxRa <= 0.05 ~ 'ra <= 0.05',
maxRa > 0.05 & maxRa <= 0.2 ~ '0.5 < ra <= 0.2',
maxRa > 0.2 & maxRa <= 0.3 ~ '0.2 < ra <= 0.3',
maxRa > 0.3  ~ 'ra > 0.3'),
size = as.factor(size),
# waRa = ra - `Water control`,
# waRa = case_when(ra < 0 ~ 0,
#                TRUE ~ waRa),
coral = case_when(Organism == 'Pocillopora verrucosa' | Organism == 'Porites lobata' ~ ra,
TRUE ~ NA_real_),
algae = case_when(Organism == 'Dictyota' | Organism == 'Turf' ~ ra,
TRUE ~ NA_real_),
night = case_when(DayNight == 'Night' ~ ra,
TRUE ~ NA_real_),
day = case_when(DayNight == 'Day' ~ ra,
TRUE ~ NA_real_),
#max values
maxCoral = max(coral, na.rm = TRUE),
maxCoral = as.numeric(gsub(-Inf, 0, maxCoral)),
maxAlgae = max(algae, na.rm = TRUE),
maxAlgae = as.numeric(gsub(-Inf, 0, maxAlgae)),
maxNight = max(night, na.rm = TRUE),
maxNight = as.numeric(gsub(-Inf, 0, maxNight)),
maxDay = max(day, na.rm = TRUE),
maxDay = as.numeric(gsub(-Inf, 0, maxDay)),
maxVal = max(ra),
maxOrg = case_when(maxVal == ra ~ Organism,
TRUE ~ NA_character_))%>%
select(OTU, maxRa, size, maxCoral:maxOrg)%>%
unique()%>%
filter(!is.na(maxOrg))%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
mutate(xVal = (maxAlgae - maxCoral)/maxVal,
yVal = (maxDay - maxNight)/maxVal,
label = case_when(maxRa > 0.3 ~ Genus,
maxRa > 0.005 & abs(xVal) > 0.5 ~ Genus,
TRUE ~ NA_character_),
label = case_when(label == 'uncultured' ~ paste('Uncultured', Family),
TRUE ~ label),
hjust = case_when(xVal < 0 ~ -0,
TRUE ~ 0),
vjust = case_when(yVal < 0 ~ -0.01,
TRUE ~ 0.01),
shape = case_when(yVal < 0 ~ emoji('crescent_moon'),
TRUE ~ '\u2600'))%>%
left_join(aovMicrobeSummary, by = 'OTU')%>%
mutate(maxOrg = case_when(is.na(Organism) & is.na(`Organism:DayNight`) ~ NA_character_,
TRUE ~ maxOrg),
shape = case_when(is.na(DayNight) & is.na(`Organism:DayNight`) ~ '\u2022',
TRUE ~ shape))
asvSummarySigs <- asvSummaryPlot%>%
filter(shape != '\u2022')
asvSummaryNonDayNightSigs <- asvSummaryPlot%>%
filter(shape == '\u2022')
asvNonSigSummary <- microbe_combined%>%
filter(Timepoint == 'TF',
!OTU %in% different_microbes)%>%
group_by(OTU, DayNight, Organism)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
filter(Organism != 'CCA')%>%
group_by(OTU)%>%
mutate(maxRa = max(ra),
size = case_when(maxRa <= 0.05 ~ 'ra <= 0.05',
maxRa > 0.05 & maxRa <= 0.2 ~ '0.5 < ra <= 0.2',
maxRa > 0.2 & maxRa <= 0.3 ~ '0.2 < ra <= 0.3',
maxRa > 0.3  ~ 'ra > 0.3'),
size = as.factor(size),
coral = case_when(Organism == 'Pocillopora verrucosa' | Organism == 'Porites lobata' ~ ra,
TRUE ~ NA_real_),
algae = case_when(Organism == 'Dictyota' | Organism == 'Turf' ~ ra,
TRUE ~ NA_real_),
night = case_when(DayNight == 'Night' ~ ra,
TRUE ~ NA_real_),
day = case_when(DayNight == 'Day' ~ ra,
TRUE ~ NA_real_),
#max values
maxCoral = max(coral, na.rm = TRUE),
maxCoral = as.numeric(gsub(-Inf, 0, maxCoral)),
maxAlgae = max(algae, na.rm = TRUE),
maxAlgae = as.numeric(gsub(-Inf, 0, maxAlgae)),
maxNight = max(night, na.rm = TRUE),
maxNight = as.numeric(gsub(-Inf, 0, maxNight)),
maxDay = max(day, na.rm = TRUE),
maxDay = as.numeric(gsub(-Inf, 0, maxDay)),
maxVal = max(ra),
maxOrg = 'Non significant')%>%
select(OTU, maxRa, size, maxCoral:maxOrg)%>%
unique()%>%
filter(!is.na(maxOrg),
maxRa > 0)%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
mutate(xVal = (maxAlgae - maxCoral)/maxVal,
yVal = (maxDay - maxNight)/maxVal,
shape = case_when(yVal < 0 ~ emoji('crescent_moon'),
TRUE ~ '\u2600'))
asvSummarySigs%>%
ggplot(aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_text(aes(label = shape), family= 'OpenSansEmoji') +
geom_text_repel(aes(label = label), nudge_y = 0.04, nudge_x = 0.05, cex = 5, max.overlaps = 20) +
geom_point(data = asvSummaryNonDayNightSigs, aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_point(data = asvNonSigSummary, aes(xVal, yVal, color = 'Water control', size = maxRa, alpha = 0.7)) +
scale_color_manual(values = c("#669900", "#FF850A", "#9900FF", "#33CC33", 'Grey')) +
scale_size_continuous(range = c(3,15), breaks = c(0.005, 0.01, 0.1, 0.3, 0.5)) +
guides(size = guide_legend(title = 'Relative Abundance', override.aes = aes(label = '\u2022')),
color  = guide_legend(title = 'Organism', override.aes = aes(label = '\u2022'))) +
labs(color = 'Organism',
x = bquote(atop(Organism ~specificity, ~((Algal ~max- ~Coral ~max)/(~Overall ~max)))),
y= bquote(atop(Diel ~specificity, ~((Day ~max- ~Night ~max)/(~Overall ~max))))) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"),
axis.text = element_text(size = 25),
axis.title = element_text(size = 25))
# VIZUALIZATIONS -- Asv summary plot -------------------------------------
aovMicrobeSummary <- anova_microbe_pvalues%>%
select(-Pr.Prob.)%>%
spread(term, FDR)
asvSummaryPlot <- microbe_combined%>%
filter(Timepoint == 'TF',
OTU %in% different_microbes)%>%
inner_join(ra_bigger_TF, by = c('OTU', 'DayNight', 'Organism'))%>%
group_by(OTU, DayNight, Organism)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
filter(Organism != 'CCA')%>%
group_by(OTU)%>%
mutate(maxRa = max(ra),
size = case_when(maxRa <= 0.05 ~ 'ra <= 0.05',
maxRa > 0.05 & maxRa <= 0.2 ~ '0.5 < ra <= 0.2',
maxRa > 0.2 & maxRa <= 0.3 ~ '0.2 < ra <= 0.3',
maxRa > 0.3  ~ 'ra > 0.3'),
size = as.factor(size),
# waRa = ra - `Water control`,
# waRa = case_when(ra < 0 ~ 0,
#                TRUE ~ waRa),
coral = case_when(Organism == 'Pocillopora verrucosa' | Organism == 'Porites lobata' ~ ra,
TRUE ~ NA_real_),
algae = case_when(Organism == 'Dictyota' | Organism == 'Turf' ~ ra,
TRUE ~ NA_real_),
night = case_when(DayNight == 'Night' ~ ra,
TRUE ~ NA_real_),
day = case_when(DayNight == 'Day' ~ ra,
TRUE ~ NA_real_),
#max values
maxCoral = max(coral, na.rm = TRUE),
maxCoral = as.numeric(gsub(-Inf, 0, maxCoral)),
maxAlgae = max(algae, na.rm = TRUE),
maxAlgae = as.numeric(gsub(-Inf, 0, maxAlgae)),
maxNight = max(night, na.rm = TRUE),
maxNight = as.numeric(gsub(-Inf, 0, maxNight)),
maxDay = max(day, na.rm = TRUE),
maxDay = as.numeric(gsub(-Inf, 0, maxDay)),
maxVal = max(ra),
maxOrg = case_when(maxVal == ra ~ Organism,
TRUE ~ NA_character_))%>%
select(OTU, maxRa, size, maxCoral:maxOrg)%>%
unique()%>%
filter(!is.na(maxOrg))%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
mutate(xVal = (maxAlgae - maxCoral)/maxVal,
yVal = (maxDay - maxNight)/maxVal,
label = case_when(maxRa > 0.3 ~ Genus,
maxRa > 0.005 & abs(xVal) > 0.5 ~ Genus,
TRUE ~ NA_character_),
label = case_when(label == 'uncultured' ~ paste('Uncultured', Family),
TRUE ~ label),
hjust = case_when(xVal < 0 ~ -0,
TRUE ~ 0),
vjust = case_when(yVal < 0 ~ -0.01,
TRUE ~ 0.01),
shape = case_when(yVal < 0 ~ emoji('crescent_moon'),
TRUE ~ '\u2600'))%>%
left_join(aovMicrobeSummary, by = 'OTU')%>%
mutate(maxOrg = case_when(is.na(Organism) & is.na(`Organism:DayNight`) ~ NA_character_,
TRUE ~ maxOrg),
shape = case_when(is.na(DayNight) & is.na(`Organism:DayNight`) ~ '\u2022',
TRUE ~ shape))
asvSummarySigs <- asvSummaryPlot%>%
filter(shape != '\u2022')
asvSummaryNonDayNightSigs <- asvSummaryPlot%>%
filter(shape == '\u2022')
asvNonSigSummary <- microbe_combined%>%
filter(Timepoint == 'TF',
!OTU %in% different_microbes)%>%
group_by(OTU, DayNight, Organism)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
filter(Organism != 'CCA')%>%
group_by(OTU)%>%
mutate(maxRa = max(ra),
size = case_when(maxRa <= 0.05 ~ 'ra <= 0.05',
maxRa > 0.05 & maxRa <= 0.2 ~ '0.5 < ra <= 0.2',
maxRa > 0.2 & maxRa <= 0.3 ~ '0.2 < ra <= 0.3',
maxRa > 0.3  ~ 'ra > 0.3'),
size = as.factor(size),
coral = case_when(Organism == 'Pocillopora verrucosa' | Organism == 'Porites lobata' ~ ra,
TRUE ~ NA_real_),
algae = case_when(Organism == 'Dictyota' | Organism == 'Turf' ~ ra,
TRUE ~ NA_real_),
night = case_when(DayNight == 'Night' ~ ra,
TRUE ~ NA_real_),
day = case_when(DayNight == 'Day' ~ ra,
TRUE ~ NA_real_),
#max values
maxCoral = max(coral, na.rm = TRUE),
maxCoral = as.numeric(gsub(-Inf, 0, maxCoral)),
maxAlgae = max(algae, na.rm = TRUE),
maxAlgae = as.numeric(gsub(-Inf, 0, maxAlgae)),
maxNight = max(night, na.rm = TRUE),
maxNight = as.numeric(gsub(-Inf, 0, maxNight)),
maxDay = max(day, na.rm = TRUE),
maxDay = as.numeric(gsub(-Inf, 0, maxDay)),
maxVal = max(ra),
maxOrg = 'Non significant')%>%
select(OTU, maxRa, size, maxCoral:maxOrg)%>%
unique()%>%
filter(!is.na(maxOrg),
maxRa > 0)%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
mutate(xVal = (maxAlgae - maxCoral)/maxVal,
yVal = (maxDay - maxNight)/maxVal,
shape = case_when(yVal < 0 ~ emoji('crescent_moon'),
TRUE ~ '\u2600'))
asvSummarySigs%>%
ggplot(aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_text(aes(label = shape), family= 'OpenSansEmoji') +
geom_text_repel(aes(label = label), nudge_y = 0.04, nudge_x = 0.05, cex = 5, max.overlaps = 20) +
geom_point(data = asvSummaryNonDayNightSigs, aes(xVal, yVal, color = maxOrg, size = maxRa)) +
geom_point(data = asvNonSigSummary, aes(xVal, yVal, color = 'Water control', size = maxRa, alpha = 0.7)) +
scale_color_manual(values = c("#669900", "#FF850A", "#9900FF", "#33CC33", 'Grey')) +
scale_size_continuous(range = c(3,15), breaks = c(0.005, 0.01, 0.1, 0.3, 0.5)) +
guides(size = guide_legend(title = 'Relative Abundance', override.aes = aes(label = '\u2022')),
color  = guide_legend(title = 'Organism', override.aes = aes(label = '\u2022'))) +
labs(color = 'Organism',
x = bquote(atop(Organism ~specificity, ~((Algal ~max- ~Coral ~max)/(~Overall ~max)))),
y= bquote(atop(Diel ~specificity, ~((Day ~max- ~Night ~max)/(~Overall ~max))))) +
theme(panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"),
axis.text = element_text(size = 25),
axis.title = element_text(size = 25))
# LOADING -- dataframes  ------------------------------------------------------
## FCM and fDOM data
dorc_fcm_fdom <- read_xlsx("~/Documents/GitHub/DORCIERR/data/raw/DOC_fDOM_FCM/DORCIERR_fDOM_FCM.xlsx")%>%
rename(sample_name =`Sample Name of DORCIERR_FCM_Final`)%>%
rename('DayNight' = 'Experiment')%>%
rename(Organism = 'Organsim')%>%
mutate(Organism = case_when(Organism == "Water" ~ "Water control",
TRUE ~ as.character(Organism)))
# CLEANING -- FCM ---------------------------------------------------------
fcm_wdf <- dorc_fcm_fdom%>%
dplyr::select(c(1:8,34:ncol(.)))
fcm_T0_5 <- dorc_fcm_fdom%>%
select(-c(1:4, 9:36, 38, 39))%>%
# filter(Timepoint == 'T0' | Timepoint == 'T4')%>%
spread(Timepoint, `Cells µL-1`)%>%
mutate(hour = case_when(Organism == 'Turf' ~ 23,
Organism == 'Dictyota'  ~ 23,
Organism == 'CCA'  ~ 23,
Organism == 'Porites lobata' ~ 48,
Organism == 'Pocillopora verrucosa' ~ 37,
Organism == 'Water control' ~ 37),
final_cells = case_when(Organism == 'Turf' ~ T4,
Organism == 'Dictyota'  ~ T4,
Organism == 'CCA'  ~ T4,
Organism == 'Porites lobata' ~ TF,
Organism == 'Pocillopora verrucosa' ~ T6,
Organism == 'Water control' ~ T6))%>%
group_by(Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cells_ul = (log(final_cells) - log(T0))/(hour))%>%
select(-c(T0:TF, hour))
head(fcm_wdf)
fcmJoin <- fcm_wdf%>%
select(Organism:Replicate, `Cells µL-1`)
head(fcmJoin)
# VIZUALIZATIONS -- asvPlots ------------------------------------------
asvPlots <- microbe_combined%>%
filter(Timepoint == "TF")%>%
group_by(OTU)%>%
filter(max(ra) > 0.005)%>%
ungroup()%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
unite(lab, c('Family', 'Genus'), sep = ' ')%>%
group_by(OTU, lab)%>%
nest()%>%
mutate(data = map(data, ~ggplot(.x, aes(Organism, ra, fill = Organism)) +
geom_boxplot() +
geom_point() +
scale_fill_manual(values = c(org_colors_no_water, 'blue')) +
scale_color_manual(values = c('grey', 'grey', 'grey', 'grey', 'grey', 'grey')) +
facet_wrap(~DayNight, nrow = 1) +
labs(y = 'Relative Abundance', x = 'Organism', title = lab) +
# ylim(0.0, 0.8) +
gen_theme()))
View(asvPlots)
# VIZUALIZATIONS -- asvPlots ------------------------------------------
asvPlots <- microbe_combined%>%
filter(Timepoint == "TF")%>%
group_by(OTU)%>%
filter(max(ra) > 0.001)%>%
ungroup()%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
unite(lab, c('Family', 'Genus'), sep = ' ')%>%
group_by(OTU, lab)%>%
nest()%>%
mutate(data = map(data, ~ggplot(.x, aes(Organism, ra, fill = Organism)) +
geom_boxplot() +
geom_point() +
scale_fill_manual(values = c(org_colors_no_water, 'blue')) +
scale_color_manual(values = c('grey', 'grey', 'grey', 'grey', 'grey', 'grey')) +
facet_wrap(~DayNight, nrow = 1) +
labs(y = 'Relative Abundance', x = 'Organism', title = lab) +
# ylim(0.0, 0.8) +
gen_theme()))
# VIZUALIZATIONS -- asvPlots ------------------------------------------
asvPlots <- microbe_combined%>%
filter(Timepoint == "TF")%>%
group_by(OTU)%>%
filter(max(ra) > 0.01)%>%
ungroup()%>%
separate(OTU, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
unite(lab, c('Family', 'Genus'), sep = ' ')%>%
group_by(OTU, lab)%>%
nest()%>%
mutate(data = map(data, ~ggplot(.x, aes(Organism, ra, fill = Organism)) +
geom_boxplot() +
geom_point() +
scale_fill_manual(values = c(org_colors_no_water, 'blue')) +
scale_color_manual(values = c('grey', 'grey', 'grey', 'grey', 'grey', 'grey')) +
facet_wrap(~DayNight, nrow = 1) +
labs(y = 'Relative Abundance', x = 'Organism', title = lab) +
# ylim(0.0, 0.8) +
gen_theme()))
pdf('plots/asvDiel.pdf', width = 15, height = 10)
asvPlots$data
dev.off()
View(microbe_combined%>% filter(OTU %like% '%Nautella%'))
View(microbe_combined%>% filter(OTU %like% '%nautella%'))
View(microbe_combined%>% filter(OTU %like% '%autella%'))
View(microbe_combined%>% filter(OTU %like% '%oseobact%'))
View(microbe_combined%>% filter(OTU %like% '%dong%'))
View(microbe_combined%>% filter(OTU %like% '%ongh%'))
View(microbe_combined%>% filter(OTU %like% '%onghicola%'))
View(microbe_combined%>% filter(OTU %like% '%hodobacteracea%'))
View(asvSummaryPlot%>% filter(xVal > 0, yVal > 0))
