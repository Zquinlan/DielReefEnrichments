select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnet_class <- read_csv("~/Documents/GitHub/ecoNet/verification/data/Moorea2017_MolNetEnhancer.csv")%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv('~/Documents/GitHub/ecoNet/verification/data/ecoNetConsensus.csv')%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(true_hits, by = 'feature_number')%>%
left_join(analog_hits, by = 'feature_number')%>%
left_join(csi_finger_id, by = 'feature_number')%>%
left_join(nap_df, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnet_class, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
network <- read_tsv('~/Documents/GitHub/ecoNet/verification/dorcierr/Node_info.tsv')%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
true_hits <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/libraryMatch_05202021.csv")%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analog_hits <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/analogMatch_05202021.csv")%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFinger_classys <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/csiFinger_classyfire.csv')%>%
rename(smiles = SMILES)
csi_finger_id <- read_tsv("~/Documents/GitHub/ecoNet/verification/dorcierr/summary_csi_fingerid.tsv")%>%
left_join(csiFinger_classys, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfrag_classy <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/MetFragSMILES.csv')%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
unique()
NAP_classy <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/NAPSMILES.csv')%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
nap_df <- read_tsv("~/Documents/GitHub/ecoNet/verification/dorcierr/moorea2017_NAP.tsv")%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfrag_classy, by = 'MetFragSMILES')%>%
left_join(NAP_classy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
unique()
canopus <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/canopus_summary.csv')%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnet_class <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/Moorea2017_MolNetEnhancer.csv")%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/ecoNetConsensus.csv')%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(true_hits, by = 'feature_number')%>%
left_join(analog_hits, by = 'feature_number')%>%
left_join(csi_finger_id, by = 'feature_number')%>%
left_join(nap_df, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnet_class, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
network <- read_tsv('~/Documents/GitHub/ecoNet/verification/dorcierr/Node_info.tsv')%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
true_hits <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/libraryMatch_05202021.csv")%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analog_hits <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/analogMatch_05202021.csv")%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFinger_classys <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/csiFinger_classyfire.csv')%>%
rename(smiles = SMILES)
csi_finger_id <- read_tsv("~/Documents/GitHub/ecoNet/verification/dorcierr/summary_csi_fingerid.tsv")%>%
left_join(csiFinger_classys, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfrag_classy <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/MetFragSMILES.csv')%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
unique()
NAP_classy <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/NAPSMILES.csv')%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
nap_df <- read_tsv("~/Documents/GitHub/ecoNet/verification/dorcierr/moorea2017_NAP.tsv")%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfrag_classy, by = 'MetFragSMILES')%>%
left_join(NAP_classy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
unique()
canopus <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/canopus_summary.csv')%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnet_class <- read_csv("~/Documents/GitHub/ecoNet/verification/dorcierr/Moorea2017_MolNetEnhancer.csv")%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv('~/Documents/GitHub/ecoNet/verification/dorcierr/ecoNetConsensus.csv')%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(true_hits, by = 'feature_number')%>%
left_join(analog_hits, by = 'feature_number')%>%
left_join(csi_finger_id, by = 'feature_number')%>%
left_join(nap_df, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnet_class, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
?str
str(c(dorcPath, 'NodeInfo'))
# Reading in all data which could be gathered from respecrtive datasets
# set all locations:
dorcPath <- '~/Documents/GitHub/ecoNet/verification/dorcierr/'
str(c(dorcPath, 'NodeInfo'))
?concat
dorcPath %+% 'Node'
test <- dorcPath %+% 'Node'
test
priunt(test)
print(test)
test <- dorcPath + 'Node'
test <- c(dorcPath + 'Node')
paste(dorcPath, 'NodeInfo')
# Verification of Eco Net consesnsus scores
# Load Libraries
library(tidyverse)
select <- dplyr::select
# Reading in all data which could be gathered from respecrtive datasets
# set all locations:
dorcPath <- '~/Documents/GitHub/ecoNet/verification/dorcierr/'
# With more datasets can do for loop
network <- read_tsv(paste0(dorcPath, 'Node_info.tsv'))%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
libraryMatches <- read_csv(paste0(dorcPath, "libraryMatch.csv"))%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analogMatches <- read_csv(paste0(dorcPath, "analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(dorcPath, 'csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfragClassy <- read_csv(paste0(dorcPath, 'MetFragSMILES.csv'))%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
unique()
apClassy <- read_csv(paste0(dorcPath, 'NAPSMILES.csv'))%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
napDf <- read_tsv(paste0(dorcPath, "moorea2017_NAP.tsv"))%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfragClassy, by = 'MetFragSMILES')%>%
left_join(apClassy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
unique()
canopus <- read_csv(paste0(dorcPath, 'canopus_summary.csv'))%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnetClassy <- read_csv(paste0(dorcPath, "Moorea2017_MolNetEnhancer.csv"))%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv(paste0(dorcPath, 'ecoNetConsensus.csv'))%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
napClassy <- read_csv(paste0(dorcPath, 'NAPSMILES.csv'))%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
napDf <- read_tsv(paste0(dorcPath, "moorea2017_NAP.tsv"))%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfragClassy, by = 'MetFragSMILES')%>%
left_join(napClassy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
select <- dplyr::select
# Reading in all data which could be gathered from respecrtive datasets
# set all locations:
dorcPath <- '~/Documents/GitHub/ecoNet/verification/dorcierr/'
# With more datasets can do for loop
network <- read_tsv(paste0(dorcPath, 'Node_info.tsv'))%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
libraryMatches <- read_csv(paste0(dorcPath, "libraryMatch.csv"))%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analogMatches <- read_csv(paste0(dorcPath, "analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(dorcPath, 'csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfragClassy <- read_csv(paste0(dorcPath, 'MetFragSMILES.csv'))%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
unique()
napClassy <- read_csv(paste0(dorcPath, 'NAPSMILES.csv'))%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
napDf <- read_tsv(paste0(dorcPath, "moorea2017_NAP.tsv"))%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfragClassy, by = 'MetFragSMILES')%>%
left_join(napClassy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
unique()
canopus <- read_csv(paste0(dorcPath, 'canopus_summary.csv'))%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnetClassy <- read_csv(paste0(dorcPath, "Moorea2017_MolNetEnhancer.csv"))%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv(paste0(dorcPath, 'ecoNetConsensus.csv'))%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
write_csv(combined, '~/Documents/GitHub/ecoNet/verification/analysis/combined_dorcierr.csv')
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfragClassy <- read_csv(paste0(dorcPath, 'MetFragSMILES.csv'))%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
unique()
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
unique()
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
analogMatches <- read_csv(paste0(dorcPath, "analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(dorcPath, 'csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
unique()
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
select <- dplyr::select
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
unique()
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
# Verification of Eco Net consesnsus scores
# Load Libraries
library(tidyverse)
select <- dplyr::select
# Reading in all data which could be gathered from respecrtive datasets
# set all locations:
dorcPath <- '~/Documents/GitHub/ecoNet/verification/dorcierr/'
# With more datasets can do for loop
network <- read_tsv(paste0(dorcPath, 'Node_info.tsv'))%>%
select(`cluster index`, componentindex)%>%
rename(feature_number = 1,
network = 2)
libraryMatches <- read_csv(paste0(dorcPath, "libraryMatch.csv"))%>%
rename("feature_number" = '#Scan#',
library_superclass = superclass,
library_class = class,
library_subclass = subclass)%>%
select(feature_number, library_superclass, library_class, library_subclass)
analogMatches <- read_csv(paste0(dorcPath, "analogMatch.csv"))%>%
rename("feature_number" = '#Scan#',
analog_superclass = superclass,
analog_class = class,
analog_subclass = subclass)%>%
select(feature_number, analog_superclass, analog_class, analog_subclass)
csiFingerClassy <- read_csv(paste0(dorcPath, 'csiFinger_classyfire.csv'))%>%
rename(smiles = SMILES)
CSIFingerID <- read_tsv(paste0(dorcPath, "summary_csi_fingerid.tsv"))%>%
left_join(csiFingerClassy, by = 'smiles')%>%
rename(feature_number = experimentName,
csiFinger_superclass = superclass,
unique()
csiFinger_class = CF_class,
csiFinger_subclass = subclass)%>%
select(feature_number, csiFinger_superclass, csiFinger_class, csiFinger_subclass)%>%
filter(!is.na(csiFinger_superclass))%>%
unique()
metfragClassy <- read_csv(paste0(dorcPath, 'MetFragSMILES.csv'))%>%
rename(MetFragSMILES = SMILES,
metfrag_superclass = superclass,
metfrag_class = CF_class,
metfrag_subclass = subclass)%>%
select(MetFragSMILES, metfrag_superclass, metfrag_class, metfrag_subclass)%>%
napClassy <- read_csv(paste0(dorcPath, 'NAPSMILES.csv'))%>%
rename(ConsensusSMILES = SMILES,
NAP_superclass = superclass,
NAP_class = CF_class,
NAP_subclass = subclass)%>%
select(ConsensusSMILES, NAP_superclass, NAP_class, NAP_subclass)%>%
unique()
napDf <- read_tsv(paste0(dorcPath, "moorea2017_NAP.tsv"))%>%
rename("feature_number" = "cluster.index")%>%
select(feature_number, MetFragSMILES, ConsensusSMILES)%>%
left_join(metfragClassy, by = 'MetFragSMILES')%>%
left_join(napClassy, by = 'ConsensusSMILES')%>%
select(-c(MetFragSMILES, ConsensusSMILES))
unique()
canopus <- read_csv(paste0(dorcPath, 'canopus_summary.csv'))%>%
rename(feature_number = scan,
canopus_superclass = superclass,
canopus_class = class,
canopus_subclass = subclass)%>%
select(feature_number, canopus_superclass, canopus_class, canopus_subclass)%>%
unique()
molnetClassy <- read_csv(paste0(dorcPath, "Moorea2017_MolNetEnhancer.csv"))%>%
select(`cluster index`, componentindex, CF_superclass, CF_class, CF_subclass)%>%
rename(feature_number = "cluster index",
MolNet_superclass = CF_superclass,
MolNet_class = CF_class,
MolNet_subclass = CF_subclass)%>%
unique()
ecoNet <- read_csv(paste0(dorcPath, 'ecoNetConsensus.csv'))%>%
select(-c(1))%>%
rename(feature_number = scan)%>%
filter(!is.na(ecoNetConsensus))%>%
unique()
combined <- network%>%
left_join(libraryMatches, by = 'feature_number')%>%
left_join(analogMatches, by = 'feature_number')%>%
left_join(CSIFingerID, by = 'feature_number')%>%
left_join(napDf, by = 'feature_number')%>%
left_join(canopus, by = 'feature_number')%>%
left_join(molnetClassy, by = 'feature_number')%>%
left_join(ecoNet, by = c('network', 'feature_number'))
write_csv(combined, '~/Documents/GitHub/ecoNet/verification/analysis/combined_dorcierr.csv')
setwd('~/Documents/GitHub/DORCIERR/data/')
