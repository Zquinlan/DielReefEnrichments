# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442","darkorchid3", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "darkorchid3",)) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "darkorchid3")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
`level 5` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "darkorchid3")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
pdf("~/Documents/GitHub/DORCIERR/data/plots/osm_compounds.pdf", height = 7, width = 13)
osm_dunnetts%>%
filter(`level 2` != "NA",
`level 5` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
mutate(`Chemical Class` = case_when(`Chemical Class` %like% "%Carb%" ~ `level 5`,
TRUE ~ as.character(`Chemical Class`)))%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "darkorchid3")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
FinalClass %like% "%carnitine%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = "#0072B2") +
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
`level 2` %like% "Organohetero%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = colors_hetero) +
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
`level 2` %like% "Lipids%"
# & !FinalClass %like% "%carnitine%"
)%>%
rename(`Chemical Class` = `level 3`)%>%
# unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Timepoint, xic, fill = `Chemical Class`)) +
geom_bar(stat = "identity", position = "stack") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
fcm_graphing%>%
ggplot(aes(x= Hours, y = `Cells µL-1`, color = Organism))+
geom_point(stat = "summary", fun.y = "mean") +
geom_line(aes(group = Organism), stat = "summary", fun.y = "mean") +
facet_wrap(~ DayNight) +
scale_color_manual(values = c("darkorchid3", "#50A45C", "#AF814B", "#5BBCD6")) +
scale_y_continuous(limits = c(0,900), breaks= seq(0, 900, 100)) +
scale_x_continuous(limits = c(0,30), breaks = seq(0, 30, 5)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
pdf("~/Documents/GitHub/DORCIERR/data/plots/osm_fcm_DayNight.pdf", width = 7, height = 5)
fcm_graphing%>%
ggplot(aes(x= Hours, y = `Cells µL-1`, color = Organism))+
geom_point(stat = "summary", fun.y = "mean") +
geom_line(aes(group = Organism), stat = "summary", fun.y = "mean") +
facet_wrap(~ DayNight) +
scale_color_manual(values = c("darkorchid3", "#50A45C", "#AF814B", "#5BBCD6")) +
scale_y_continuous(limits = c(0,900), breaks= seq(0, 900, 100)) +
scale_x_continuous(limits = c(0,30), breaks = seq(0, 30, 5)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_blank(),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
dev.off()
View(osm_ots_heat)
osm_ots_heat <- osm_otus%>%
filter(log2_change >= 1,
TF >= 0.001)%>%
select(Tax_plot, OTU)%>%
distinct(Tax_plot, OTU)%>%
left_join(microbe_no_rare, by = c("OTU"))%>%
filter(DayNight == "Day",
Organism != "Porites lobata",
Organism != "Turf",
Organism != "Water control")%>%
group_by(Organism, Tax_plot, Replicate)%>%
summarize_if(is.numeric, mean)%>%
ungroup()
View(osm_ots_heat)
osm_ots_heat <- osm_otus%>%
filter(log2_change >= 1,
TF >= 0.001)%>%
select(Tax_plot, OTU)%>%
distinct(Tax_plot, OTU)%>%
left_join(microbe_no_rare, by = c("OTU"))%>%
filter(DayNight == "Day",
Organism != "Porites lobata",
Organism != "Turf",
Organism != "Water control")%>%
group_by(Organism, Tax_plot, Replicate)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
group_by(Tax_plot)%>%
mutate(log2_change = zscore(log2_change + 1.82))%>%
ungroup()%>%
select(Tax_plot, Organism, Replicate, log2_change)%>%
unite(sample, c("Organism", "Replicate"), sep = "_")%>%
spread(Tax_plot, log2_change)
write_csv(osm_ots_heat, "./analysis/osm_heat.csv")
View(osm_otus)
View(average_ra)
average_ra <- microbe_no_rare%>%
select(-c(Experiment, Replicate))%>%
group_by(OTU, Organism, DayNight)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()
View(average_ra)
osm_otus
# GRAPHING -- [OSM] Important OTUs --------------------------------------------------------
osm_otus <- dunnett_microbe_pvals%>%
filter(DayNight == "Day")%>%
left_join(microbe_taxonomy, by = "OTU")%>%
filter(Organism != "Turf",
Organism != "Porites lobata",
Organism != "Water control")%>%
inner_join(osm_ra_bigger_TF, by = c("DayNight", "Organism", "OTU"))%>%
left_join(average_ra, by = c("OTU", "Organism", "DayNight"))%>%
separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "sp"), sep = ";")%>%
unite(Tax_plot, c("Order", "Family", "Genus"), sep = " ", remove = FALSE)
head(osm_otus)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, xic, fill = "gray")) +
geom_bar(stat = "identity") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill = "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill == "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
pdf("cyromorphaceae.pdf", height = 7, width = 13)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill == "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
pdf("./plots/cyromorphaceae.pdf", height = 7, width = 13)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill == "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
pdf("./plots/cyromorphaceae.pdf", height = 7, width = 8)
osm_otus%>%
filter(OTU == "Otu0062")%>%
select(-log2_change)%>%
gather(Timepoint, val, T0:TF)%>%
ggplot(aes(Timepoint, val, fill == "gray")) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2")) + # Colorblind pallette
facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, size = 20,  hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
