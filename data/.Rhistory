map(~ ggplot(., aes(Organism, asin, fill = Timepoint)) +
geom_bar(stat = "summary", fun.y = "mean", position = "dodge2") +
facet_wrap(~DayNight) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"))+ # get rid of legend panel bg) +
ylab("fDOM")+
ggtitle(.$feature_number))
# GRAPHING â€” network 141 412 testing changes ---------------------------------------------
# Not visualized in 141 == "11633",
net141 <- feature_ra%>%
filter(feature_number %in% c(1:5, "11430", "12392",  "11716", "13535", "13491",  "16123", "15438",  "15198"))
net141_networking <- left_join(net141, networking, by = "feature_number")%>%
rename("Feature Identification" = "combined_ID")
net412 <- feature_ra%>%
filter(feature_number %in% c("18583", "19327", "19552", "5206", "5225", "7153", "7170"))
net141_xic <- feature_xic%>%
filter(feature_number %in% c(1:5, "11430", "12392",  "11716", "13535", "13491",  "16123", "15438",  "15198"))
net412_xic<- feature_xic%>%
filter(feature_number %in% c("18583", "19327", "19552", "5206", "5225", "7153", "7170"))
#Change over time RA
net141_cot <- net141%>%
spread(Timepoint, ra)%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cot_per = (TF-T0)/TF,
cot_abs = TF-T0,
asin_T0 = asin(T0),
asin_TF = asin(TF),
cot_asin_per = (asin_TF-asin_T0)/asin_TF,
cot_asin_abs = asin_TF - asin_T0,
weighted_asin = cot_asin_per*abs(cot_asin_abs),
weighted_ra = cot_per*abs(cot_abs))%>%
select(-c(TF, T0))
net412_cot <- net412%>%
spread(Timepoint, ra)%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cot_per = (TF-T0)/TF,
cot_abs = TF-T0,
asin_T0 = asin(T0),
asin_TF = asin(TF),
cot_asin_per = (asin_TF-asin_T0)/asin_TF,
cot_asin_abs = asin_TF - asin_T0,
weighted_asin = cot_asin_per*abs(cot_asin_abs),
weighted_ra = cot_per*abs(cot_abs))%>%
select(-c(TF, T0))
net412_xic_cot <- net412_xic%>%
spread(Timepoint, ra)%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cot_per = (TF-T0)/T0,
cot_abs = TF-T0,
weighted_ra = cot_per*abs(cot_abs))%>%
select(-c(TF, T0))
net141_xic_cot <- net141_xic%>%
spread(Timepoint, ra)%>%
group_by(feature_number, Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cot_per = (TF-T0)/T0,
cot_abs = TF-T0,
weighted_ra = cot_per*abs(cot_abs))%>%
select(-c(TF, T0))
##Plotting
pdf("~/Documents/GitHub/DORCIERR/data/plots/why_not_change_over_time_net141.pdf", width = 6, height = 5)
ggplot(net141, aes(x = reorder(Organism, - ra), y = ra, fill = Timepoint))+
geom_bar(stat = "summary", fun.y = "mean", position = "dodge")+
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("Relative Abundance") +
ggtitle("Network 141 xic")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = cot_abs, fill = feature_number))+
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("real Change over Time") +
ggtitle("Network 141 ra Change Over Time")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = cot_per, fill = feature_number))+
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("Percent Change over Time") +
ggtitle("Network 141 Percent Change Over Time")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = cot_asin_abs, fill = feature_number))+
geom_bar(stat = "summary", fun.y = "mean", position = "stack")+
geom_bar(stat = "summary", fun.y = "mean")+
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("Asin Change over Time") +
ggtitle("Network 141 asin real Change Over Time")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = cot_asin_per, fill = feature_number))+
geom_bar(stat = "summary", fun.y = "mean", position = "stack")+
geom_bar(stat = "summary", fun.y = "mean")+
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("percent asin Change over Time") +
ggtitle("Network 141 asin percent Change Over Time")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = weighted_asin, fill = feature_number))+
geom_bar(stat = "summary", fun.y = "mean", position = "stack")+
geom_bar(stat = "summary", fun.y = "mean")+
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("weighted asin Change over Time") +
ggtitle("Network 141 asin weighted Change Over Time")
ggplot(net141_cot, aes(x = reorder(Organism, - cot_abs), y = weighted_ra, fill = feature_number)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack")+
facet_wrap(~DayNight) +
theme(axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")) + # get rid of legend panel bg
xlab("Organism") +
ylab("weighted ra Change over Time") +
ggtitle("Network 141 xic weighted Change Over Time")
dev.off()
# net141_networking$`Feature Identification` <- factor(net141_networking$`Feature Identification`,
#                                                      levels = c("3-Iodo-L-tyrosine", "L-3,5-Diiodotyrosine",
#                                                                 "N-Acetyl-L-phenylalanyl-3,5-diiodo-L-tyrosine",
#                                                                 "p-Fluoro-L-phenylalanine", "2-Naphthyl-D-alanine"))
#
# ggplot(net141_networking, aes(x = reorder(Organism, - RA), y= (RA*100), fill = `Feature Identification`)) +
#   geom_bar(stat = "identity") +
#   scale_fill_manual(values= c("#CB9E23", "#F8DF4F", "#1DACE8", "#7496D2", "#1C366B")) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1),
#         panel.background = element_rect(fill = "transparent"), # bg of the panel
#         plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
#         panel.grid.major = element_blank(), # get rid of major grid
#         panel.grid.minor = element_blank(), # get rid of minor grid
#         legend.background = element_rect(fill = "transparent"), # get rid of legend bg
#         legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
#   ) +
#   facet_grid(~ Timepoint) +
#   xlab("Organism") +
#   ylab("Relative Abundance (percent)")
#
# tiff("test.tiff", units="in", width=10, height=5, res=300)
# ggplot(net141_networking, aes(x = reorder(Organism, - RA), y= (RA*100), fill = `Feature Identification`)) +
#   geom_bar(stat = "identity") +
#   scale_fill_manual(values= c("#CB9E23", "#F8DF4F", "#1DACE8", "#7496D2", "#1C366B")) +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1),
#         panel.background = element_rect(fill = "transparent"), # bg of the panel
#         plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
#         panel.grid.major = element_blank(), # get rid of major grid
#         panel.grid.minor = element_blank(), # get rid of minor grid
#         legend.background = element_rect(fill = "transparent"), # get rid of legend bg
#         legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
#   ) +
#   facet_grid(~ Timepoint) +
#   xlab("Organism") +
#   ylab("Relative Abundance (percent)")
# dev.off()
# GRAPHING -- relative abundances of labile exudates ---------------------
# Have to classify all compounds and then add these back into the table
labile_inchikeys <- combined_labile_compounds%>%
select(feature_number, inchi_combined)%>%
filter(inchi_combined != "N/A")%>%
group_by(feature_number)%>%
filter(row_number(inchi_combined) == 1 )%>%
mutate(inchi_key = cs_inchi_inchikey(inchi_combined))%>%
ungroup()
labile_classifications <- labile_inchikeys%>%
select(-c(inchi_combined, feature_number))%>%
write_tsv("~/Documents/GitHub/DORCIERR/data/analysis/labile_inchikeys.tsv")
labile_classified <- read_csv("~/Documents/GitHub/DORCIERR/data/analysis/labile_classyfire.csv")%>%
rename(inchi_key = 1)
labile_inchi_class <- left_join(labile_inchikeys, labile_classified, by = "inchi_key")%>%
select(-c(inchi_combined, `ClassyFy Status`))
inchi_string <- labile_inchi_class%>%
unite(inchi_string, c("Kingdom":"Parent Level 4"), sep = ";")%>%
mutate(inchi_string = gsub(";;", ";", inchi_string))%>%
group_by(feature_number)%>%
nest()%>%
mutate(data = map(data, ~ rownames_to_column(.x, "row_select")%>%
filter(row_select == "1")%>%
select(-row_select)))%>%
unnest(data)%>%
ungroup()
labile_inchi_classified <- labile_inchi_class%>%
gather(level, classification, 3:ncol(.))%>%
filter(!is.na(classification))%>%
mutate(level = case_when(level == "Kingdom" ~ "1",
level == "Superclass" ~ "2",
level == "Class" ~ "3",
level == "Subclass" ~ "4",
level == "Parent Level 1" ~ "5",
level == "Parent Level 2" ~ "6",
level == "Parent Level 3" ~ "7",
level == "Parent Level 4" ~ "8",
TRUE ~ as.character(level)))%>%
group_by(feature_number)%>%
nest()%>%
mutate(data = map(data, ~ filter(.x, level == max(level))%>%
rownames_to_column("row_select")%>%
filter(row_select == "1")%>%
select(-row_select)))%>%
unnest(data)%>%
ungroup()%>%
select(-inchi_key)%>%
right_join(inchi_string, ., by = "feature_number")%>%
separate(inchi_string, paste("inchi", 1:8, sep = "_"), sep = ";", remove = FALSE)
# Getting ready to plot
labile_RA <- feature_ra%>%
left_join(combined_labile_compounds%>%
rename(Organism = exudate_type)%>%
filter(number_exudate_organisms == 1),
., by = c("feature_number", "DayNight", "Organism"))%>%
filter(Timepoint == "T0")%>%
rename(`chemical composition` = simplified_makeup)%>%
add_column(color = .$`chemical composition`)%>%
mutate(color = case_when(color == "CHO" ~ "darkblue",
color == "CHON" ~ "#3B9AB2",
color == "CHN" ~ "#63ADBE",
color == "CHNP" ~ "#9EBE91",
color == "CHONP" ~ "#D1C74C",
color == "CHOP" ~ "#E4B80E",
color == "uncharacterized" ~ "#F21A00",
color == "CH" ~ "#E67D00",
color == "CHOS" ~ "goldenrod3",
color == "CHONS" ~ "goldenrod4",
is.na(color) ~ "red",
TRUE ~ as.character(color)),
Timepoint = case_when(Timepoint == "T0" ~ "Exudate"))%>%
left_join(labile_inchi_classified, by = "feature_number")
# labile_RA$`chemical composition` <- factor(labile_RA$`chemical composition`,
#                                                 levels = c("", "CH", "CHOP", "CHONP",
#                                                            "CHNP", "CHON", "CHN", "CHO", "CHOS",
#                                                            "CHONS", "uncharacterized"))
#
# lcolors <- labile_RA$color
#
# names(lcolors) <- labile_RA$`chemical composition`
pdf("~/Documents/GitHub/DORCIERR/data/plots/labile_compound_composition.pdf")
labile_RA%>%
# filter(Organism == "Pocillopora verrucosa")%>%
ggplot(., aes(x = Organism, y= ra)) +
geom_bar(aes(fill = inchi_3), stat = "summary", fun.y = "mean", position = "stack") +
# scale_fill_manual(values= lcolors) +
# scale_y_continuous(limits = c(0,17.5), breaks= c(2.5, 5, 7.5, 10, 12.5, 15, 17.5)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +
facet_wrap(~DayNight) +
xlab("Organism") +
ylab("Relative Abundance")
dev.off()
labile_RA%>%
filter(NOSC < 4 & NOSC > -4)%>%
ggplot(., aes(x = Organism, y =NOSC)) +
# geom_boxplot(stat = "boxplot", outlier.colour = "red") +
geom_bar(stat = "summary", fun.y = "mean") +
# geom_bar(aes(fill = `level 3`), stat = "summary", fun.y = "mean", position = "stack") +
# scale_fill_manual(values= lcolors) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
) +
facet_wrap(~DayNight) +
xlab("Organism") +
ylab("NOSC")
# GRAPHING -- Labile accummulite ------------------------------------------
# labile_accumulite <- as.vector(combined_labile_accumulites_compounds$feature_number)
#
# labile_accumulite_RA <- feature_RA%>%
#   dplyr::select(c(1:5, labile_accumulite))%>%
#   gather(feature_number, RA, 6:ncol(.))%>%
#   filter(DayNight == "Day",
#          Timepoint == "T0")
#
#
# labile_accumulite_RA_meta_full <- left_join(labile_accumulite_RA, combined_labile_accumulites_compounds%>%
#                                               filter(!Organism == "algae",
#                                                      !Organism == "fleshy",
#                                                      !Organism == "primaryproducers")%>%
#                                               unite(tag, c(Organism, Lability), sep = "_")%>%
#                                               dplyr::select(1:29),
#                                             by = "feature_number")%>%
#   rename(`chemical composition` = simplified_makeup)%>%
#   add_column(color = .$`chemical composition`)%>%
#   mutate(color = case_when(color == "CHO" ~ "darkblue",
#                            color == "CHON" ~ "#3B9AB2",
#                            color == "CHN" ~ "darkslatergray2", #Change color to something else
#                            color == "CHNP" ~ "#9EBE91",
#                            color == "CHONP" ~ "#D1C74C",
#                            color == "CHOP" ~ "#E4B80E",
#                            color == "" ~ "#F21A00",
#                            color == "CH" ~ "#E67D00",
#                            TRUE ~ as.character(color)))%>%
#   separate(tag, c("Organism-ish", "Lability"), sep = "_")
#
# l_t0 <- labile_accumulite_RA_meta_full%>%
#   filter(Timepoint == "T0" ,
#          Lability == "labile")
#
# a_tf <- labile_accumulite_RA_meta_full%>%
#   filter(Timepoint == "T0",
#          Lability == "accumulite")
#
# labile_accumulite_RA_meta <- bind_rows(l_t0, a_tf)%>%
#   mutate(Lability = case_when(Lability == "labile" ~ "Labile Exudate",
#                               Lability == "accumulite" ~ "Microbial Accumulite",
#                               TRUE ~ as.character(Lability)))
#
# labile_accumulite_RA_meta$Lability <- factor(labile_accumulite_RA_meta$Lability, levels = c("Labile Exudate", "Microbial Accumulite"))
#
# labile_accumulite_RA_meta$`chemical composition` <- factor(labile_accumulite_RA_meta$`chemical composition`,
#                                                            levels = c("", "CH", "CHOP", "CHONP", "CHNP", "CHON", "CHN", "CHO"))
#
# lacolors <- labile_accumulite_RA_meta$color
#
# names(lacolors) <- labile_accumulite_RA_meta$`chemical composition`
#
# pdf("all_plots.pdf", height = 5, width = 7)
# labile_accumulite_RA_meta%>%
#   split(list(.$`Organism-ish`))%>%
#   map(~ggplot(., aes(x = Organism, y= (RA*100), fill = `chemical composition`)) +
#         geom_bar(stat = "summary", fun.y = "sum") +
#         scale_fill_manual(values= lacolors)+
#         ggtitle(unique(.$`Organism-ish`)) +
#         theme(
#           axis.text.x = element_text(angle = 60, hjust = 1),
#           panel.background = element_rect(fill = "transparent"), # bg of the panel
#           plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
#           panel.grid.major = element_blank(), # get rid of major grid
#           panel.grid.minor = element_blank(), # get rid of minor grid
#           legend.background = element_rect(fill = "transparent"), # get rid of legend bg
#           legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
#         ) +
#         facet_wrap(~Lability) +
#         xlab("Canopus Level 3") +
#         ylab("Relative Abundance (percent)"))
# dev.off()
# GRAPHING -- Significant microbes ----------------------------------------
sig_genera <- dunnett_micro_analysis%>%
filter(microbe_organism != "Primary Producers",
microbe_organism != "Corraline",
microbe_organism != "Fleshy Algae",
microbe_organism != "Cosmo")%>%
rename(Organism = microbe_organism)%>%
left_join(., microbe_no_rare, by = c("OTU", "DayNight", "Organism"), suffix = c("_x", "_y"))%>%
inner_join(., ra_bigger_TF, by = c("OTU", "DayNight", "Organism"))%>%
left_join(microbe_taxonomy, by = "OTU")%>%
separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)
pdf("~/Documents/GitHub/DORCIERR/data/plots/sig_microbes.pdf", height = 5, width = 11)
sig_genera%>%
unite(genera, c("Family", "Genus"), sep = " ")%>%
ggplot(., aes(Organism, ra, fill = genera)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
) +
facet_wrap(~ DayNight) +
ylab("Relative Abundance")
dev.off()
# GRAPHING -- Microbes cosmo, algal, coral --------------------------------
sig_genera_cosmo <- dunnett_micro_analysis%>%
filter(microbe_organism %like any% c("Primary Producers", "Corraline", "Felshy Algae", "Cosmo"))%>%
left_join(., microbe_no_rare, by = c("OTU", "DayNight"), suffix = c("_x", "_y"))%>%
inner_join(., ra_bigger_TF%>% select(-Organism), by = c("OTU", "DayNight"))%>%
left_join(microbe_taxonomy, by = "OTU")%>%
separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)
pdf("~/Documents/GitHub/DORCIERR/data/plots/sig_microbes_cosmo.pdf", height = 7, width = 13)
sig_genera_cosmo%>%
unite(genera, c("Family", "Genus"), sep = " ")%>%
ggplot(., aes(Organism, ra, fill = genera)) +
geom_bar(stat = "summary", fun.y = "mean", position = "stack") +
scale_y_continuous(minor_breaks = seq(0, 0.8, 0.5), breaks = seq(0, .8, .1)) +
# scale_fill_continuous(values = wes_palette("zissou1", n = 32)) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
) +
facet_wrap(~ DayNight) +
ylab("Relative Abundance")
dev.off()
# GRAPHING -- FCM data ----------------------------------------------------
fcm_graphing <- fcm_wdf%>%
filter(!Organism == 'Influent',
!Organism == 'Offshore')
pdf("~/Documents/GitHub/DORCIERR/data/plots/fcm_DayNight.pdf", width = 7, height = 5)
fcm_graphing%>%
ggplot(aes(x= Timepoint, y = `Cells ÂµL-1`, color = Organism))+
geom_point(stat = "summary", fun.y = "mean") +
geom_line(aes(group = Organism), stat = "summary", fun.y = "mean") +
facet_wrap(~DayNight) +
scale_y_continuous(limits = c(0,900), breaks= seq(0, 900, 100)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_blank(), # get rid of major grid
panel.grid.major.y = element_line(colour = "grey"),
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent") # get rid of legend panel bg
)
dev.off()
View(labile_exudates)
# WRITING -- Dataframe for Cytoscape ------------------------------
day_organism_mean <- feature_RA%>%
filter(DayNight == "Day")%>%
dplyr::select(-c("Replicate", "Experiment"))%>%
unite(sample, c("Organism", "Timepoint"), sep = "_", remove = TRUE)%>%
group_by(sample)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
gather(feature_number, RA, 2:ncol(.))%>%
spread(sample, RA)
organism_mean_networking <- right_join(networking, day_organism_mean, by = "feature_number")
microbial_accumulites_cyto <- microbial_accumulites%>%
dplyr::select(1:3)%>%
spread(Organism, p_value.time)
labile_exudates_cyto <- combined_labile_compounds%>%
dplyr::select(-c(2:37))
meta_stats_cyto <- full_join(labile_exudates_cyto, microbial_accumulites_cyto, by = "feature_number", suffix = c(".labile", "accumulite"))
cyto_file<- left_join(organism_mean_networking, meta_stats_cyto, by = "feature_number")%>%
rename(shared_name = feature_number)
write_csv(cyto_file, "~/Documents/GitHub/DORCIERR/data/plots/Day_Dorc_cytoscape.csv")
# WRITING â€”- Two-Way ANOVA Significance table  -----------------------------
write_csv(two_way_signignificant, "~/Documents/GitHub/DORCIERR/data/analysis/Dorcierr_two_way_significant.csv")
# WRITING â€”- Metastats combined tables -------------------------------------
write_csv(combined_labile_compounds, "~/Documents/GitHub/DORCIERR/data/analysis/combined_labile_compounds.csv")
# write_csv(combined_accumulite_compounds, "./staring_at_data/combined_accumulite_compounds.csv")
# write_csv(combined_labile_accumulites_compounds, "./staring_at_data/combined_accumulating_labile_compounds.csv")
# write_csv(cca_labile_accumulites, "./staring_at_data/cca_labile_accumulites.csv")
# write_csv(level_2, "./Labile_table_figure/level_2.csv")
# write_csv(organism_labile_level, "./Labile_table_figure/Organism_labile_table.csv")
# WRITING â€”- dataframes for graphing ---------------------------------------
write_csv(pco_all, "~/Documents/GitHub/DORCIERR/data/plots/PCo_scores.dat")
write_csv(fcm_graphing, "~/Documents/GitHub/DORCIERR/data/plots/fcm_graphing.dat")
write_csv(tukey_model_fcm, "~/Documents/GitHub/DORCIERR/data/plots/fcm_stats.dat")
write_csv(labile_RA, "~/Documents/GitHub/DORCIERR/data/plots/labile_graphing.dat")
write_csv(sig_genera, "~/Documents/GitHub/DORCIERR/data/plots/sig_microbes.dat")
