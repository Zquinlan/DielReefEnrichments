spread(Timepoint, log_10_cellsµL)
## This is the actual dataframe to use for running FCM stats
fcm_stats_df <- left_join(fcm_t7, fcm_rate_th_t0, by = c("Organism", "Replicate", "DayNight"))%>%
dplyr::select(-c(5,6))%>%
gather(test, log_value, 4:5)
# PRE-STATS CLEANING -- fDOM and DOC --------------------------------------------------------------
fdom_log10 <-fdom_wdf%>%
dplyr::select(c(1:5, 15:21))%>%
gather(fluor, val, 6:ncol(.))%>%
mutate(val = log10(val))%>%
spread(fluor, val)
doc_log10 <- moorea_doc%>%
mutate_if(is.numeric, log10)%>%
filter(sample_name != "D_OF_1_T0N",
sample_name != "D_IN_2_T0N",
sample_name != "D_PL_3_TFN",
sample_name != "D_TR_1_T0N",
sample_name != "D_WA_2_T0D",
sample_name != "D_WA_1_T0D",
sample_name != "D_CC_1_T0D",
sample_name != "D_CC_2_T0D")
fdom_doc_log10 <- left_join(fdom_log10, doc_log10, by = "sample_name")%>%
dplyr::select(-sample_name)
# PRE-STATS CLEANING -- Microbes and pre-filtering OTUs for abundance-----------------------------------------------
microbe_combined <- microbe_abundance_raw%>%
dplyr::select(-1)%>%
mutate(Group = case_when(Group == "Dorcierr_D_DT_1_TFD" ~ "D_DT_1_TFD",
Group == "DORCIERR_D_WA_2_TFN" ~ "D_WA_2_TFN",
Group == "D_PV_2_TFN_SA504_SC704" ~ "D_PV_2_TFN",
Group == "D_PV_2_TFN_SA503_SC704" ~ "D_PV_3_TFN",
Group == "D_WA_4_TFN_SA503_SC703" ~ "D_PL_3_TFN",
Group == "D_WA_4_TFN_SA504_SC703" ~ "D_WA_4_TFN",
TRUE ~ as.character(Group)))%>%
filter(Group %like% "%D_%")%>%
rename(sample_code = Group)%>%
gather(OTU, reads, 3:ncol(.))%>%
# left_join(., microbe_taxonomy, by = "OTU")%>%
# dplyr::select(-Size)%>%
# separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
separate(sample_code, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_", remove = FALSE)%>%
dplyr::mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)))%>%
dplyr::mutate(Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
Organism == "IN" ~ "Influent",
Organism == "OF" ~ "Offshore",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"))%>%
filter(Organism != "Offshore",
Organism != "Influent")%>%
left_join(fcm_wdf%>%
rename(sample_code = sample_name)%>%
select(c(`Cells µL-1`, sample_code)), by = "sample_code")%>%
group_by(sample_code)%>%
mutate(sum = sum(reads),
ra = reads/sum,
cell_abun = ra*`Cells µL-1`,
log10 = log10(cell_abun + 0.001))%>%
ungroup()%>%
group_by(OTU)%>%
mutate(abundant = case_when(max(ra) > 0.01 | sum(ra > 0.001) >=3 ~ "abundant",
TRUE ~ "rare"))
microbe_no_rare <- microbe_combined%>%
filter(abundant == "abundant")%>%
select(-abundant)
# PRE-STATS CLEANING -- microbe RA data  --------------------------------------------
ra_bigger_TF <- microbe_no_rare%>%
select(-c(reads, sum, log10, numOtus, sample_code, `Cells µL-1`, cell_abun))%>%
spread(Organism, ra)%>%
gather(Organism, ra, 6:10)%>%
mutate(difference = ra - `Water control`)%>%
filter(difference > 0)%>%
dplyr::select(c(DayNight, OTU, Organism))
# SET SEED ----------------------------------------------------------------
set.seed(2005)
# STATS ANOVA -- Microbe TWO-Way ------------------------------------------
aov_microbe <- microbe_no_rare%>%
filter(Timepoint == "TF")%>%
group_by(OTU)%>%
nest()%>%
mutate(anova = map(data, ~ aov(log10 ~ Organism*DayNight, .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
dplyr::select(term, p.value)))%>%
dplyr::select(-data)%>%
unnest(anova)
anova_microbe_pvalues <- aov_microbe%>%
ungroup()%>%
filter(p.value < 0.05)
# add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
# filter(FDR < 0.05)
organism_significant_microbes <- as.vector(anova_microbe_pvalues%>%
filter(term == "Organism"))$OTU
DayNight_significant_microbes <- as.vector(anova_microbe_pvalues%>%
filter(term != "Organism"))$OTU
# STATS -- One-Sample T-test ----------------------------------------------
t_test <- dom_stats_wdf%>%
group_by(feature_number, Organism, DayNight)%>%
spread(Timepoint, log)%>%
select(-c(Experiment, Replicate))%>%
nest()%>%
mutate(greater = map(data, ~ t.test(.$TF, mu = mean(.$T0, na.rm=TRUE), alternative = "greater")),
lesser = map(data, ~ t.test(.$TF, mu = mean(.$T0, na.rm=TRUE), alternative = "less")))
t_pvals <- t_test%>%
select(-data)%>%
mutate(greater = map(greater, ~ .x["p.value"][[1]]))%>%
mutate(lesser = map(lesser, ~ .x["p.value"][[1]]))%>%
ungroup()%>%
mutate(greater = as.numeric(greater),
lesser = as.numeric(lesser),
FDR_greater = p.adjust(greater, method = "BH"),
FDR_lesser = p.adjust(lesser, method = "BH"))%>%
# select(-Organism)%>%
# group_by(feature_number, DayNight)%>%
# nest()%>%
# mutate(data = map(data, ~ mutate(.x, feature_number = as.character(feature_number))%>%
#                     group_by(feature_number)%>%
#                     summarize_if(is.numeric, min)%>%
mutate(activity = case_when(FDR_greater < 0.05 ~ "accumulite",
FDR_lesser < 0.05 ~ "depletolite",
FDR_lesser >= 0.05 & FDR_greater >= 0.05 |
is.na(FDR_lesser) & is.na(FDR_greater) ~ "recalcitrant"))
# # STATS -- ANOVA metabolties Organism T0 -------------------------------------------------------
anova_dom_t0_df <- t_pvals%>%
select(c(DayNight, feature_number, activity))%>%
left_join(dom_stats_wdf, by = c("feature_number", "DayNight"))%>%
filter(Timepoint == "T0")
anova_dom_t0 <- anova_dom_t0_df%>%
group_by(feature_number, DayNight, activity)
nest()%>%
mutate(data = map(data, ~ aov(log ~ Organism, data = .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
dplyr::select(term, p.value)))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"),
anova = case_when(FDR < 0.05 ~ "producer_specific",
!FDR < 0.05 | is.na(FDR) ~ "background"))
# PRE-POST-HOC CLEANING -- Microbe Dunnetts and DayNight anova -------------------------------
mic_organism_post_hoc <- microbe_no_rare%>%
filter(OTU %in% organism_significant_microbes)%>%
filter(Timepoint == "TF")
daynight_microbe_post_hoc <- microbe_no_rare%>%
filter(OTU %in% DayNight_significant_microbes)%>%
filter(Timepoint == "TF")
# STATS POST-HOC -- FCM Tukeys ----------------------------------------------------------
# Tukey growth rates for the first half of the expierment
tukey_model_fcm <-fcm_stats_df%>%
group_by(test, DayNight)%>%
nest()%>%
mutate(data = map(data, ~aov(log_value ~ Organism, .x)%>%
TukeyHSD(p.adjust.methods = "BH")%>%
tidy()))%>%
unnest(data)%>%
filter(adj.p.value < 0.05)
# STATS POST-HOC -- MICROBES Dunnetts -----------------------------
organism_order_micro <- as.factor(mic_organism_post_hoc$Organism)%>%
relevel("Water control")%>%
levels()%>%
as.vector()
dunnett_microbe_pvals <- mic_organism_post_hoc%>%
group_by(DayNight, OTU)%>%
mutate(sum = sum(log10))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
mutate(Organism = factor(Organism))%>%
mutate(Organism = fct_relevel(Organism, organism_order_micro))%>%
nest()%>%
mutate(dunnett = map(data, ~ aov(log10 ~ Organism, .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(dunnett, ~summary(.x)%>%
tidy()))%>%
dplyr::select(-c(data,dunnett))%>%
unnest(dunnett_summary)%>%
dplyr::select(-c(4:7))%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
# STATS POST-HOC -- DayNight MICROBES t-test organism --------------------
daynight_microbe_pvals <- mic_organism_post_hoc%>%
group_by(Organism, OTU)%>%
mutate(sum = sum(log10))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
nest()%>%
mutate(data = map(data, ~ aov(log10 ~ DayNight, .x)%>%
tidy()))%>%
unnest(data)%>%
dplyr::select(-c(4:7))%>%
filter(term != "Residuals")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
# META-STATS --Compounds prevalance ---------------------------------------
compound_prevalance <- t_pvals%>%
mutate(exudate_type = 1)%>%
mutate(fdr_mixed = case_when(FDR_greater < 0.05 ~ FDR_greater,
FDR_lesser < 0.05 ~ FDR_lesser))%>%
select(c(1:3, activity, fdr_mixed))%>%
unite(org_act, c(Organism, activity), sep = "_")%>%
spread(org_act, fdr_mixed)%>%
group_by(DayNight, feature_number)%>%
nest()%>%
mutate(data = map(data, ~ mutate(.x, reactivity = paste(colnames(.)[!is.na(.) > 0], sep = ", ", collapse = ", "))))%>%
unnest(data)%>%
left_join(networking, by = "feature_number")%>%
group_by(DayNight, reactivity)%>%
nest()
# t_test_features <- compound_prevalance%>%
#   left_join(networking, by = "feature_number")
#
# grouped_t_test_features <- t_test_features%>%
#   group_by(exudate_type, DayNight, activity)%>%
#   nest()
t_test_feature_inchi <- t_test_features%>%
filter(activity != "recalcitrant")%>%
ungroup()%>%
select(feature_number, inchi_key)%>%
unique()%>%
filter(!is.na(inchi_key))
write_tsv(t_test_feature_inchi, "~/Documents/GitHub/DORCIERR/data/analysis/inchi_key_norecal.tsv")
# META-STATS -- Major Depleteolites ---------------------------------------
major_deplete <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF))%>%
spread(Organism, log2_change)%>%
right_join(t_pvals, by = c("DayNight", "feature_number"))%>%
left_join(networking, by = "feature_number")%>%
filter(activity == "depletolite")%>%
group_by(DayNight, feature_number, Organism)
major_deplete$max_log <- apply(major_deplete[3:8], 1, min)
major_depletolites <- major_deplete%>%
filter(max_log < -3.3)%>%
filter(Organism == "Pocillopora verrucosa" | Organism == "Dictyota" | Organism == "CCA")
# META-STATS -- microbes --------------------------------------------------
dunnett_micro_analysis <- dunnett_microbe_pvals%>%
dplyr::select(-p.value)%>%
spread(Organism, FDR)%>%
add_column(number_exudate_organisms = rowSums(.[3:ncol(.)] >= 0, na.rm = TRUE))%>%
mutate(microbe_organism = case_when(is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "CCA",
is.na(CCA)  &
is.na(Dictyota) == FALSE &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Dictyota",
is.na(CCA)  &
is.na(Dictyota) &
is.na(Turf) == FALSE &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Turf",
is.na(CCA) &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`) == FALSE &
is.na(`Porites lobata`) ~ "Pocillopora verrucosa",
is.na(CCA) &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) == FALSE ~ "Porites lobata",
is.na(`Pocillopora verrucosa`) == FALSE &
is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf)  |
is.na(`Porites lobata`) == FALSE &
is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf) ~ "Corraline",
is.na(`Pocillopora verrucosa`) &
is.na(CCA) == FALSE &
is.na(Dictyota) == FALSE &
is.na(`Porites lobata`) |
is.na(CCA) == FALSE &
is.na(Turf) == FALSE &
is.na(`Porites lobata`) &
is.na(`Pocillopora verrucosa`) ~ "Algae",
is.na(`Dictyota`) &
is.na(CCA)  &
is.na(Turf) &
is.na(`Porites lobata`) == FALSE &
is.na(`Pocillopora verrucosa`) == FALSE ~ "Coral",
is.na(`Dictyota`) == FALSE &
is.na(CCA)  &
is.na(Turf) == FALSE &
is.na(`Porites lobata`) &
is.na(`Pocillopora verrucosa`) ~ "Fleshy Algae",
is.na(CCA)  &
is.na(Dictyota) &
is.na(Turf) == FALSE &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Turf",
number_exudate_organisms > 3 ~ "Primary Producers",
TRUE ~ "Cosmo"))
micro_sigs_vector <- as.vector(dunnett_micro_analysis$OTU)
# META-STATS Random Forest -- microbes ------------------------------------------
rf_microbe_prep <- microbe_no_rare%>%
filter(Timepoint == "TF")%>%
select(c(1:6, OTU, log10))%>%
filter(OTU %in% micro_sigs_vector)%>%
# group_by(Organism, Replicate, Timepoint, DayNight, OTU)%>%
# summarize_if(is.numeric, sum)%>%
# ungroup()%>%
spread(OTU, log10)%>%
select(Organism, DayNight, 7:ncol(.))%>%
mutate(Organism = as.factor(Organism))
names(rf_microbe_prep) <- make.names(names(rf_microbe_prep))
rf_microbe <- rf_microbe_prep%>%
group_by(DayNight)%>%
nest()%>%
mutate(data = map(data, ~randomForest(Organism ~ ., .x,
importance = TRUE, proximity = TRUE,
ntree = 5000, na.action=na.exclude)),
mda = map(data, ~ .x$importance%>%
as.data.frame()%>%
rownames_to_column("otu")))
rf_microbe_mda <- rf_microbe%>%
select(DayNight, mda)%>%
unnest(mda)
pdf("~/Documents/GitHub/DORCIERR/data/plots/microbe_mda.pdf", width = 7, height = 5)
rf_microbe_mda%>%
filter(DayNight == "Day")%>%
ggplot(., aes(x= reorder(otu, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Day") +
geom_hline(yintercept = (top_n(rf_microbe_mda%>%
filter(DayNight=="Day"), 30, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
scale_x_discrete(breaks = seq(0, 568, 50))
rf_microbe_mda%>%
filter(DayNight == "Night")%>%
ggplot(., aes(x= reorder(otu, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Night") +
geom_hline(yintercept = (top_n(rf_microbe_mda%>%
filter(DayNight=="Night"), 35, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
scale_x_discrete(breaks = seq(0, 568, 50))
dev.off()
rf_microbe_sigs <- (rf_microbe_mda%>%
group_by(DayNight)%>%
nest()%>%
mutate(dic = map(data, ~ top_n(.x, 20, Dictyota)%>%
select(otu)),
cca = map(data, ~ top_n(.x, 20, CCA)%>%
select(otu)),
trf = map(data, ~ top_n(.x, 20, Turf)%>%
select(otu)),
poc = map(data, ~ top_n(.x, 20, `Pocillopora verrucosa`)%>%
select(otu)),
por = map(data, ~ top_n(.x, 20, `Porites lobata`)%>%
select(otu)),
wat = map(data, ~ top_n(.x, 20, `Water control`)%>%
select(otu)))%>%
select(-data)%>%
gather(species, importance, dic:wat)%>%
unnest(importance))$otu%>%
as.vector()%>%
unique()
# META-STATS -- Hierarchical cluster matrix----------------------------------------
hc_microbe <- mic_organism_post_hoc%>%
# filter(OTU %in% rf_microbe_sigs)%>%
ungroup()%>%
group_by(OTU)%>%
mutate(zscore = zscore(log10))%>%
ungroup()%>%
dplyr::select(c(Organism, DayNight, Replicate, OTU, zscore))%>%
unite(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
left_join(microbe_taxonomy, by = "OTU")%>%
separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";")%>%
unite(OFGO, c("Order", "Family", "Genus", "OTU"), sep = ";")%>%
select(-c(Size, OTU_id, Kingdom, Phylum, Class))%>%
spread(OFGO, zscore)
hc_compounds <- dom_stats_wdf%>%
filter(feature_number %in% producer_specific_change)%>%
mutate(log = case_when(is.na(log) ~ 1000,
TRUE ~ as.numeric(log)))%>%
spread(Timepoint, log)%>%
group_by(Organism, DayNight, feature_number)%>%
mutate(mean_t0 = mean(T0, na.rm = TRUE),
feature_difference = TF-mean_t0)%>%
ungroup()%>%
mutate(feature_difference = feature_difference + min(feature_difference))%>%
group_by(feature_number)%>%
mutate(zscore = zscore(feature_difference))%>%
ungroup()%>%
left_join(networking%>%
select(feature_number, combined_ID),
by = "feature_number")%>%
unite(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
unite(feature, c(feature_number, combined_ID), sep = "_")%>%
dplyr::select(-c(TF, T0, mean_t0, Experiment, feature_difference))%>%
spread(feature, zscore)
hc_df <- hc_compounds%>%
left_join(hc_microbe, by = "sample")
hc_compounds[is.na(hc_compounds)] <- 0
write_csv(hc_df%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/combined_hc_df.csv")
write_csv(hc_microbe%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/microbe_hc_df.csv")
write_csv(hc_compounds%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/compounds_hc_df.csv")
# GRAPHING -- Major depletolites ------------------------------------------
major_depletolites%>%
# left_join(dom_stats_wdf%>%
#             filter(Timepoint == "T0")
# group_by(Organism, DayNight, feature_number)%>%
# summarize_if(is.numeric, mean)%>%
# ungroup()
# , by = c("DayNight", "feature_number", "Organism"))%>%
left_join(feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF)), by = c("DayNight", "feature_number", "Organism"))%>%
mutate(log2_change = as.numeric(as.character(log2_change)))%>%
filter(`characterization scores` == "Good")%>%
ggplot(aes(simplified_makeup, y = -log2_change, fill = Organism)) +
geom_bar(stat = "summary", fun.y = "mean") +
# scale_color_manual(values = wes_palette("Zissou1", 30, type = "continuous")) +
facet_wrap(~DayNight) +
# geom_boxplot() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
# legend.position = "none"# get rid of legend panel bg
)
