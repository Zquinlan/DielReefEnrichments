select(feature_number, Organism, DayNight, feat_activity),
by = c('feature_number', 'Organism', 'DayNight'))%>%
# mutate(group_activity = case_when(activity == 'depletolite' & feat_activity == 'depletolite' ~ 'depletolite',
#                                   activity == 'accumolite' & feat_activity == 'accumolite' ~ 'accumolite',
#                                   TRUE ~ 'recalcitrant'))%>%
group_by(Organism, DayNight, activity)%>%
mutate(count = 1)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
filter(activity == 'depletolite')%>%
# filter(!is.na(activity))%>%
ggplot(aes(Organism, xic)) +
geom_bar(aes(fill = activity), stat = 'identity', position = 'stack') +
scale_fill_manual(values = c('#EBCC2A'
# '#78B7C5', '#EBCC2A', "#00A08A"
)) +
geom_text(aes(label = paste(count), vjust = -.2), size = 8) +
labs(y = 'Sum depletolite intensity', fill = 'Network Activity: ') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 25, angle = 60, hjust = 1),
axis.text.y = element_text(size = 25),
axis.title = element_text(size = 25),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top',
legend.text = element_text(size = 25),
legend.title = element_text(size = 25)
)
dev.off()
pdf("./plots/org_log2_091620.pdf", width = 15, height = 10)
org_log2_ra%>%
filter(activity == 'depletolite')%>%
group_by(feature_number, Organism, DayNight, activity)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
inner_join(t_pvals%>%
filter(activity == 'depletolite')%>%
select(feature_number, Organism, DayNight),
by = c('feature_number', 'Organism', 'DayNight'))%>%
ggplot(aes(Organism, log2_change)) +
geom_boxplot(aes(color = '#EBCC2A')) +
labs(y = bquote(atop(Average ~depletolite, ~log[2] ~change))) +
scale_color_manual(values = '#EBCC2A') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 25, angle = 60, hjust = 1),
axis.text.y = element_text(size = 25),
axis.title = element_text(size = 25),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
# VIZUALIZATION -- Nutrition/lability vs microbial community change -------
fcm_T0_5 <- dorc_fcm_fdom%>%
select(-c(1:4, 9:36, 38, 39))%>%
filter(Timepoint == 'T0' | Timepoint == 'T5')%>%
spread(Timepoint, `Cells µL-1`)%>%
group_by(Organism, DayNight)%>%
mutate(T0 = mean(T0, na.rm = TRUE),
cells_ul = T5-T0)%>%
select(-c(T0, T5))
lability_val <- log2_change_vals%>%
inner_join(t_pvals%>%
# filter(activity != 'depletolite')%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network, C:dG)%>%
filter(network != '-1'),
by = 'feature_number')%>%
left_join(metadata%>%
select(feature_number, `row m/z`),
by = 'feature_number')%>%
left_join(net_activity,
by = c('network', 'DayNight'))%>%
left_join(net_glm%>%
filter(DayNight == 'Day',
activity == 'depletolite',
response_var == 'row m/z')%>%
select(DayNight, r2)%>%
rename(mass_r2 = r2),
by = 'DayNight')%>%
left_join(nc_loglin%>%
filter(activity == 'depletolite')%>%
select(DayNight, r2)%>%
rename(nc_r2 = r2),
by = 'DayNight')%>%
left_join(pc_loglin%>%
filter(activity == 'depletolite')%>%
select(DayNight, r2)%>%
rename(pc_r2 = r2),
by = 'DayNight')%>%
left_join(fcm_T0_5%>%
mutate(Replicate = as.numeric(Replicate)),
by = c('Organism', 'DayNight', 'Replicate'))%>%
# filter(activity == 'depletolite')%>%
select(-c(Experiment, TF))%>%
group_by(Organism, DayNight, Replicate)%>%
mutate(nc = N/C,
pc = P/C,
sample_nc = T0*nc,
log_snc = log(sample_nc),
sample_pc = T0*pc,
log_spc = log(sample_pc),
activity2 = activity,
nc_ra = sample_nc/sum(T0),
pc_ra = sample_pc/sum(T0),
mass_x_r2 = `row m/z`/mean(`row m/z`)*mass_r2,
nc_x_r2 = nc_ra*nc_r2,
pc_x_r2 = pc_ra*pc_r2,
lability = mass_x_r2  + pc_x_r2) #nc was taken out because not significant p value
sum_xic_x_log2 <- lability_val%>%
group_by(Organism, DayNight, activity)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
group_by(Organism, activity)%>%
mutate(sum_xic = sum(T0))%>%
ungroup()
nutritional_stats <- lability_val%>%
select(-feature_number)%>%
filter(DayNight == 'Day')%>%
group_by(Organism, Replicate)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
mutate(exp = "d")%>%
group_by(exp)%>%
nest()%>%
mutate(model = map(data, ~ glm(lability ~ cells_ul, family = gaussian, .x)),
p_vals = map(model, ~tidy(.x)%>%
filter(term == 'cells_ul')),
r2 = map(model, ~with(summary(.x), 1-deviance/null.deviance)))%>%
select(-c(data, model))%>%
unnest(p_vals)%>%
ungroup()%>%
mutate(r2 = as.numeric(r2),
r = sqrt(r2),
FDR = p.adjust(p.value, method = 'BH'))
pdf("./plots/lability_nutrition_fcm.pdf", width = 15, height = 10)
lability_val%>%
filter(DayNight == 'Day')%>%
ggplot(aes(cells_ul, lability)) +
geom_point(aes(color = Organism), stat = 'summary', fun.y = 'mean', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(x = bquote('Cells'~µL^-1), y = "Metabolite pool nutritional value") +
geom_text(aes(x = 425, y = 0.239,
label = paste("p-value: ", nutritional_stats$p.value%>%
round(digits = 4), "*", sep = "")), size = 7) +
geom_text(aes(x = 425, y = 0.2375,
label = paste("r²: ", nutritional_stats$r2%>%
round(digits = 4), sep = "")), size = 7) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
# VIZUALIZATIONS -- Lability value from multiple regressions --------------
pn_mass_coe <- n_p_mulreg$coefficients["`row m/z`"]
pn_nosc_coe <- n_p_mulreg$coefficients["NOSC"]
pn_n_coe <- n_p_mulreg$coefficients["log_snc"]
pn_p_coe <- n_p_mulreg$coefficients["log_spc"]
n_mass_coe <- n_mulreg$coefficients["`row m/z`"]
n_nosc_coe <- n_mulreg$coefficients["NOSC"]
n_n_coe <- n_mulreg$coefficients["log_snc"]
# m_mass_coe <- mass_mulreg$coefficients["`row m/z`"]  #This was not significant and I am not using the coef
m_nosc_coe <- mass_mulreg$coefficients["NOSC"]
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(P > 0 & N > 0 ~ -(`row m/z`*pn_mass_coe + NOSC*pn_nosc_coe + log_snc*pn_n_coe + log_spc*pn_p_coe),
P == 0 & N > 0 ~ -(`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe),
P == 0 & N == 0 ~ -(NOSC*n_nosc_coe),
TRUE ~ NA_real_))
#Linear model
lability_lm <- mul_reg_fcm%>%
filter(DayNight == 'Day',
activity == 'depletolite',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
lm(cells_ul ~ multiple_reg_lability, data = .)
lab_p <- (lability_lm%>%
tidy()%>%
filter(term == 'multiple_reg_lability'))$p.value
lab_r2 <- summary(lability_lm)$adj.r.squared
#Plotting
pdf("./plots/lability_nultiple_regressions.pdf", width = 15, height = 10)
mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
geom_text(aes(x = 14.7, y = 650,
label = paste("p-value: ", lab_p%>%
round(digits = 4), "**", sep = "")), size = 9) +
geom_text(aes(x = 14.7, y = 620,
label = paste("r²: ", lab_r2%>%
round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
# Supplemental xic/log2 change dont explain fcm ---------------------------
pdf("./plots/supplemental_xiclog2_fcm.pdf", width = 15, height = 10)
sum_xic_x_log2%>%
filter(!is.na(activity))%>%
ggplot(aes(cells_ul, sum_xic*log2_change)) +
geom_point(aes(color = Organism), stat = 'summary', fun.y = 'mean', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
sum_xic_x_log2%>%
filter(!is.na(activity))%>%
ggplot(aes(cells_ul, log2_change)) +
geom_point(aes(color = Organism), stat = 'summary', fun.y = 'mean', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
sum_xic_x_log2%>%
filter(!is.na(activity))%>%
ggplot(aes(cells_ul, sum_xic)) +
geom_point(aes(color = Organism), stat = 'summary', fun.y = 'mean', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
geom_text(aes(x = 14.7, y = 650,
label = paste("p-value: ", lab_p%>%
round(digits = 4), "**", sep = "")), size = 9) +
geom_text(aes(x = 14.7, y = 620,
label = paste("r²: ", lab_r2%>%
round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
org_pie%>%
ggplot() +
geom_arc_bar(aes(x0 = 0, y0 = 0, r0 = 0, r = 1,
start = start, end = end,
fill = activity, explode = explosive, linetype = NA)) +
geom_text(aes(x = textx, y = texty,
label =  paste(round(ra, digits = 4)*100, "%", sep = ""),
color = activity,
hjust = hjust, vjust = vjust), size = 10, show.legend = FALSE) +
coord_fixed() +
scale_x_continuous(limits = c(-1.5, 1.5),  # Adjust so labels are not cut off
name = "", breaks = NULL, labels = NULL) +
scale_y_continuous(limits = c(-1.2, 1.3),      # Adjust so labels are not cut off
name = "", breaks = NULL, labels = NULL) +
theme_classic() +
facet_wrap(~ Organism) +
scale_fill_manual(values = c('#78B7C5', '#EBCC2A', "#00A08A")) +
scale_color_manual(values = c('#78B7C5', '#EBCC2A', "#00A08A")) +
labs(fill = 'Network activity', color = 'Network activity') +
theme(axis.line = element_blank(),
axis.text = element_text(size = 20),
axis.ticks = element_blank(),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_blank(),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
strip.text = element_text(size=20),
legend.text = element_text(size = 20),
legend.title = element_text(size = 20),
strip.background = element_blank())
lability_val_check <- mul_reg_fcm$multiple_reg_lability
dev.off()
lability_val_check <- mul_reg_fcm$multiple_reg_lability
car::qqPlot(lability_val_check,
ylab = "Lability value", xlab = "Normal quantiles",
main = 'QQ-plot: Lability value')
n_p_mulreg$coefficients
pn_intercept <- n_p_mulreg$coefficients["(Intercept)"]
m_intercept <- mass_mulreg$coefficients["(Intercept)"]
n_intercept <- n_mulreg$coefficients["(Intercept)"]
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(P > 0 & N > 0 ~ -(`row m/z`*pn_mass_coe + NOSC*pn_nosc_coe + log_snc*pn_n_coe + log_spc*pn_p_coe + pn_intercept),
P == 0 & N > 0 ~ -(`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe + n_intercept),
P == 0 & N == 0 ~ -(NOSC*n_nosc_coe + m_intercept),
TRUE ~ NA_real_))
mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
geom_text(aes(x = 14.7, y = 650,
label = paste("p-value: ", lab_p%>%
round(digits = 4), "**", sep = "")), size = 9) +
geom_text(aes(x = 14.7, y = 620,
label = paste("r²: ", lab_r2%>%
round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(P > 0 & N > 0 ~ -(`row m/z`*pn_mass_coe + NOSC*pn_nosc_coe + log_snc*pn_n_coe + log_spc*pn_p_coe + pn_intercept),
P == 0 & N > 0 ~ -(`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe + n_intercept),
P == 0 & N == 0 ~ -(NOSC*n_nosc_coe + m_intercept),
TRUE ~ NA_real_))
mul_reg_fcm%>%
filter(DayNight == 'Day',
NOSC < 0)%>%
group_by(Organism, Replicate)%>%
summarise_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
ggplot(aes(multiple_reg_lability, cells_ul)) +
geom_point(aes(color = Organism), stat = 'identity', size = 5) +
scale_color_manual(values = org_colors_no_water) +
geom_smooth(method = 'lm') +
labs(y = bquote('Cells'~µL^-1), x = "Metabolite pool nutritional value") +
geom_text(aes(x = 14.7, y = 650,
label = paste("p-value: ", lab_p%>%
round(digits = 4), "**", sep = "")), size = 9) +
geom_text(aes(x = 14.7, y = 620,
label = paste("r²: ", lab_r2%>%
round(digits = 4), sep = "")), size = 9) +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
axis.title = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
lability_val_check <- mul_reg_fcm$multiple_reg_lability
car::qqPlot(lability_val_check,
ylab = "Lability value", xlab = "Normal quantiles",
main = 'QQ-plot: Lability value')
mul_reg_fcm <- lability_val%>%
ungroup()%>%
mutate(multiple_reg_lability = case_when(P > 0 & N > 0 ~ -(`row m/z`*pn_mass_coe + NOSC*pn_nosc_coe + log_snc*pn_n_coe + log_spc*pn_p_coe),
P == 0 & N > 0 ~ -(`row m/z`*n_mass_coe + NOSC*n_nosc_coe + log_snc*n_n_coe),
P == 0 & N == 0 ~ -(NOSC*n_nosc_coe),
TRUE ~ NA_real_))
p_mulreg <- mul_reg%>%
filter(N == 0,
P > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC*log_spc, data = .)
n_mulreg <- mul_reg%>%
filter(N > 0,
P == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC*log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0,
P == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC, data = .)
sink("./analysis/multiple_reg_coefficients_asterisks.txt")
summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
sink()
#can just impute mean for NA values
n_p_mulreg <- mul_reg%>%
filter(N > 0,
P > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC*log_snc*log_spc, data = .)
p_mulreg <- mul_reg%>%
filter(N == 0,
P > 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC*log_spc, data = .)
n_mulreg <- mul_reg%>%
filter(N > 0,
P == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC*log_snc, data = .)
mass_mulreg <- mul_reg%>%
filter(N == 0,
P == 0)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
lm(log2_change ~ `row m/z`*NOSC, data = .)
sink("./analysis/multiple_reg_coefficients_asterisks.txt")
summary(n_p_mulreg)
# summary(p_mulreg)
summary(n_mulreg)
summary(mass_mulreg)
sink()
