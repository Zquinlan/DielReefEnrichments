# full_join(., fdom_doc_log10, by = c("Organism", "Timepoint", "Replicate", "DayNight"))%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
!Timepoint == c("T1", "T2", "T3", "T4"))%>%
gather(feature_number, log, 6:ncol(.))%>%
right_join(log2_features%>%
select(-log2_change, -Replicate), by = c("feature_number", "DayNight"))
# PRE-STATS CLEAINING -- FCM Stats prep---------------------------------------------------------------------
## This should calculate mean cells per hour per µL for each organism
## Just looks at log10(TF) - mean(log10(T0))
## Will result in log10(cells*µL-1)*hr^-1
fcm_wdf <- dorc_fcm_fdom%>%
dplyr::select(c(1:8,34:ncol(.)))
fcm_th_t0_prep <-fcm_wdf%>%
filter(Timepoint %like any% c('T0', 'T4'),
!Organism == 'Influent',
!Organism == 'Offshore')%>%
mutate(log_10_cellsµL = log10(`Cells µL-1`))%>%
dplyr::select(c(5:8, 15))%>%
spread(Timepoint, log_10_cellsµL)
fcm_t0 <- fcm_th_t0_prep%>%
dplyr::select(-c(T4, Replicate))%>%
group_by(Organism, DayNight)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)
fcm_rate_th_t0 <- fcm_th_t0_prep%>%
dplyr::select(-T0)%>%
left_join(., fcm_t0, by = c("Organism", "DayNight"))%>%
add_column(change_per_hour = (.$T4 - .$T0)/24)
fcm_t7 <- fcm_wdf%>%
mutate(log_10_cellsµL = log10(`Cells µL-1`))%>%
dplyr::select(c(5:8, 15))%>%
filter(Timepoint == c('TF'),
!Organism == 'Influent')%>%
spread(Timepoint, log_10_cellsµL)
## This is the actual dataframe to use for running FCM stats
fcm_stats_df <- left_join(fcm_t7, fcm_rate_th_t0, by = c("Organism", "Replicate", "DayNight"))%>%
dplyr::select(-c(5,6))%>%
gather(test, log_value, 4:5)
# PRE-STATS CLEANING -- fDOM and DOC --------------------------------------------------------------
fdom_log10 <-fdom_wdf%>%
dplyr::select(c(1:5, 15:21))%>%
gather(fluor, val, 6:ncol(.))%>%
mutate(val = log10(val))%>%
spread(fluor, val)
doc_log10 <- moorea_doc%>%
mutate_if(is.numeric, log10)%>%
filter(sample_name != "D_OF_1_T0N",
sample_name != "D_IN_2_T0N",
sample_name != "D_PL_3_TFN",
sample_name != "D_TR_1_T0N",
sample_name != "D_WA_2_T0D",
sample_name != "D_WA_1_T0D",
sample_name != "D_CC_1_T0D",
sample_name != "D_CC_2_T0D")%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_", remove = FALSE)%>%
dplyr::mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)))%>%
dplyr::mutate(Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
Organism == "IN" ~ "Influent",
Organism == "OF" ~ "Offshore",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"))
fdom_doc_log10 <- left_join(fdom_log10, doc_log10, by = "sample_name")%>%
dplyr::select(-sample_name)
# PRE-STATS CLEANING -- Microbes and pre-filtering OTUs for abundance-----------------------------------------------
microbe_combined <- microbe_abundance_raw%>%
dplyr::select(-1)%>%
mutate(Group = case_when(Group == "Dorcierr_D_DT_1_TFD" ~ "D_DT_1_TFD",
Group == "DORCIERR_D_WA_2_TFN" ~ "D_WA_2_TFN",
Group == "D_PV_2_TFN_SA504_SC704" ~ "D_PV_2_TFN",
Group == "D_PV_2_TFN_SA503_SC704" ~ "D_PV_3_TFN",
Group == "D_WA_4_TFN_SA503_SC703" ~ "D_PL_3_TFN",
Group == "D_WA_4_TFN_SA504_SC703" ~ "D_WA_4_TFN",
TRUE ~ as.character(Group)))%>%
filter(Group %like% "%D_%")%>%
rename(sample_code = Group)%>%
gather(OTU, reads, 3:ncol(.))%>%
# left_join(., microbe_taxonomy, by = "OTU")%>%
# dplyr::select(-Size)%>%
# separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";", remove = FALSE)%>%
separate(sample_code, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_", remove = FALSE)%>%
dplyr::mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)))%>%
dplyr::mutate(Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
Organism == "IN" ~ "Influent",
Organism == "OF" ~ "Offshore",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"))%>%
filter(Organism != "Offshore",
Organism != "Influent")%>%
mutate(reads = case_when(reads == 0 ~ 1/numOtus,
TRUE ~ as.numeric(reads)))%>%
# left_join(fcm_wdf%>%
#             rename(sample_code = sample_name)%>%
#             select(c(`Cells µL-1`, sample_code)), by = "sample_code")%>%
group_by(sample_code)%>%
mutate(ra = reads/sum(reads))%>%
# cell_abun = ra*`Cells µL-1`,
# log10 = log10(cell_abun + 0.001))%>%
ungroup()%>%
group_by(OTU)%>%
mutate(abundant = case_when(max(ra) > 0.01 | sum(ra > 0.001) >=3 ~ "abundant",
TRUE ~ "rare"))
microbe_no_rare <- microbe_combined%>%
select(-c(sample_code, reads, numOtus))%>%
ungroup()%>%
spread(Timepoint, ra)%>%
group_by(OTU, DayNight, Organism)%>%
mutate(log2_change = log2(TF/mean(T0, na.rm = TRUE)),
log2_change = na_if(log2_change, "Inf"),
log2_change = na_if(log2_change, "-Inf"),
log2_change = na_if(log2_change, "NaN"))%>%
filter(abundant == "abundant")%>%
select(-abundant)
# microbe_log2 <- microbe_combined%>%
#   select(-c(cell_abun, log10, numOtus, reads, sum, `Cells µL-1`))%>%
#   spread(Timepoint, ra)%>%
#   group_by(OTU, DayNight, Organism)%>%
#   mutate(log2_change = log2(TF/mean(T0, na.rm = TRUE)))%>%
#   filter(abundant == "abundant")%>%
#   select(-abundant)
# PRE-STATS CLEANING -- microbe RA data  --------------------------------------------
ra_bigger_TF <- microbe_combined%>%
filter(abundant == "abundant")%>%
select(-abundant)%>%
select(-c(reads, numOtus, sample_code))%>%
spread(Organism, ra)%>%
gather(Organism, ra, 6:10)%>%
mutate(difference = ra - `Water control`)%>%
filter(difference > 0)%>%
dplyr::select(c(DayNight, OTU, Organism))
average_ra <- microbe_no_rare%>%
select(-c(Experiment, Replicate))%>%
group_by(OTU, Organism, DayNight)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()
osm_ra_bigger_TF <- microbe_combined%>%
filter(abundant == "abundant",
Organism != "Turf",
Organism != "Porites lobata")%>%
select(-abundant)%>%
select(-c(reads, numOtus, sample_code))%>%
spread(Organism, ra)%>%
gather(Organism, ra, 6:8)%>%
mutate(difference = ra - `Water control`)%>%
filter(difference > 0)%>%
dplyr::select(c(DayNight, OTU, Organism))
# SET SEED ----------------------------------------------------------------
set.seed(2005)
# STATS  -- T-TEST Network level ------------------------------------------
net_test <- dom_stats_wdf%>%
left_join(networking%>%
select(feature_number, network), by = "feature_number")%>%
filter(network != "-1")%>%
group_by(network, DayNight)%>%
nest()%>%
mutate(greater = map(data, ~ t.test(log ~ Timepoint, .x, alternative = "greater")),
lesser = map(data, ~ t.test(log ~ Timepoint, .x, alternative = "less")))%>%
select(-data)%>%
mutate(greater = map(greater, ~ .x["p.value"][[1]]))%>%
mutate(lesser = map(lesser, ~ .x["p.value"][[1]]))%>%
ungroup()%>%
mutate(greater = as.numeric(greater),
lesser = as.numeric(lesser),
FDR_greater = p.adjust(greater, method = "BH"),
FDR_lesser = p.adjust(lesser, method = "BH"))%>%
mutate(activity = case_when(FDR_greater < 0.05 ~ "depletolite",
FDR_lesser < 0.05 ~ "accumolite",
TRUE ~ "recalcitrant"))
net_activity <- net_test%>%
group_by(network, activity)%>%
summarize_if(is.numeric, mean)%>%
select(network, activity)
# STATS - GLM Activity groupings -----------------------------------------------
#Difference within activity groupings
net_glm <- log2_change_vals%>%
left_join(networking%>%
select(c(feature_number, network, NOSC)), by = "feature_number")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
inner_join(day_exometabolites, by = 'feature_number')%>%
mutate(activity = case_when(is.na(activity) ~ 'recalcitrant',
TRUE ~ as.character(activity)))%>% #This line was added because entire networks did not pass the log2 bottleneck
select(-c(T0,TF, complete_removal))%>%
gather(response_var, value, NOSC:`row m/z`)%>%
group_by(DayNight, activity, response_var)%>%
nest()%>%
mutate(model = map(data, ~ glm(log2_change ~ value, family = gaussian, .x)),
p_vals = map(model, ~tidy(.x)%>%
filter(term == 'value')),
r2 = map(model, ~with(summary(.x), 1-deviance/null.deviance)))%>%
select(-c(data, model))%>%
unnest(p_vals)%>%
ungroup()%>%
mutate(r2 = as.numeric(r2),
r = sqrt(r2),
FDR = p.adjust(p.value, method = 'BH'))
write_csv(net_glm, "./analysis/net_glm_07012020.csv")
org_glm <- log2_change_vals%>%
left_join(networking%>%
select(c(feature_number, network, NOSC)), by = "feature_number")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
right_join(day_exometabolites, by = 'feature_number')%>%
mutate(activity = case_when(is.na(activity) ~ 'recalcitrant',
TRUE ~ as.character(activity)))%>% #This line was added because entire networks did not pass the log2 bottleneck
filter(activity == 'depletolite')%>%
select(-c(T0,TF, complete_removal, activity))%>%
gather(response_var, value, NOSC:`row m/z`)%>%
group_by(DayNight, Organism, response_var)%>%
nest()%>%
mutate(model = map(data, ~ glm(log2_change ~ value, family = gaussian, .x)),
p_vals = map(model, ~tidy(.x)%>%
filter(term == 'value')),
r2 = map(model, ~with(summary(.x), 1-deviance/null.deviance)))%>%
select(-c(data, model))%>%
unnest(p_vals)%>%
ungroup()%>%
mutate(r2 = as.numeric(r2),
r = sqrt(r2),
FDR = p.adjust(p.value, method = 'BH'))
pdf("plots/glm_NOSC_Mass.pdf", width = 15, height = 10)
log2_change_vals%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "feature_number")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
right_join(day_exometabolites, by = 'feature_number')%>%
filter(activity != 'recalcitrant')%>%
mutate(activity2 = activity)%>%
select(-c(T0,TF, complete_removal))%>%
gather(response_var, value, NOSC:`row m/z`)%>%
ggplot(aes(value, log2_change, color = activity)) +
facet_wrap(~ response_var, scales = 'free_x') +
geom_point(stat = 'summary', fun.y = mean) +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
log2_change_vals%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "feature_number")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
inner_join(unique_benthic_metabolites, by = c('Organism', 'feature_number'))%>%
filter(activity == 'depletolite')%>%
mutate(Organism2 = Organism)%>%
select(-c(T0,TF, complete_removal))%>%
gather(response_var, value, NOSC:`row m/z`)%>%
ggplot(aes(value, log2_change, color = Organism)) +
facet_wrap(~ response_var, scales = 'free_x') +
geom_point(stat = 'summary', fun.y = mean) +
# scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = Organism2)) +
# scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 20),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
nosc_quadrants <- log2_change_vals%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "feature_number")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
filter(activity != 'recalcitrant')%>%
group_by(feature_number, Organism, DayNight, network, activity)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
mutate(quadrant = case_when(log2_change > -3.3 & log2_change < 0 & NOSC > 0 ~ '6',
log2_change > -3.3 & log2_change < 0 & NOSC <= 0 ~ '5',
log2_change <= -3.3 & NOSC > 0 ~ '8',
log2_change <= -3.3 & NOSC <= 0 ~ '7',
log2_change > 0 & log2_change < 1 & NOSC <= 0 ~ '3',
log2_change > 0 & log2_change < 1 & NOSC > 0 ~ '4',
log2_change >= 1 & NOSC <= 0 ~ '1',
log2_change >= 1 & NOSC > 0 ~ '2'))%>%
filter(!is.na(quadrant))
# STATS - ANOVA Activity groupings ----------------------------------------
# Difference between activity groupings
net_anova <- net_activity%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "network")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
gather(response_var, value, NOSC:`row m/z`)%>%
group_by(response_var)%>%
nest()%>%
mutate(anova = map(data, ~ aov(value ~ activity, .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
select(p.value)%>%
rename(anova = p.value)),
tukey = map(data, ~ aov(value ~ activity, .x)%>%
TukeyHSD(p.adjust.methods = 'BH')%>%
tidy()))%>%
select(-data)%>%
unnest(c(anova, tukey))%>%
ungroup()%>%
filter(anova < 0.05,
adj.p.value < 0.05)
net_activity%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "network")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
gather(response_var, value, NOSC:`row m/z`)%>%
ggplot(aes(activity, value)) +
# geom_jitter() +
geom_boxplot() +
facet_wrap(~response_var, scale = 'free_y')
# STATS ANOVA -- Microbe TWO-Way ------------------------------------------
aov_microbe <- microbe_no_rare%>%
group_by(OTU)%>%
nest()%>%
mutate(anova = map(data, ~ aov(log2_change ~ Organism*DayNight, .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
dplyr::select(term, p.value)))%>%
dplyr::select(-data)%>%
unnest(anova)
anova_microbe_pvalues <- aov_microbe%>%
ungroup()%>%
filter(p.value < 0.05)
# add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
# filter(FDR < 0.05)
organism_significant_microbes <- as.vector(anova_microbe_pvalues%>%
filter(term == "Organism"))$OTU
DayNight_significant_microbes <- as.vector(anova_microbe_pvalues%>%
filter(term != "Organism"))$OTU
# STATS -- One-Sample T-test ----------------------------------------------
t_test <- dom_stats_wdf%>%
group_by(feature_number, Organism, DayNight)%>%
spread(Timepoint, log)%>%
select(-c(Experiment, Replicate))%>%
nest()%>%
mutate(greater = map(data, ~ t.test(.$TF, mu = mean(.$T0, na.rm=TRUE), alternative = "greater")),
lesser = map(data, ~ t.test(.$TF, mu = mean(.$T0, na.rm=TRUE), alternative = "less")))
t_pvals <- t_test%>%
select(-data)%>%
mutate(greater = map(greater, ~ .x["p.value"][[1]]))%>%
mutate(lesser = map(lesser, ~ .x["p.value"][[1]]))%>%
ungroup()%>%
mutate(greater = as.numeric(greater),
lesser = as.numeric(lesser),
FDR_greater = p.adjust(greater, method = "BH"),
FDR_lesser = p.adjust(lesser, method = "BH"))%>%
# select(-Organism)%>%
# group_by(feature_number, DayNight)%>%
# nest()%>%
# mutate(data = map(data, ~ mutate(.x, feature_number = as.character(feature_number))%>%
#                     group_by(feature_number)%>%
#                     summarize_if(is.numeric, min)%>%
mutate(activity = case_when(FDR_greater < 0.05 ~ "accumolite",
FDR_lesser < 0.05 ~ "depletolite",
FDR_lesser >= 0.05 & FDR_greater >= 0.05 |
is.na(FDR_lesser) & is.na(FDR_greater) ~ "recalcitrant"))
# # STATS -- ANOVA metabolties Organism T0 MAJOR DEPLETEs-------------------------------------------------------
anova_dom_t0_df <- t_pvals%>%
select(c(DayNight, feature_number, activity))%>%
inner_join(major_deplete_features, by = c("DayNight", "feature_number"))%>%
left_join(dom_stats_wdf, by = c("feature_number", "DayNight"))%>%
filter(Timepoint == "T0")
anova_dom_t0 <- anova_dom_t0_df%>%
group_by(feature_number, DayNight, activity)%>%
nest()%>%
mutate(data = map(data, ~ aov(log ~ Organism, data = .x)%>%
tidy()%>%
filter(!term == "Residuals")%>%
dplyr::select(term, p.value)))%>%
unnest(data)%>%
ungroup()%>%
mutate(FDR = p.adjust(p.value, method = "BH"),
anova = case_when(FDR < 0.05 ~ "producer_specific",
!FDR < 0.05 | is.na(FDR) ~ "background"))
sigs_osm <- anova_dom_t0%>%
filter(DayNight == "Day",
activity == "depletolite",
anova == "producer_specific")%>%
select(feature_number, DayNight)
# PRE-POST-HOC CLEANING -- Microbe Dunnetts and DayNight anova -------------------------------
mic_organism_post_hoc <- microbe_no_rare%>%
filter(OTU %in% organism_significant_microbes)
daynight_microbe_post_hoc <- microbe_no_rare%>%
filter(OTU %in% DayNight_significant_microbes)
# STATS POST-HOC -- FCM Tukeys ----------------------------------------------------------
# Tukey growth rates for the first half of the expierment
tukey_model_fcm <-fcm_stats_df%>%
group_by(test, DayNight)%>%
nest()%>%
mutate(data = map(data, ~aov(log_value ~ Organism, .x)%>%
TukeyHSD(p.adjust.methods = "BH")%>%
tidy()))%>%
unnest(data)%>%
filter(adj.p.value < 0.05)
# STATS POST-HOC -- MICROBES Dunnetts -----------------------------
organism_order_micro <- as.factor(mic_organism_post_hoc$Organism)%>%
relevel("Water control")%>%
levels()%>%
as.vector()
dunnett_microbe_pvals <- mic_organism_post_hoc%>%
group_by(DayNight, OTU)%>%
mutate(sum = sum(log2_change))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
mutate(Organism = factor(Organism))%>%
mutate(Organism = fct_relevel(Organism, organism_order_micro))%>%
nest()%>%
mutate(dunnett = map(data, ~ aov(log2_change ~ Organism, .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(dunnett, ~summary(.x)%>%
tidy()))%>%
dplyr::select(-c(data,dunnett))%>%
unnest(dunnett_summary)%>%
dplyr::select(-c(4:7))%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
# STATS POST-HOC -- DayNight MICROBES t-test organism --------------------
daynight_microbe_pvals <- mic_organism_post_hoc%>%
group_by(Organism, OTU)%>%
mutate(sum = sum(log2_change))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
nest()%>%
mutate(data = map(data, ~ aov(log2_change ~ DayNight, .x)%>%
tidy()))%>%
unnest(data)%>%
dplyr::select(-c(4:7))%>%
filter(term != "Residuals")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
# STATS POST-HOC -- DOM Dunnetts ------------------------------------------
dunnett_factors_dom <- as.factor(anova_dom_t0_df$Organism)%>%
relevel("Water control")%>%
levels()%>%
as.vector()
dunnetts_dom <- anova_dom_t0_df%>%
right_join(sigs_osm, by = c("feature_number", "DayNight"))%>%
group_by(feature_number, DayNight)%>%
mutate(sum = sum(log))%>%
filter(sum != 0)%>%
dplyr::select(-sum)%>%
mutate(Organism = factor(Organism)%>%
fct_relevel(dunnett_factors_dom))%>%
nest()%>%
mutate(dunnett = map(data, ~ aov(log ~ Organism, .x)%>%
glht(linfct = mcp(Organism = "Dunnett"))),
dunnett_summary = map(dunnett, ~summary(.x)%>%
tidy()))%>%
dplyr::select(-c(data,dunnett))%>%
unnest(dunnett_summary)%>%
dplyr::select(-c(4:7))%>%
mutate(lhs = gsub(" - Water control", "", lhs))%>%
rename("Organism" = "lhs")%>%
ungroup()%>%
add_column(FDR = p.adjust(.$p.value, method = "BH"))%>%
filter(FDR < 0.05)
