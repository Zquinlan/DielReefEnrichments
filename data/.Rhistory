group_by(DayNight, feature_number)%>%
nest()%>%
mutate(data = map(data, ~ mutate(.x, reactivity = paste(colnames(.)[!is.na(.) > 0], sep = ", ", collapse = ", "))))%>%
unnest(data)%>%
left_join(networking, by = "feature_number")%>%
group_by(DayNight, reactivity)%>%
nest()
# t_test_features <- compound_prevalance%>%
#   left_join(networking, by = "feature_number")
#
# grouped_t_test_features <- t_test_features%>%
#   group_by(exudate_type, DayNight, activity)%>%
#   nest()
t_test_feature_inchi <- t_test_features%>%
filter(activity != "recalcitrant")%>%
ungroup()%>%
select(feature_number, inchi_key)%>%
unique()%>%
filter(!is.na(inchi_key))
write_tsv(t_test_feature_inchi, "~/Documents/GitHub/DORCIERR/data/analysis/inchi_key_norecal.tsv")
# META-STATS -- Major Depleteolites ---------------------------------------
major_deplete <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF))%>%
spread(Organism, log2_change)%>%
right_join(dunnetts_dom, by = c("DayNight", "feature_number"))%>%
left_join(networking, by = "feature_number")%>%
group_by(DayNight, feature_number, Organism)
major_deplete$max_log <- apply(major_deplete[3:8], 1, min)
major_depletolites <- major_deplete%>%
filter(max_log < -3.3)%>%
filter(Organism == "Pocillopora verrucosa" | Organism == "Dictyota" | Organism == "CCA")
# META-STATS -- microbes --------------------------------------------------
dunnett_micro_analysis <- dunnett_microbe_pvals%>%
dplyr::select(-p.value)%>%
spread(Organism, FDR)%>%
add_column(number_exudate_organisms = rowSums(.[3:ncol(.)] >= 0, na.rm = TRUE))%>%
mutate(microbe_organism = case_when(is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "CCA",
is.na(CCA)  &
is.na(Dictyota) == FALSE &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Dictyota",
is.na(CCA)  &
is.na(Dictyota) &
is.na(Turf) == FALSE &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Turf",
is.na(CCA) &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`) == FALSE &
is.na(`Porites lobata`) ~ "Pocillopora verrucosa",
is.na(CCA) &
is.na(Dictyota) &
is.na(Turf) &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) == FALSE ~ "Porites lobata",
is.na(`Pocillopora verrucosa`) == FALSE &
is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf)  |
is.na(`Porites lobata`) == FALSE &
is.na(CCA) == FALSE &
is.na(Dictyota) &
is.na(Turf) ~ "Corraline",
is.na(`Pocillopora verrucosa`) &
is.na(CCA) == FALSE &
is.na(Dictyota) == FALSE &
is.na(`Porites lobata`) |
is.na(CCA) == FALSE &
is.na(Turf) == FALSE &
is.na(`Porites lobata`) &
is.na(`Pocillopora verrucosa`) ~ "Algae",
is.na(`Dictyota`) &
is.na(CCA)  &
is.na(Turf) &
is.na(`Porites lobata`) == FALSE &
is.na(`Pocillopora verrucosa`) == FALSE ~ "Coral",
is.na(`Dictyota`) == FALSE &
is.na(CCA)  &
is.na(Turf) == FALSE &
is.na(`Porites lobata`) &
is.na(`Pocillopora verrucosa`) ~ "Fleshy Algae",
is.na(CCA)  &
is.na(Dictyota) &
is.na(Turf) == FALSE &
is.na(`Pocillopora verrucosa`)  &
is.na(`Porites lobata`) ~ "Turf",
number_exudate_organisms > 3 ~ "Primary Producers",
TRUE ~ "Cosmo"))%>%
left_join(microbe_taxonomy, by = "OTU")
micro_sigs_vector <- as.vector(dunnett_micro_analysis$OTU)
# META-STATS Random Forest -- microbes ------------------------------------------
rf_microbe_prep <- microbe_no_rare%>%
filter(Timepoint == "TF")%>%
select(c(1:6, OTU, log10))%>%
filter(OTU %in% micro_sigs_vector)%>%
# group_by(Organism, Replicate, Timepoint, DayNight, OTU)%>%
# summarize_if(is.numeric, sum)%>%
# ungroup()%>%
spread(OTU, log10)%>%
select(Organism, DayNight, 7:ncol(.))%>%
mutate(Organism = as.factor(Organism))
names(rf_microbe_prep) <- make.names(names(rf_microbe_prep))
rf_microbe <- rf_microbe_prep%>%
group_by(DayNight)%>%
nest()%>%
mutate(data = map(data, ~randomForest(Organism ~ ., .x,
importance = TRUE, proximity = TRUE,
ntree = 5000, na.action=na.exclude)),
mda = map(data, ~ .x$importance%>%
as.data.frame()%>%
rownames_to_column("otu")))
rf_microbe_mda <- rf_microbe%>%
select(DayNight, mda)%>%
unnest(mda)
pdf("~/Documents/GitHub/DORCIERR/data/plots/microbe_mda.pdf", width = 7, height = 5)
rf_microbe_mda%>%
filter(DayNight == "Day")%>%
ggplot(., aes(x= reorder(otu, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Day") +
geom_hline(yintercept = (top_n(rf_microbe_mda%>%
filter(DayNight=="Day"), 30, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
scale_x_discrete(breaks = seq(0, 568, 50))
rf_microbe_mda%>%
filter(DayNight == "Night")%>%
ggplot(., aes(x= reorder(otu, -MeanDecreaseAccuracy), y = MeanDecreaseAccuracy)) +
geom_point(stat = "identity") +
ggtitle("Night") +
geom_hline(yintercept = (top_n(rf_microbe_mda%>%
filter(DayNight=="Night"), 35, MeanDecreaseAccuracy)%>%
arrange(-MeanDecreaseAccuracy))$MeanDecreaseAccuracy[30],
col = "red") +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"),
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic")) +
scale_x_discrete(breaks = seq(0, 568, 50))
dev.off()
rf_microbe_sigs <- (rf_microbe_mda%>%
group_by(DayNight)%>%
nest()%>%
mutate(dic = map(data, ~ top_n(.x, 20, Dictyota)%>%
select(otu)),
cca = map(data, ~ top_n(.x, 20, CCA)%>%
select(otu)),
trf = map(data, ~ top_n(.x, 20, Turf)%>%
select(otu)),
poc = map(data, ~ top_n(.x, 20, `Pocillopora verrucosa`)%>%
select(otu)),
por = map(data, ~ top_n(.x, 20, `Porites lobata`)%>%
select(otu)),
wat = map(data, ~ top_n(.x, 20, `Water control`)%>%
select(otu)))%>%
select(-data)%>%
gather(species, importance, dic:wat)%>%
unnest(importance))$otu%>%
as.vector()%>%
unique()
# META-STATS -- Hierarchical cluster matrix----------------------------------------
hc_microbe <- mic_organism_post_hoc%>%
# filter(OTU %in% rf_microbe_sigs)%>%
ungroup()%>%
group_by(OTU)%>%
mutate(zscore = zscore(log10))%>%
ungroup()%>%
dplyr::select(c(Organism, DayNight, Replicate, OTU, zscore))%>%
unite(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
left_join(microbe_taxonomy, by = "OTU")%>%
separate(Taxonomy, c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "OTU_id"), sep = ";")%>%
unite(OFGO, c("Order", "Family", "Genus", "OTU"), sep = ";")%>%
select(-c(Size, OTU_id, Kingdom, Phylum, Class))%>%
spread(OFGO, zscore)
hc_compounds <- dom_stats_wdf%>%
filter(feature_number %in% producer_specific_change)%>%
mutate(log = case_when(is.na(log) ~ 1000,
TRUE ~ as.numeric(log)))%>%
spread(Timepoint, log)%>%
group_by(Organism, DayNight, feature_number)%>%
mutate(mean_t0 = mean(T0, na.rm = TRUE),
feature_difference = TF-mean_t0)%>%
ungroup()%>%
mutate(feature_difference = feature_difference + min(feature_difference))%>%
group_by(feature_number)%>%
mutate(zscore = zscore(feature_difference))%>%
ungroup()%>%
left_join(networking%>%
select(feature_number, combined_ID),
by = "feature_number")%>%
unite(sample, c("Organism", "DayNight", "Replicate"), sep = "_")%>%
unite(feature, c(feature_number, combined_ID), sep = "_")%>%
dplyr::select(-c(TF, T0, mean_t0, Experiment, feature_difference))%>%
spread(feature, zscore)
hc_df <- hc_compounds%>%
left_join(hc_microbe, by = "sample")
hc_compounds[is.na(hc_compounds)] <- 0
write_csv(hc_df%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/combined_hc_df.csv")
write_csv(hc_microbe%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/microbe_hc_df.csv")
write_csv(hc_compounds%>%
select(everything(), sample), "~/Documents/GitHub/DORCIERR/data/plots/compounds_hc_df.csv")
# GRAPHING -- [OSM] Pvalues, Log2 Volcano plot -----------------------------------------
volcano <- feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
filter(Organism != "Turf",
Organism != "Porites lobata",
Organism != "Water control")%>%
left_join(t_pvals, by = c("Organism", "DayNight", "feature_number"))%>%
mutate(fdr_combined = case_when(FDR_greater > FDR_lesser ~ FDR_lesser,
FDR_lesser > FDR_greater ~ FDR_greater,
TRUE ~ 1),
fdr_color = case_when(fdr_combined <= 0.05 ~ "Significant",
TRUE ~ "Not Signifant"))
volcano_themes <- function(x) {
ggplot(x, aes(log2_change, log10(T0), col = fdr_color)) +
geom_point(stat = "identity", size = 2.5, shape = 1, alpha = 0.8) +
scale_x_continuous(breaks= seq(-20, 18, 2)) +
scale_y_continuous(breaks = seq(0, 10, 1)) +
# scale_shape_manual(values = c(1,19)) +
scale_color_manual(values = c("gray38", "darkred")) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"))
}
pdf("./plots/osm_volcano.pdf", width = 6, height = 5)
volcano%>%
volcano_themes()
volcano%>%
volcano_themes() +
geom_vline(xintercept = -3.3, col = "red", linetype = "dashed") +
geom_vline(xintercept = 3.3, col = "red", linetype = "dashed")
# volcano%>%
#   volcano_themes() +
#   geom_hline(yintercept = -log10(0.05), col = "red", linetype = "dashed") +
#   geom_vline(xintercept = 3.3, col = "red", linetype = "dashed") +
#   geom_vline(xintercept = -3.3, col = "red", linetype = "dashed")
dev.off()
# GRAPHING -- [OSM] Major depletolites ------------------------------------------
# major_depletolites%>%
#   # left_join(dom_stats_wdf%>%
#   #             filter(Timepoint == "T0")
#               # group_by(Organism, DayNight, feature_number)%>%
#               # summarize_if(is.numeric, mean)%>%
#               # ungroup()
#             # , by = c("DayNight", "feature_number", "Organism"))%>%
#   left_join(feature_table_no_back_trans%>%
#               gather(sample_name, xic, 2:ncol(.))%>%
#               ungroup()%>%
#               separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
#               filter(!Experiment %like% "%Blank%",
#                      !Organism %like% "%Blank")%>%
#               mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
#                                             Experiment == "M" ~ "mordor",
#                                             Experiment == "R" ~ "RR3",
#                                             TRUE ~ as.character(Experiment)),
#                      Organism = case_when(Organism == "CC" ~ "CCA",
#                                           Organism == "DT" ~ "Dictyota",
#                                           Organism == "PL" ~ "Porites lobata",
#                                           Organism == "PV" ~ "Pocillopora verrucosa",
#                                           Organism == "TR" ~ "Turf",
#                                           Organism == "WA" ~ "Water control",
#                                           TRUE ~ as.character(Organism)))%>%
#               separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
#               mutate(DayNight = case_when(DayNight == "D" ~ "Day",
#                                           TRUE ~ "Night"),
#                      xic = case_when(xic == 0 ~ 1000,
#                                      TRUE ~ as.numeric(xic)))%>%
#               spread(Timepoint, xic)%>%
#               group_by(Organism, DayNight, feature_number)%>%
#               summarize_if(is.numeric, mean, na.rm = TRUE)%>%
#               mutate(log2_change = log2(TF/T0))%>%
#               ungroup()%>%
#               select(-c(T0, TF)), by = c("DayNight", "feature_number", "Organism"))%>%
#   mutate(log2_change = as.numeric(as.character(log2_change)))%>%
#   filter(`characterization scores` == "Good")%>%
#   ggplot(aes(simplified_makeup, y = -log2_change, fill = Organism)) +
#   geom_bar(stat = "summary", fun.y = "mean") +
#   # scale_color_manual(values = wes_palette("Zissou1", 30, type = "continuous")) +
#   facet_wrap(~DayNight) +
#   # geom_boxplot() +
#   theme(
#     # legend.position = "none",
#     # plot.margin = margin(2,.8,2,.8, "cm"),
#     axis.text.x = element_text(angle = 60, hjust = 1),
#     panel.background = element_rect(fill = "transparent"), # bg of the panel
#     plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
#     panel.grid.major = element_blank(), # get rid of major grid
#     panel.grid.minor = element_blank(), # get rid of minor grid
#     legend.background = element_rect(fill = "transparent"), # get rid of legend bg
#     legend.box.background = element_rect(fill = "transparent")
#     # legend.position = "none"# get rid of legend panel bg
#   )
osm_dunnett_features <- (dunnetts_dom%>%
filter(Organism != "Turf",
Organism != "Porites lobata",
DayNight == "Day")%>%
select(-p.value)%>%
spread(Organism, FDR)%>%
group_by(DayNight, feature_number)%>%
add_column(num_cols = rowSums(.[3:ncol(.)] >= 0, na.rm = TRUE))%>%
filter(num_cols != 1)%>%
ungroup())$feature_number%>%
as.vector()
osm_dunnetts <- dunnetts_dom%>%
filter(Organism != "Turf",
Organism != "Porites lobata",
feature_number %in% osm_dunnett_features)%>%
left_join(feature_table_no_back_trans%>%
gather(sample_name, xic, 2:ncol(.))%>%
ungroup()%>%
separate(sample_name, c("Experiment", "Organism", "Replicate", "Timepoint"), sep = "_")%>%
filter(!Experiment %like% "%Blank%",
!Organism %like% "%Blank")%>%
mutate(Experiment = case_when(Experiment == "D" ~ "dorcierr",
Experiment == "M" ~ "mordor",
Experiment == "R" ~ "RR3",
TRUE ~ as.character(Experiment)),
Organism = case_when(Organism == "CC" ~ "CCA",
Organism == "DT" ~ "Dictyota",
Organism == "PL" ~ "Porites lobata",
Organism == "PV" ~ "Pocillopora verrucosa",
Organism == "TR" ~ "Turf",
Organism == "WA" ~ "Water control",
TRUE ~ as.character(Organism)))%>%
separate(Timepoint, c("Timepoint", "DayNight"), sep = 2)%>%
mutate(DayNight = case_when(DayNight == "D" ~ "Day",
TRUE ~ "Night"),
xic = case_when(xic == 0 ~ 1000,
TRUE ~ as.numeric(xic)))%>%
group_by(Organism, Timepoint, DayNight, feature_number)%>%
mutate(Replicate = as.numeric(Replicate),
xic = case_when(sum(xic) == 4000 ~ xic + Replicate,
sum(xic) == 2000 ~ xic + Replicate,
TRUE ~ as.numeric(xic)))%>%
ungroup()%>%
spread(Timepoint, xic)%>%
group_by(Organism, DayNight, feature_number)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
mutate(log2_change = log2(TF/T0))%>%
ungroup()%>%
select(-c(T0, TF)), by = c("DayNight", "feature_number", "Organism"))%>%
mutate(log2_change = as.numeric(as.character(log2_change)))%>%
filter(log2_change <= -3.3)%>%
left_join(deplete_classified, by = c("feature_number", "Organism"))%>%
separate(ClassString, c("level 1", "level 2", "level 3",
"level 4", "level 5", "level 6", "level 7", "level 8"), sep = ";")%>%
mutate(FinalClass = case_when(FinalClass %like% "Unclass"~ "NA",
FinalClass %like% "Confusing" ~ "NA",
TRUE ~ as.character(FinalClass)))%>%
filter(`level 2` %like any% c("Organohetero%", "Lipids%", "Organic acids%"))
pdf("~/Documents/GitHub/DORCIERR/data/plots/osm_compounds.pdf", height = 7, width = 13)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
# FinalClass %like% "%carnitine%"
`level 2` %like% "Organic acids%"
)%>%
unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Organism, -log2_change, fill = compound)) +
geom_bar(stat = "identity", position = "stack") +
# facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
# `level 2` %like% "Organohetero%"
FinalClass %like% "%carnitine%"
)%>%
unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Organism, -log2_change, fill = compound)) +
geom_bar(stat = "identity", position = "stack") +
# facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
# `level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
`level 2` %like% "Organohetero%"
)%>%
unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Organism, -log2_change, fill = compound)) +
geom_bar(stat = "identity", position = "stack") +
# facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
osm_dunnetts%>%
filter(`level 2` != "NA",
`level 2` %like% "Lipids%" & !FinalClass %like% "%carnitine%"
)%>%
unite(compound, c("level 3", "FinalClass"), sep = " ")%>%
ggplot(aes(Organism, -log2_change, fill = compound)) +
geom_bar(stat = "identity", position = "stack") +
# facet_wrap(~Organism) +
# coord_flip() +
theme(
# legend.position = "none",
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
