#               mutate(scan = as.character(scan))%>%
#               rename('feature_number' = 'scan'), by = 'feature_number')%>%
#   filter(ecoNetConsensus %like% 'Organoheterocyclic%')
#
# pdf('plots/organoheterocyclicCompounds.pdf', width = 15, height = 10)
# organoheterocyclic_compounds%>%
#   select(-c(xic, ra, asin, network, net_act, ecoNetConsensusScore, numberOfNodes))%>%
#   spread(ecoNetConsensus, log10)%>%
#   gather(ecoNetConsensus, log10, 9:ncol(.))%>%
#   group_by(Replicate, DayNight, ecoNetConsensus, activity)%>%
#   summarize_if(is.numeric, sum, na.rm = TRUE)%>%
#   ungroup()%>%
#   group_by(DayNight, ecoNetConsensus, activity)%>%
#   mutate(std = sd(log10))%>%
#   summarize_if(is.numeric, mean)%>%
#   ungroup()%>%
#   mutate(std = case_when(log10 == 0 ~ NA_real_,
#                          TRUE ~ std))%>%
#   ggplot(aes(ecoNetConsensus, log10, fill = activity)) +
#   geom_errorbar(aes(ymax = log10 + std, ymin = log10 - 2), position = 'dodge2') +
#   geom_bar(stat = 'identity', position = 'dodge2') +
#   facet_wrap(~DayNight, nrow = 2) +
#   scale_fill_manual(values = c('#EBCC2A', "#006658")) +
#   # scale_fill_manual(values = c('orange', 'grey')) +
#   gen_theme() +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
#   labs(x = 'Putative Consensus Annotation', y = bquote(Total ~Production ~Intensity ~(log[10] ~XIC)))
# dev.off()
#
# pdf('plots/nAlkylindoleProductionOrganism.pdf', width = 15, height = 13)
# organoheterocyclic_compounds%>%
#   filter(ecoNetConsensus %like% '%N-alkyl%')%>%
#   select(-c(xic, ra, asin, network, net_act, ecoNetConsensusScore, numberOfNodes))%>%
#   spread(Organism, log10)%>%
#   gather(Organism, log10, CCA:Turf)%>%
#   group_by(Organism, Replicate, DayNight, ecoNetConsensus, activity)%>%
#   summarize_if(is.numeric, sum, na.rm = TRUE)%>%
#   ungroup()%>%
#   group_by(Organism, DayNight, ecoNetConsensus, activity)%>%
#   mutate(std = sd(log10, na.rm = TRUE))%>%
#   summarize_if(is.numeric, mean)%>%
#   ungroup()%>%
#   mutate(std = case_when(log10 == 0 ~ NA_real_,
#                          TRUE ~ std))%>%
#   ggplot(aes(Organism, log10, fill = activity)) +
#   geom_errorbar(aes(ymax = log10 + std, ymin = log10 - 2), position = 'dodge2') +
#   geom_bar(stat = 'identity', position = 'dodge2') +
#   facet_wrap(~DayNight, nrow = 2) +
#   scale_fill_manual(values = c('#EBCC2A', '#006658')) +
#   # coord_flip() +
#   # scale_fill_manual(values = c('orange', 'grey')) +
#   gen_theme() +
#   labs(x = 'Organism', y = bquote(atop(Total ~N-alkylindole ~Production, ~Intensity ~(log[10] ~XIC))))
# dev.off()
#
# pdf('plots/triazineProductionOrganism.pdf', width = 15, height = 13)
# organoheterocyclic_compounds%>%
#   filter(ecoNetConsensus %like% '%triazines')%>%
#   select(-c(xic, ra, asin, network, net_act, ecoNetConsensusScore, numberOfNodes))%>%
#   spread(Organism, log10)%>%
#   gather(Organism, log10, CCA:Turf)%>%
#   group_by(Organism, Replicate, DayNight, ecoNetConsensus, activity)%>%
#   summarize_if(is.numeric, sum, na.rm = TRUE)%>%
#   ungroup()%>%
#   group_by(Organism, DayNight, ecoNetConsensus, activity)%>%
#   mutate(std = sd(log10, na.rm = TRUE))%>%
#   summarize_if(is.numeric, mean)%>%
#   ungroup()%>%
#   mutate(std = case_when(log10 == 0 ~ NA_real_,
#                          TRUE ~ std))%>%
#   ggplot(aes(Organism, log10, fill = activity)) +
#   geom_errorbar(aes(ymax = log10 + std, ymin = log10 - 2), position = 'dodge2') +
#   geom_bar(stat = 'identity', position = 'dodge2') +
#   facet_wrap(~DayNight, nrow = 2) +
#   scale_fill_manual(values = c('#EBCC2A', '#006658')) +
#   # coord_flip() +
#   # scale_fill_manual(values = c('orange', 'grey')) +
#   gen_theme() +
#   labs(x = 'Organism', y = bquote(atop(Total ~Triazine ~Production, ~Intensity ~(log[10] ~XIC))))
# dev.off()
#
# # VIZUALIZATIONS -- Benzenoids compounds ----------------------------------
# benzenoid_compounds <- feature_stats_wdf%>%
#   filter(Timepoint == "T0")%>%
#   left_join(networking%>%
#               select(feature_number, network),
#             by = 'feature_number')%>%
#   mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
#                              TRUE ~ network))%>%
#   left_join(all_activity, by = c('net_act', 'DayNight'))%>%
#   ungroup()%>%
#   # filter(activity == 'depletolite')%>%
#   # group_by(feature_number, Organism, DayNight, network, activity)%>%
#   # summarize_if(is.numeric, mean)%>%
#   # ungroup()%>%
#   left_join(ecoNet%>%
#               select(-network)%>%
#               mutate(scan = as.character(scan))%>%
#               rename('feature_number' = 'scan'), by = 'feature_number')%>%
#   filter(ecoNetConsensus %like% 'Benzenoids%')
#
# pdf('plots/benzenoidsCompounds.pdf', width = 15, height = 10)
# benzenoid_compounds%>%
#   select(-c(xic, ra, asin, network, net_act, ecoNetConsensusScore, numberOfNodes))%>%
#   spread(ecoNetConsensus, log10)%>%
#   gather(ecoNetConsensus, log10, 9:ncol(.))%>%
#   group_by(Replicate, DayNight, ecoNetConsensus, activity)%>%
#   summarize_if(is.numeric, sum, na.rm = TRUE)%>%
#   ungroup()%>%
#   group_by(DayNight, ecoNetConsensus, activity)%>%
#   mutate(std = sd(log10))%>%
#   summarize_if(is.numeric, mean)%>%
#   ungroup()%>%
#   mutate(std = case_when(log10 == 0 ~ NA_real_,
#                          TRUE ~ std))%>%
#   ggplot(aes(ecoNetConsensus, log10, fill = activity)) +
#   geom_errorbar(aes(ymax = log10 + std, ymin = log10 - 2), position = 'dodge2') +
#   geom_bar(stat = 'identity', position = 'dodge2') +
#   facet_wrap(~DayNight, nrow = 2) +
#   scale_fill_manual(values = c('#78B7C5','#EBCC2A', "#006658")) +
#   gen_theme() +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
#   labs(x = 'Putative Consensus Annotation', y = bquote(Total ~Production ~Intensity ~(log[10] ~XIC)))
# dev.off()
#
# # VIZUALIZATIONS -- Organic Oxygen compounds ----------------------------------
# oxygen_compounds <- feature_stats_wdf%>%
#   filter(Timepoint == "T0")%>%
#   left_join(networking%>%
#               select(feature_number, network),
#             by = 'feature_number')%>%
#   mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
#                              TRUE ~ network))%>%
#   left_join(all_activity, by = c('net_act', 'DayNight'))%>%
#   ungroup()%>%
#   # filter(activity == 'depletolite')%>%
#   # group_by(feature_number, Organism, DayNight, network, activity)%>%
#   # summarize_if(is.numeric, mean)%>%
#   # ungroup()%>%
#   left_join(ecoNet%>%
#               select(-network)%>%
#               mutate(scan = as.character(scan))%>%
#               rename('feature_number' = 'scan'), by = 'feature_number')%>%
#   filter(ecoNetConsensus %like% '%oxygen%')
#
# pdf('plots/oxygenCompounds.pdf', width = 15, height = 10)
# oxygen_compounds%>%
#   select(-c(xic, ra, asin, network, net_act, ecoNetConsensusScore, numberOfNodes))%>%
#   spread(ecoNetConsensus, log10)%>%
#   gather(ecoNetConsensus, log10, 9:ncol(.))%>%
#   group_by(Replicate, DayNight, ecoNetConsensus, activity)%>%
#   summarize_if(is.numeric, sum, na.rm = TRUE)%>%
#   ungroup()%>%
#   group_by(DayNight, ecoNetConsensus, activity)%>%
#   mutate(std = sd(log10))%>%
#   summarize_if(is.numeric, mean)%>%
#   ungroup()%>%
#   mutate(std = case_when(log10 == 0 ~ NA_real_,
#                          TRUE ~ std))%>%
#   ggplot(aes(ecoNetConsensus, log10, fill = activity)) +
#   geom_errorbar(aes(ymax = log10 + std, ymin = log10 - 2), position = 'dodge2') +
#   geom_bar(stat = 'identity', position = 'dodge2') +
#   facet_wrap(~DayNight, nrow = 2) +
#   scale_fill_manual(values = c('#78B7C5','#EBCC2A', "#006658")) +
#   gen_theme() +
#   theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 8)) +
#   labs(x = 'Putative Consensus Annotation', y = bquote(Total ~Production ~Intensity ~(log[10] ~XIC)))
# dev.off()
# VIZUALIZATIONS -- PCOA of Consensus annotations, pairwise permanova -------------------------
# Have to load in EmojiFont here otherwise it messes with unicode points
library(emojifont)
load.emojifont('OpenSansEmoji.ttf')
pcoa <- feature_stats_wdf%>%
filter(Timepoint == 'T0')%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
TRUE ~ network))%>%
left_join(all_activity, by = c('net_act', 'DayNight'))%>%
left_join(ecoNet%>%
rename(feature_number = scan)%>%
mutate(feature_number = as.character(feature_number)), by = c('feature_number', 'network'))%>%
# separate(ecoNetConsensus, c('superclass_consensus', 'class_consensus', 'subclass_consensus'), remove = FALSE, sep = ';')%>%
ungroup()%>%
filter(activity == 'depletolite')%>%
# left_join(log2_change_vals%>%
#             ungroup(), by = c('feature_number', 'Replicate', 'Organism', 'DayNight'))%>%
select(-c(network, numberOfNodes, ecoNetConsensusScore, xic, ra, asin, net_act))%>%
group_by(ecoNetConsensus, DayNight, Replicate, Organism)%>%
summarize_if(is.numeric, sum, na.rm  = TRUE)%>%
ungroup()%>%
group_by(ecoNetConsensus, DayNight, Organism, Replicate)%>%
summarize_if(is.numeric, mean, na.rm  = TRUE)%>%
ungroup()%>%
unite(sample, c('DayNight', 'Organism', 'Replicate'), sep = '  ')%>%
spread(sample, log10)%>%
mutate_all(~replace(., is.na(.), 0))%>%
gather(sample, log10, 2:ncol(.))%>%
spread(ecoNetConsensus, log10)%>%
column_to_rownames(var = "sample")%>%
vegdist(na.rm = TRUE)%>%
pcoa()
## Plot Eigenvalues
pcoa$values[1:10,]%>%
as.data.frame()%>%
rownames_to_column("Axis")%>%
mutate(axis = as.numeric(Axis))%>%
ggplot(aes(reorder(Axis, axis), Relative_eig, label = round(Relative_eig, digits = 3))) +
geom_bar(stat = "identity") +
geom_text(size = 3, color = "red", vjust = -0.5)
pdf("plots/annotationPcoa.pdf", width = 15, height = 13)
pcoa$vectors%>%
as.data.frame()%>%
rownames_to_column(var = "sample")%>%
separate(sample, c('DayNight', 'Organism', 'Replicate'), sep = '  ')%>%
mutate(shape = case_when(DayNight == 'Day' ~ '\u2600',
TRUE ~ emoji('crescent_moon')))%>%
ggplot(., aes(x = Axis.1, y = Axis.2, color = Organism)) +
geom_text(aes(label = shape), cex = 13, family= 'OpenSansEmoji') +
scale_color_manual(values = org_colors_no_water) +
theme(
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"),
axis.text = element_text(size = 25),
axis.title = element_text(size = 25)) +
xlab(str_c("Axis 1", " (", round(pcoa$values$Relative_eig[1], digits = 4)*100, "%)", sep = "")) +
ylab(str_c("Axis 2", " (", round(pcoa$values$Relative_eig[2], digits = 4)*100, "%)", sep = ""))
dev.off()
# Pairwise PERMANOVA
permanova_df <- feature_stats_wdf%>%
filter(Timepoint == 'T0')%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
TRUE ~ network))%>%
left_join(all_activity, by = c('net_act', 'DayNight'))%>%
left_join(ecoNet%>%
rename(feature_number = scan)%>%
mutate(feature_number = as.character(feature_number)), by = c('feature_number', 'network'))%>%
ungroup()%>%
filter(activity == 'depletolite')%>%
select(-c(network, numberOfNodes, ecoNetConsensusScore, xic, ra, asin, net_act))%>%
group_by(ecoNetConsensus, DayNight, Replicate, Organism)%>%
summarize_if(is.numeric, sum, na.rm  = TRUE)%>%
ungroup()%>%
spread(ecoNetConsensus, log10)%>%
mutate_all(~replace(., is.na(.), 0))
permanova_organism <- permanova_df%>%
group_by(DayNight)%>%
nest()%>%
mutate(data = map(data, ~adonis(.x[3:ncol(.x)] ~ Organism, .x, perm = 1000, method = "bray", na.rm = TRUE)))
permanova_DayNight <- permanova_df%>%
adonis(.[4:ncol(.)] ~ DayNight, ., perm = 1000, method = "bray", na.rm = TRUE)
# VIZUALIZATIONS -- lability classes with emoji shapes --------------------
pdf('plots/emojiSuperclassPercentProductionDayNight.pdf', width = 15, height = 10)
lability_classes%>%
group_by(DayNight, superclass_consensus, Replicate)%>%
mutate(relativeT0Prod = T0/sum(T0, na.rm = TRUE),
relativeT0Prod = case_when(is.na(relativeT0Prod) ~ 0,
TRUE ~ relativeT0Prod))%>%
ungroup()%>%
group_by(DayNight, superclass_consensus, activity)%>%
filter(sum(T0) != 0)%>%
ungroup()%>%
mutate(shape = case_when(DayNight == 'Day' ~ '\u2600',
TRUE ~ emoji('crescent_moon')))%>%
ggplot(aes(superclass_consensus, relativeT0Prod*100, color = activity, shape = shape)) +
geom_text(aes(label = shape), cex = 13, family= 'OpenSansEmoji') +
coord_flip() +
scale_color_manual(labels = c('Accumolite', 'Depletolite', 'Recalcitrant'), values = c('#78B7C5', '#EBCC2A', "#006658")) +
# geom_bar(stat = 'identity') +
# geom_errorbar(aes(ymax = total_production + std, ymin = total_production - std)) +
# facet_wrap(~activity, labeller = labeller(activity = label_wrap_gen()), scales = 'free_y', nrow = 3) +
labs(y = 'Percent production (%)', x = 'Putative Superclass Annotation', color = 'Network Reactivity') +
facet_wrap(~DayNight) +
# scale_y_log10() +
gen_theme() +
theme(strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 13),
axis.text.y = element_text(size = 14))
dev.off()
# VIZUALIZATIONS -- SPG depletion, together AND LINEAR MODEL -------------------------------
fcm_depletolite_lm_all <- fcm_23%>%
lm(cells_ul ~ log10, data = .)
fca_p <- (fcm_depletolite_lm_all%>%
tidy()%>%
filter(term == 'log10'))$p.value
fca_f <- (fcm_depletolite_lm_all%>%
tidy()%>%
filter(term == 'log10'))$statistic
fca_slope <- fcm_depletolite_lm_all$coefficients["log10"]
fca_intercept <- fcm_depletolite_lm_all$coefficients["(Intercept)"]
fca_r2 <- summary(fcm_depletolite_lm_all)$adj.r.squared
pdf('plots/spgDepletoliteChange.pdf', width = 15, height = 10)
fcm_23%>%
group_by(Organism, DayNight)%>%
mutate(xerr = sd(log10),
yerr = sd(cells_ul))%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
filter(Organism != 'Influent',
Organism != 'Water control',
Organism != 'Offshore')%>%
mutate(shape = case_when(DayNight == 'Day' ~ '\u2600',
TRUE ~ emoji('crescent_moon')))%>%
ggplot(aes(log10, cells_ul, color = Organism)) +
geom_line(aes(group = Organism, color = Organism), size = 2) +
geom_errorbarh(aes(xmin = log10-xerr, xmax = log10+xerr), size = 1, color = 'Grey') +
geom_errorbar(aes(ymin = cells_ul - yerr, ymax = cells_ul + yerr), size = 1, color = 'Grey') +
geom_text(aes(label = shape, color = Organism), cex = 13, family= 'OpenSansEmoji') +
ylim(0.036,0.083) +
scale_color_manual(values = org_colors_no_water) +
gen_theme() +
labs(y = 'Specific Growth Rate', x = bquote(Depletolite ~Total ~Depletion ~(log[10] ~XIC)))
fcm_23%>%
group_by(Organism, DayNight)%>%
mutate(xerr = sd(log10),
yerr = sd(cells_ul))%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
filter(Organism != 'Influent',
Organism != 'Water control',
Organism != 'Offshore')%>%
mutate(shape = case_when(DayNight == 'Day' ~ '\u2600',
TRUE ~ emoji('crescent_moon')))%>%
ggplot(aes(Organism, cells_ul, color = Organism)) +
geom_line(aes(group = Organism, color = Organism), size = 2) +
geom_errorbar(aes(ymin = cells_ul - yerr, ymax = cells_ul + yerr), size = 1, color = 'Grey', width = 0.5) +
geom_text(aes(label = shape, color = Organism), cex = 13, family= 'OpenSansEmoji') +
ylim(0.036,0.083) +
scale_color_manual(values = org_colors_no_water) +
gen_theme() +
labs(y = 'Specific Growth Rate', x = 'Organism')
fcm_23%>%
group_by(Organism, DayNight)%>%
mutate(xerr = sd(log10))%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
filter(Organism != 'Influent',
Organism != 'Offshore')%>%
mutate(shape = case_when(DayNight == 'Day' ~ '\u2600',
TRUE ~ emoji('crescent_moon')))%>%
ggplot(aes(Organism, log10, color = Organism)) +
geom_line(aes(group = Organism, color = Organism), size = 2) +
geom_errorbar(aes(ymin = log10 - xerr, ymax = log10 + xerr), size = 1, color = 'Grey', width = 0.5) +
geom_text(aes(label = shape, color = Organism), cex = 12, family= 'OpenSansEmoji') +
scale_color_manual(values = org_colors_no_water) +
gen_theme() +
labs(y = bquote(Depletolite ~Total ~Depletion ~(log[10] ~XIC)), x = 'Organism')
dev.off()
# # VIZUALIZATIONS -- Cytoscape file ----------------------------------------
# night_activity <- all_activity%>%
#   filter(DayNight == 'Night')
#
# day_activity <- all_activity%>%
#   filter(DayNight == 'Day')
#
# cyto_export <- feature_stats_wdf%>%
#   filter(Timepoint == "T0")%>%
#   left_join(networking%>%
#               select(feature_number, network),
#             by = 'feature_number')%>%
#   mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
#                              TRUE ~ network))%>%
#   left_join(all_activity, by = c('net_act', 'DayNight'))%>%
#   ungroup()%>%
#   left_join(ecoNet%>%
#               select(-network)%>%
#               mutate(scan = as.character(scan))%>%
#               rename('feature_number' = 'scan'), by = 'feature_number')%>%
#   select(feature_number, Organism, DayNight, net_act, ecoNetConsensus, log10)%>%
#   group_by(feature_number, Organism, DayNight, ecoNetConsensus, net_act)%>%
#   summarize_if(is.numeric, mean, na.rm = TRUE)%>%
#   ungroup()%>%
#   unite(sample, c('DayNight', 'Organism'), sep = '_')%>%
#   spread(sample, log10)%>%
#   mutate(Daysum = rowSums(across(Day_CCA:Day_Turf), na.rm = TRUE),
#          Nightsum = rowSums(across(Night_CCA:Night_Turf), na.rm = TRUE))%>%
#   left_join(night_activity, by = 'net_act')%>%
#   left_join(day_activity, by = 'net_act', suffix = c('_night', '_day'))
#
#
#
# write_csv(cyto_export, 'analysis/cytoDiel.csv')
#
#
# # EXPORT -- Sunburst df ---------------------------------------------------
# depletion_sunburst <- feature_stats_wdf%>%
#   filter(Timepoint == "T0")%>%
#   left_join(networking%>%
#               select(feature_number, network),
#             by = 'feature_number')%>%
#   mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
#                              TRUE ~ network))%>%
#   left_join(all_activity, by = c('net_act', 'DayNight'))%>%
#   ungroup()%>%
#   filter(activity == 'depletolite')%>%
#   left_join(ecoNet%>%
#               select(-network)%>%
#               mutate(scan = as.character(scan))%>%
#               rename('feature_number' = 'scan'), by = 'feature_number')%>%
#   group_by(ecoNetConsensus, DayNight, Replicate, Organism)%>%
#   select(-c(log10, ra:activity, ecoNetConsensusScore:matchSource))%>%
#   summarize_if(is.numeric, sum, na.rm  = TRUE)%>%
#   ungroup()%>%
#   group_by(ecoNetConsensus, DayNight, Organism)%>%
#   summarize_if(is.numeric, mean, na.rm = TRUE)%>%
#   ungroup()%>%
#   separate(ecoNetConsensus, c('superclass', 'class', 'subclass'), sep = ';')
#
#
#
# sunbursts <- depletion_sunburst%>%
#   # group_by(Organism)%>%
#   # nest()%>%
#   # mutate(data = map(data, ~
#   mutate(superclass = gsub('-', ' ', superclass),
#          class = gsub('-', ' ', class),
#          subclass = gsub('-', ' ', subclass))%>%
#   unite(path, c('Organism', 'DayNight', 'superclass':'subclass'), sep = '-', na.rm = TRUE)%>%
#   sunburst(count = TRUE,
#            percent = TRUE,
#            legend = list(w=250)
#            )
#
# htmlwidgets::onRender(
#   sunbursts,
#   "function(el,x) {
#   // force show the legend
#   //   check legend
#   d3.select(el).select('.sunburst-togglelegend').property('checked',True);
#   //   simulate click
#   d3.select(el).select('.sunburst-togglelegend').on('click')();
#
#   // change the text in the legend to add count
#   d3.select(el).selectAll('.sunburst-legend text').text(function(d) {return d.name + ' ' + d.value})
#   d3.select(el).select('.sunburst-togglelegend').remove()}"
# )
#
# depletion_sunburst[is.na(depletion_sunburst)] <- 'No Consensus Reached'
# write_csv(depletion_sunburst, '~/Documents/GitHub/DORCIERR/data/analysis/depletionSunburst.csv')
#
# VIZUALIZATIONS -- SUPPLEMENT lability classes variables -----------------
lability_classes_supplements <- feature_stats_wdf%>%
select(-c(log10, asin))%>%
gather(responseVariable, val, xic:ra)%>%
left_join(networking%>%
select(feature_number, network), by = 'feature_number')%>%
mutate(net_act = case_when(network == -1 ~ -as.numeric(feature_number),
TRUE ~ network))%>%
left_join(all_activity, by = c('net_act', 'DayNight'))%>%
# filter(DayNight == 'Day')%>%
left_join(ecoNet%>%
rename(feature_number = scan)%>%
mutate(feature_number = as.character(feature_number)), by = c('feature_number', 'network'))%>%
separate(ecoNetConsensus, c('superclass_consensus', 'class_consensus', 'subclass_consensus'), remove = FALSE, sep = ';')%>%
group_by(activity, DayNight, responseVariable)%>%
nest()%>%
mutate(data = map(data, ~ spread(.x, Timepoint, val)%>%
group_by(superclass_consensus, Replicate)%>%
summarize_if(is.numeric, sum, na.rm = TRUE)%>%
ungroup()))%>%
unnest(data)%>%
ungroup()%>%
group_by(DayNight, superclass_consensus, Replicate, responseVariable)%>%
mutate(relativeT0Prod = T0/sum(T0, na.rm = TRUE),
relativeT0Prod = case_when(is.na(relativeT0Prod) ~ 0,
TRUE ~ relativeT0Prod))%>%
ungroup()%>%
group_by(responseVariable)%>%
nest()%>%
mutate(plot = map(data, ~
ggplot(.x, aes(superclass_consensus, relativeT0Prod*100, color = activity)) +
geom_point(stat = 'identity', size = 4) +
coord_flip() +
ggtitle(responseVariable) +
scale_color_manual(labels = c('Accumolite', 'Depletolite', 'Recalcitrant'), values = c('#78B7C5', '#EBCC2A', "#006658")) +
# geom_bar(stat = 'identity') +
# geom_errorbar(aes(ymax = total_production + std, ymin = total_production - std)) +
# facet_wrap(~activity, labeller = labeller(activity = label_wrap_gen()), scales = 'free_y', nrow = 3) +
labs(y = 'Percent production (%)', x = 'Putative Superclass Annotation', color = 'Network Reactivity') +
facet_wrap(~DayNight) +
# scale_y_log10() +
gen_theme() +
theme(strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 13),
axis.text.y = element_text(size = 14))),
plotRaw = map(data, ~
ggplot(.x, aes(superclass_consensus, T0, color = activity)) +
geom_point(stat = 'identity', size = 4) +
coord_flip() +
ggtitle(responseVariable) +
scale_color_manual(labels = c('Accumolite', 'Depletolite', 'Recalcitrant'), values = c('#78B7C5', '#EBCC2A', "#006658")) +
# geom_bar(stat = 'identity') +
# geom_errorbar(aes(ymax = total_production + std, ymin = total_production - std)) +
# facet_wrap(~activity, labeller = labeller(activity = label_wrap_gen()), scales = 'free_y', nrow = 3) +
labs(y = 'raw value', x = 'Putative Superclass Annotation', color = 'Network Reactivity') +
facet_wrap(~DayNight) +
# scale_y_log10() +
gen_theme() +
theme(strip.background = element_rect(fill = "transparent"),
strip.text = element_text(size = 13),
axis.text.y = element_text(size = 14))))
# unnest(data)
pdf('plots/supplementalSuperclassPercentProductionDayNight.pdf', width = 15, height = 10)
lability_classes_supplements$plot
lability_classes_supplements$plotRaw
dev.off()
