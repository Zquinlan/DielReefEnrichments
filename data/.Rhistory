weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_log_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'Timepoint filters')
nc_all_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites%>%
filter(DayNight == 'Day')%>%
unique(),
by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'All filters')
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity,
network = 1700,
num_features = 1)%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
xlab("N:C") +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
# VIZUALIZATIONS -- Org Pie charts----------------------------------------------------------
org_log2_ra <- feature_stats_wdf%>%
filter(Timepoint == "T0",
DayNight == "Day")%>%
left_join(log2_change_vals%>%
select(-c(Replicate, T0, TF, complete_removal))%>%
group_by(feature_number, Organism, DayNight)%>%
summarize_if(is.numeric, mean),
by = c("feature_number", "Organism", "DayNight"))%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
left_join(net_activity,
by = c('network', 'DayNight'))
pdf("./plots/org_pie_091620.pdf", width = 15, height = 10)
org_log2_ra%>%
filter(network != -1)%>%
group_by(Organism, DayNight, Replicate, Timepoint)%>%
select(-c(log10:asin))%>%
mutate(ra = xic/sum(xic))%>%
ungroup()%>%
group_by(Organism, activity)%>%
summarize_if(is.numeric, sum)%>%
ungroup()%>%
ggplot(aes(x="", y=ra, fill = activity)) +
geom_bar(width = 1, size = 0.5, color = "white", stat = "identity") +
labs(x =NULL, y = NULL, title = "") +
theme_classic() +
facet_wrap(~Organism) +
scale_fill_manual(values = c('#78B7C5', '#EBCC2A', "#00A08A")) +
theme(axis.line = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank()) +
coord_polar("y", start = 0)
dev.off()
# VIZUALIZATIONS -- Organism comparisons log2_change ----------------------
pdf("./plots/org_relativechange_091620.pdf", width = 15, height = 10)
org_log2_ra%>%
filter(activity == 'depletolite')%>%
group_by(feature_number, Organism, DayNight, activity)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
inner_join(t_pvals%>%
filter(activity == 'depletolite')%>%
select(feature_number, Organism, DayNight),
by = c('feature_number', 'Organism', 'DayNight'))%>%
group_by(Organism, DayNight)%>%
mutate(relative_change = log2_change*sum(xic),
lability = case_when(log2_change > -8 ~ 'semi-labile',
TRUE ~ 'labile'))%>%
ggplot(aes(Organism, log2_change)) +
# geom_point(stat = 'identity') +
geom_boxplot() +
# geom_bar(stat = 'identity') +
# scale_color_manual(values = org_colors_no_water) +
# facet_wrap(~ activity, scales = 'free_x') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'none'
)
dev.off()
pdf("./plots/org_log2_091620.pdf", width = 15, height = 10)
unique_nc%>%
filter(activity == 'depletolite')%>%
ggplot(aes(Organism, log2_change)) +
# geom_point(stat = 'identity') +
geom_boxplot() +
# scale_color_manual(values = org_colors_no_water) +
# facet_wrap(~ activity, scales = 'free_x') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
dev.off()
# VIZUALIZATIONS -- N/C to activity ~ Organism ----------------------------
unique_nc%>%
# filter(activity == 'depletolite')%>%
ggplot(aes(activity, N/C)) +
# geom_point(stat = 'identity') +
# geom_bar(stat = 'summary', fun.y = 'mean') +
geom_boxplot() +
# scale_color_manual(values = org_colors_no_water) +
facet_wrap(~ Organism, scales = 'free_y') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'top'
)
org_log2_ra%>%
filter(activity == 'depletolite')%>%
group_by(Organism, DayNight, Replicate, Timepoint)%>%
select(-c(log10:asin))%>%
mutate(ra = xic/sum(xic))%>%
ungroup()%>%
left_join(networking%>%
select(feature_number, N,C),
by = 'feature_number')%>%
filter(!is.na(N))%>%
mutate(rel_nc = N/C*ra)%>%
filter(rel_nc < 0.1)%>%
ggplot(aes(Organism, rel_nc)) +
geom_boxplot()
# N/C vs log2_change ------------------------------------------------------
pdf("./plots/NC_log2_091620.pdf", width = 15, height = 10)
unique_nc%>%
filter(activity != 'recalcitrant',
!is.na(activity))%>%
mutate(activity2 = activity)%>%
ggplot(aes(N/C, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)
dev.off()
# NC compare 21 and 131 ---------------------------------------------------
nc21_131 <- networking%>%
filter(network == '131' | network == '21')%>%
inner_join(t_pvals%>%
filter(activity == 'depletolite',
DayNight == 'Day',
Organism == 'Pocillopora verrucosa' | Organism == 'Porites lobata')%>%
select(feature_number, Organism),
by = 'feature_number')%>%
left_join(org_log2_ra%>%
filter(Timepoint == 'T0',
DayNight == 'Day')%>%
ungroup()%>%
select(feature_number, Organism, xic, ra)%>%
group_by(feature_number, Organism)%>%
summarize_if(is.numeric, sum)%>%
ungroup(),
by = c('feature_number', 'Organism'))%>%
group_by(Organism)%>%
mutate(relative_nc = N/C*(xic/sum(xic)))
nc21_131%>%
ggplot(aes(Organism, relative_nc)) +
geom_boxplot()
# VIZUALIZATIONS -- Noise-removal effect ----------------------------------
noise_removal_pdf <- plots_all_filter%>%
full_join(filter_steps_na, by = c('network', 'label', 'num_features'))%>%
ungroup()%>%
bind_rows(glm_all_filt, nc_filt_plots)%>%
mutate(num_features = case_when(is.na(num_features) ~ 0,
TRUE ~ as.numeric(num_features)),
label = as.factor(label),
label = fct_relevel(label, "No filters", "Timepoint filters"))%>%
arrange(network, label)%>%
ggarrange(plotlist = c(.$plots[2:nrow(.)], .$plots[1]), ncol = 3, nrow = 1,
labels = .$label)
pdf("./plots/noise_removal_090120.pdf", width = 15, height = 10)
noise_removal_pdf
dev.off()
# GRAPHING -- NOSC Vs Organism --------------------------------------------
org_nosc <- log2_change_vals%>%
filter(DayNight == "Day")%>%
group_by(feature_number, Organism, complete_removal)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
left_join(networking%>%
select(feature_number, network, dG, NOSC, N, O, P, C, CLASS_STRING), by = "feature_number")%>%
left_join(metadata%>%
select(feature_number, `row m/z`, `row retention time`), by = "feature_number")%>%
left_join(net_activity, by = c('network', 'DayNight'))%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))
org_nosc%>%
mutate(Organism2 = Organism)%>%
ggplot(aes(NOSC, log2_change, color = Organism)) +
facet_wrap(~activity) +
geom_point() +
geom_smooth(method = lm, aes(color = Organism2))
org_nosc%>%
filter(activity != 'recalcitrant',
!is.na(activity))%>%
ggplot(aes(Organism, NOSC, color = activity)) +
geom_boxplot()
org_nosc%>%
filter(activity != 'recalcitrant',
!is.na(activity))%>%
ggplot(aes(activity, NOSC)) +
geom_boxplot()
# VIZUALIZATIONS -- Cytoscape ---------------------------------------------
filtered_features <- feature_stats_wdf%>%
select(feature_number, Organism, DayNight)%>%
unique()%>%
group_by(feature_number, DayNight)%>%
summarize_all(paste0, collapse = ", ")%>%
mutate(post_filtering = 1)
cyto_deplete <- dorc_wdf%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
!Timepoint == c("T1", "T2", "T3", "T4"))%>%
select(feature_number, Organism:ncol(.))%>%
left_join(log2_change_vals%>%
select(feature_number, Organism, DayNight, Replicate, log2_change)%>%
mutate(Replicate = as.character(Replicate)),
by = c('feature_number', 'Organism', 'DayNight', 'Replicate'))%>%
filter(Timepoint == 'T0')%>%
group_by(feature_number, Organism, DayNight)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
group_by(feature_number, DayNight)%>%
mutate(log2_sizing = min(log2_change))%>%
ungroup()%>%
gather(response_var, val, xic:log2_sizing)%>%
unite(org_var, c(Organism, response_var), sep = '_')%>%
spread(org_var, val)%>%
left_join(filtered_features,
by = c('feature_number', 'DayNight'))%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
left_join(net_activity,
by = c('network', 'DayNight'))%>%
rename(net_activity = activity)%>%
left_join(t_pvals%>%
select(feature_number, Organism, DayNight, activity)%>%
rename(feature_activity = activity)%>%
filter(feature_activity != 'recalcitrant')%>%
group_by(feature_number, DayNight)%>%
summarize_all(paste0, collapse = ", ")%>%
ungroup()%>%
rename(feature_organism = Organism),
by = c('feature_number', 'DayNight'))%>%
filter(DayNight == 'Day')%>%
mutate(post_filtering = case_when(is.na(post_filtering) ~ 0,
TRUE ~ as.numeric(post_filtering)),
feature_activity = case_when(is.na(feature_activity) ~ 'recalcitrant',
TRUE ~ as.character(feature_activity)),
feature_organism = case_when(is.na(feature_organism) ~ '0',
TRUE ~ as.character(feature_organism)))
write_csv(cyto_deplete, './analysis/cyto_depletes.csv')
# SUMMARY -- noise filtering steps ----------------------------------------
summary_no_background <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real"))$feature_number%>%
length()
summary_no_back_trans <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real")%>%
filter(Dorcierr_transient == "real"))$feature_number%>%
length()
filtering_feature_summary <- log2_change_vals%>%
select(feature_number, Organism, DayNight)%>%
unique()%>%
mutate(DayNight2 = DayNight)%>%
group_by(DayNight2)%>%
nest()%>%
mutate(log2_timepoint_bottleneck = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
select(feature_number)%>%
unique()%>%
nrow()),
xic_filter = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
inner_join(min_filter%>%
ungroup()%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
mutate(xic_filter = 1)%>%
group_by(Organism)%>%
summarize_if(is.numeric, sum)),
All_filters = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
inner_join(min_filter%>%
ungroup()%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism', 'DayNight'))%>%
mutate(All_filters = 1)%>%
group_by(Organism)%>%
summarize_if(is.numeric, sum)%>%
add_row(Organism = "Water control", All_filters = 0)),
one_s_ttest = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
inner_join(min_filter%>%
ungroup()%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(t_pvals%>%
filter(activity != 'recalcitrant')%>%
select(feature_number, Organism, DayNight),
by = c('feature_number', 'Organism', 'DayNight'))%>%
mutate(one_s_ttest = 1)%>%
group_by(Organism)%>%
summarize_if(is.numeric, sum)%>%
add_row(Organism = "Water control", one_s_ttest = 0)),
filts = map2(xic_filter, All_filters, ~ left_join(.x, .y, by = 'Organism')),
stats = map2(filts, one_s_ttest, ~ left_join(.x, .y, by = 'Organism')))%>%
select(-c(data, xic_filter, All_filters, one_s_ttest, filts))%>%
unnest(c(log2_timepoint_bottleneck, stats))%>%
rename(DayNight = DayNight2)%>%
mutate(Background_filter = 13843,
Transient_filter = 10605)%>%
select(DayNight, Organism, Background_filter, Transient_filter, everything())
write_csv(filtering_feature_summary, "./analysis/filtering_steps_summary.csv")
org_log2_ra%>%
filter(activity == 'depletolite')%>%
group_by(feature_number, Organism, DayNight, activity)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
inner_join(t_pvals%>%
filter(activity == 'depletolite')%>%
select(feature_number, Organism, DayNight),
by = c('feature_number', 'Organism', 'DayNight'))%>%
group_by(Organism, DayNight)%>%
mutate(relative_change = log2_change*sum(xic),
lability = case_when(log2_change > -8 ~ 'semi-labile',
TRUE ~ 'labile'))%>%
ggplot(aes(Organism, log2_change)) +
# geom_point(stat = 'identity') +
geom_boxplot() +
# geom_bar(stat = 'identity') +
# scale_color_manual(values = org_colors_no_water) +
# facet_wrap(~ activity, scales = 'free_x') +
theme(
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_line('grey'), # get rid of major grid
panel.grid.minor = element_line('grey'), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"),
legend.position = 'none'
)
# VIZUALIZATIONS -- Org Pie charts----------------------------------------------------------
org_log2_ra <- feature_stats_wdf%>%
filter(Timepoint == "T0",
DayNight == "Day")%>%
left_join(log2_change_vals%>%
select(-c(Replicate, T0, TF, complete_removal))%>%
group_by(feature_number, Organism, DayNight)%>%
summarize_if(is.numeric, mean),
by = c("feature_number", "Organism", "DayNight"))%>%
left_join(networking%>%
select(feature_number, network),
by = 'feature_number')%>%
left_join(net_activity,
by = c('network', 'DayNight'))
# PRE-STATS CLEANING -- DOM-stats - RELATIVIZATION AND NORMALIZATION -- xic_log10 -----------------------------------------
dom_stats_wdf<- dorc_wdf%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
!Timepoint == c("T1", "T2", "T3", "T4"))%>%
select(feature_number, Organism:ncol(.))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))
head(dorc_wdf)
# PRE-STATS CLEANING -- DOM-stats - RELATIVIZATION AND NORMALIZATION -- xic_log10 -----------------------------------------
dom_stats_wdf<- dorc_wdf%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
!Timepoint == "T1"| "T2"| "T3"| "T4")%>%
select(feature_number, Organism:ncol(.))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))
!Timepoint =="T4")%>%
select(feature_number, Organism:ncol(.))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))
select <- dplyr::select
# PRE-STATS CLEANING -- DOM-stats - RELATIVIZATION AND NORMALIZATION -- xic_log10 -----------------------------------------
dom_stats_wdf<- dorc_wdf%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
!Timepoint == "T1"
!Timepoint =="T2"
!Timepoint =="T3"
!Timepoint =="T4")%>%
select(feature_number, Organism:ncol(.))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))
View(dorc_wdf)
View(dorc_wdf$Timepoint)
# PRE-STATS CLEANING -- DOM-stats - RELATIVIZATION AND NORMALIZATION -- xic_log10 -----------------------------------------
dom_stats_wdf<- dorc_wdf%>%
filter(!Organism == "Influent",
!Organism == "Offshore",
Timepoint == "T0" | Timepoint == "TF")%>%
select(feature_number, Organism:ncol(.))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))
