select(feature_number, Organism, T0, TF, log2_change, Replicate)%>%
by = c('feature_number', 'Organism'))
nc_all <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))
nc_all <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N:C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)
head(nc_no_filt)
mutate(nc = N:C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N:C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
mutate(nc = N:C)%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
ungroup()%>%
mutate(nc = N:C)
nc_no_filt <- net_summary%>%
select(-c(num_organism:ncol(.)))%>%
gather(Organism, log2_change, 22:27)%>%
filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N/C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_log_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'Timepoint filters')
nc_all_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'All filters')
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(aes(N, P, color = Organism)) +
geom_point(stat = 'identity') +
scale_color_manual(values = wes_palette('Darjeeling1', 5, type = 'continuous'))))%>%
select(-data)
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(N, P, color = Organism)) +
geom_point(stat = 'identity') +
scale_color_manual(values = wes_palette('Darjeeling1', 5, type = 'continuous'))))%>%
select(-data)
nc_filt_plots$plots
wes_palette('Darjeeling1', 5, type = 'continuous')
wes_palette('Zissou1', 5, type = 'continuous')
wes_palette('Darjeeling1', 5, type = 'continuous')
wes_palette('Zissou1', 5, type = 'continuous')
wes_palette('Darjeeling1', 5, type = 'continuous')
wes_palette('Zissou1', 5, type = 'continuous')
head(wes_palette('Zissou1', 5, type = 'continuous'))
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(N, P, color = Organism)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous')), "#3B9AB2")))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(N, P, color = Organism)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous'), "#3B9AB2"))))%>%
select(-data)
nc_filt_plots$plots
View(nc_filt_plots)
View(nc_all_filt)
nc_no_filt <- net_summary%>%
select(-c(22:ncol(.)))%>%
# gather(Organism, log2_change, 22:27)%>%
# filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N/C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_no_filt <- net_summary%>%
select(-c(22:ncol(.)))%>%
# gather(Organism, log2_change, 22:27)%>%
# filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N/C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_log_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'Timepoint filters')
nc_all_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'All filters')
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = Organism)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous'), "#3B9AB2"))))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous'), "#3B9AB2"))))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
filter(activity != "recalcitrant")%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous'), "#3B9AB2"))))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots$plots[2]
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c(wes_palette('Darjeeling1', 5, type = 'continuous'), "#3B9AB2"))))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = loess, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = gam, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = glm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
nc_filt_plots$plots
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity)%>%
group_by(label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity,
network = 1700,
num_features = 1)%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
# VIZUALIZATIONS -- Noise-removal effect ----------------------------------
noise_removal_pdf <- plots_all_filter%>%
full_join(filter_steps_na, by = c('network', 'label', 'num_features'))%>%
ungroup()%>%
bind_rows(glm_all_filt, nc_filt_plots)%>%
mutate(num_features = case_when(is.na(num_features) ~ 0,
TRUE ~ as.numeric(num_features)),
label = as.factor(label),
label = fct_relevel(label, "No filters", "Timepoint filters"))%>%
arrange(network, label)%>%
ggarrange(plotlist = c(.$plots[2:nrow(.)], .$plots[1]), ncol = 3, nrow = 1,
labels = .$label)
warnings
warnings()
pdf("./plots/noise_removal_090120.pdf", width = 15, height = 10)
noise_removal_pdf
dev.off()
