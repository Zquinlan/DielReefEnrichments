adj.p.value < 0.05)
net_activity%>%
left_join(networking%>%
select(feature_number, network, NOSC), by = "network")%>%
filter(network != "-1")%>%
left_join(metadata%>%
select(feature_number, `row m/z`), by = "feature_number")%>%
inner_join(min_filter%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(), by = c('feature_number'))%>%
gather(response_var, value, NOSC:`row m/z`)%>%
ggplot(aes(activity, value)) +
# geom_jitter() +
geom_boxplot() +
facet_wrap(~response_var, scale = 'free_y')
# META-STATS -- Network stats summary sheet -------------------------------
net_summary <- net_activity%>%
left_join(metadata%>%
mutate(num_features = 1)%>%
select(num_features, network)%>%
group_by(network)%>%
summarize_if(is.numeric, sum)%>%
ungroup(),
by = 'network')%>%
left_join(networking%>%
group_by(feature_number)%>%
mutate(min_nosc = min(NOSC, na.rm = TRUE),
max_nosc = max(NOSC, na.rm = TRUE),
nc = N/C,
pc = P/C)%>%
select(feature_number, network, min_nosc, max_nosc, C:P, nc, pc)%>%
unique(),
by = 'network')%>%
left_join(log2_change_vals%>%
group_by(feature_number)%>%
mutate(min_log2 = min(log2_change),
max_log2 = max(log2_change))%>%
select(feature_number, min_log2, max_log2)%>%
unique(),
by = 'feature_number')%>%
left_join(molnet_class%>%
left_join(networking, by = 'feature_number')%>%
select(c(network, molnet_string))%>%
filter(network != '-1')%>%
unique(),
by = 'network')%>%
left_join(nosc_quadrants%>%
filter(network != '324', DayNight == "Day")%>%
select(-c('Replicate', 'T0', 'TF', 'NOSC', 'row m/z'))%>%
spread(Organism, log2_change)%>%
select(-activity)%>%
group_by(feature_number, network, DayNight)%>%
summarize_all(paste0, collapse = ", ")%>%
ungroup()%>%
mutate_all(funs(gsub("NA, ", "", .)))%>%
mutate_all(funs(gsub(", NA", "", .)))%>%
na_if("NA")%>%
mutate(network = as.numeric(network)),
by = c('feature_number', 'network'))%>%
left_join(networking%>%
select(feature_number, combined_ID, binary_ID, NOSC),
by = 'feature_number')%>%
select(feature_number, network, activity, num_features, DayNight, NOSC, quadrant, combined_ID, binary_ID, everything())%>%
inner_join(day_exometabolites, by = 'feature_number')%>%
left_join(benthic_produced_exometabolites, by = 'feature_number')%>%
left_join(unique_benthic_metabolites%>%
rename(unique_organism = Organism),
by = 'feature_number')
write_csv(net_summary, './analysis/depletolite_net_summary.csv')
# META-STATS -- unexpected depletolites and accumolites -------------------
unexpected_features_deplet <- net_activity%>%
left_join(log2_change_vals%>%
group_by(DayNight, Organism, feature_number)%>%
summarize_if(is.numeric, mean)%>%
left_join(networking, by = 'feature_number'),
by = 'network')%>%
filter(log2_change > 1,
activity == 'depletolite',
DayNight == 'Day')
pdf("plots/depletolite_networks_unexpected_accum.pdf", width = 6, height = 5)
unexpected_features_deplet%>%
ggplot(aes(CF_subclass, fill = Organism)) +
geom_histogram(stat = 'count') +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"))
dev.off()
unexpected_features_accum <- net_activity%>%
left_join(log2_change_vals%>%
group_by(DayNight, Organism, feature_number)%>%
summarize_if(is.numeric, mean)%>%
left_join(networking, by = 'feature_number'),
by = 'network')%>%
filter(log2_change < -1,
activity == 'accumolite',
DayNight == 'Day')
pdf("plots/accumolite_networks_unexpected_deplet.pdf", width = 6, height = 5)
unexpected_features_accum%>%
ggplot(aes(CF_subclass, fill = Organism)) +
geom_histogram(stat = 'count') +
theme(
axis.text.x = element_text(angle = 60, hjust = 1),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"))
dev.off()
print_df <- unexpected_features_accum%>%
bind_rows(unexpected_features_deplet)%>%
select(1:11)%>%
filter(binary_ID == 1)
write_csv(print_df, '~/Downloads/print_df_dorc.csv')
networks_plotting <- net_activity%>%
left_join(log2_change_vals%>%
group_by(DayNight, Organism, feature_number)%>%
summarize_if(is.numeric, mean)%>%
left_join(networking, by = 'feature_number'),
by = 'network')%>%
mutate(coloring = case_when(log2_change < -3.3 ~ 'depletolite',
log2_change > -3.3 & log2_change < 3.3 ~ 'recalcitrant',
TRUE ~ 'accumolite'),
expected = case_when(log2_change > 1 & activity == 'depletolite' ~ 'unexpected',
log2_change < -1 & activity == 'accumolite' ~ 'unexpected',
TRUE ~ 'expected'))
networks_plotting%>%
filter(activity == 'accumolite',
DayNight == 'Day')%>%
ggplot(aes(NOSC, log2_change, color = coloring)) +
geom_text(aes(label = network))
pdf("plots/depletolite_networks_NOSC_unexpectedlogs.pdf", width = 15, height = 10)
networks_plotting%>%
filter(activity == 'depletolite',
DayNight == 'Day')%>%
ggplot(aes(NOSC, log2_change, color = coloring)) +
geom_text(aes(label = network))
networks_plotting%>%
group_by(network)%>%
filter(activity == 'accumulite',
DayNight == 'Day',
mean(log2_change) >= 1)%>%
ungroup()%>%
arrange(network)%>%
mutate(network = as.character(network))%>%
ggplot(aes(network, fill = expected)) +
geom_histogram(stat = 'count', position = 'dodge') +
ylim(c(0,50)) +
theme(
axis.text.x = element_text(angle = 60, hjust = 1, size = 15),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major.y = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of major grid
panel.grid.major.x = element_line(size = 0.2, linetype = 'solid',colour = "gray"), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
legend.text = element_text(face = "italic"))
dev.off()
# GRAPHING -- N:C P:C ratios ----------------------------------------------
unique_nc <- net_summary%>%
filter(num_organism == 1)%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate)%>%
rename(unique_organism = Organism),
by = c('feature_number', 'unique_organism'))%>%
rename('Organism' = 'unique_organism')%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
group_by(Organism, Replicate)%>%
mutate(sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
unique_nc%>%
group_by(Organism, Replicate)%>%
summarize_if(is.numeric, mean, na.rm = TRUE)%>%
ungroup()%>%
mutate(Replicate = as.factor(Replicate))%>%
ggplot(aes(N, P, color = Organism, shape = Replicate)) +
geom_point(stat = 'identity') +
scale_color_manual(values = wes_palette('Darjeeling1', 5, type = 'continuous'))
nc_no_filt <- net_summary%>%
select(-c(22:ncol(.)))%>%
# gather(Organism, log2_change, 22:27)%>%
# filter(!is.na(log2_change))%>%
left_join(log2_change_vals%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism, T0, TF, log2_change, Replicate),
by = c('feature_number'))%>%
group_by(Organism, Replicate)%>%
mutate(nc = N/C,
sample_t0_tic = sum(T0, na.rm = TRUE),
sample_c = sum(C, na.rm = TRUE),
sample_n = sum(N, na.rm = TRUE),
sample_p = sum(P, na.rm = TRUE),
weighted_nc = N/(C*T0/(sample_c*sample_t0_tic)),
weighted_pc = P/(C*T0/(sample_c*sample_t0_tic)),
weighted_p = (P*T0/(sample_p*sample_t0_tic)),
weighted_n = (N*T0/(sample_n*sample_t0_tic)))%>%
ungroup()
nc_log_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'Timepoint filters')
nc_all_filt <- nc_no_filt%>%
inner_join(log2_features%>%
filter(DayNight == 'Day')%>%
ungroup()%>%
select(feature_number)%>%
unique(),
by = 'feature_number')%>%
inner_join(org_exometabolites%>%
filter(DayNight == 'Day')%>%
unique(),
by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))%>%
mutate(label = 'All filters')
nc_filt_plots <- nc_no_filt%>%
mutate(label = 'No filters')%>%
bind_rows(nc_log_filt, nc_all_filt)%>%
filter(activity != "recalcitrant")%>%
mutate(activity2 = activity,
network = 1700,
num_features = 1)%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(nc, log2_change, color = activity)) +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
xlab("N:C") +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
# VIZUALIZATIONS -- Noise-removal effect ----------------------------------
noise_removal_pdf <- plots_all_filter%>%
full_join(filter_steps_na, by = c('network', 'label', 'num_features'))%>%
ungroup()%>%
bind_rows(glm_all_filt, nc_filt_plots)%>%
mutate(num_features = case_when(is.na(num_features) ~ 0,
TRUE ~ as.numeric(num_features)),
label = as.factor(label),
label = fct_relevel(label, "No filters", "Timepoint filters"))%>%
arrange(network, label)%>%
ggarrange(plotlist = c(.$plots[2:nrow(.)], .$plots[1]), ncol = 3, nrow = 1,
labels = .$label)
pdf("./plots/noise_removal_090120.pdf", width = 15, height = 10)
noise_removal_pdf
dev.off()
# GRAPHING -- NOSC Vs Organism --------------------------------------------
org_nosc <- log2_change_vals%>%
filter(DayNight == "Day")%>%
group_by(feature_number, Organism, complete_removal)%>%
summarize_if(is.numeric, mean)%>%
ungroup()%>%
left_join(networking%>%
select(feature_number, network, dG, NOSC, N, O, P, C, CLASS_STRING), by = "feature_number")%>%
left_join(metadata%>%
select(feature_number, `row m/z`, `row retention time`), by = "feature_number")%>%
left_join(net_activity, by = 'network')%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism'))%>%
inner_join(min_filter%>%
ungroup()%>%
filter(DayNight == 'Day')%>%
select(feature_number, Organism)%>%
unique(),
by = c('feature_number', 'Organism'))
org_nosc%>%
mutate(Organism2 = Organism)%>%
ggplot(aes(NOSC, log2_change, color = Organism)) +
facet_wrap(~activity) +
geom_point() +
geom_smooth(method = lm, aes(color = Organism2))
org_nosc%>%
filter(activity != 'recalcitrant',
!is.na(activity))%>%
ggplot(aes(Organism, NOSC, color = activity)) +
geom_boxplot()
org_nosc%>%
filter(activity != 'recalcitrant',
!is.na(activity))%>%
ggplot(aes(activity, NOSC)) +
geom_boxplot()
# SUMMARY -- noise filtering steps ----------------------------------------
summary_no_background <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real"))$feature_number%>%
length()
summary_no_back_trans <- as.vector(feature_table_no_back_trans_filter%>%
filter(background == "real")%>%
filter(Dorcierr_transient == "real"))$feature_number%>%
length()
filtering_feature_summary <- log2_change_vals%>%
select(feature_number, Organism, DayNight)%>%
unique()%>%
mutate(DayNight2 = DayNight)%>%
group_by(DayNight2)%>%
nest()%>%
mutate(log2_timepoint_bottleneck = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
select(feature_number)%>%
unique()%>%
nrow()),
xic_filter = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
inner_join(min_filter%>%
ungroup()%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
mutate(xic_filter = 1)%>%
group_by(Organism)%>%
summarize_if(is.numeric, sum)),
All_filters = map(data, ~ inner_join(.x, log2_features%>%
ungroup()%>%
select(feature_number, DayNight)%>%
unique(),
by = c('feature_number', 'DayNight'))%>%
inner_join(min_filter%>%
ungroup()%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites,
by = c('feature_number', 'Organism', 'DayNight'))%>%
mutate(All_filters = 1)%>%
group_by(Organism)%>%
summarize_if(is.numeric, sum)%>%
add_row(Organism = "Water control", All_filters = 0)),
filts = map2(xic_filter, All_filters, ~ left_join(.x, .y, by = 'Organism')))%>%
select(-c(data, xic_filter, All_filters))%>%
unnest(c(log2_timepoint_bottleneck, filts))%>%
rename(DayNight = DayNight2)%>%
mutate(Background_filter = 13843,
Transient_filter = 10605)%>%
select(DayNight, Organism, Background_filter, Transient_filter, everything())
write_csv(filtering_feature_summary, "./analysis/filtering_steps_summary.csv")
glm_all_filt$plots[1]
glm_all_filt <- glm_df%>%
inner_join(min_filter%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))%>%
select(-network)%>%
mutate(network = 1600,
label = 'All filters',
num_features = 1)%>%
bind_rows(glm_no_filt, glm_log2_filt)%>%
filter(complete_removal != 'removed')%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(value, log2_change, color = activity)) +
facet_wrap(~ response_var, scales = 'free_x') +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
glm_all_filt$plots[1]
glm_all_filt <- glm_df%>%
inner_join(min_filter%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))%>%
select(-network)%>%
mutate(network = 1600,
label = 'All filters',
num_features = 1)%>%
bind_rows(glm_no_filt, glm_log2_filt)%>%
filter(complete_removal == 'removed')%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(value, log2_change, color = activity)) +
facet_wrap(~ response_var, scales = 'free_x') +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
glm_all_filt$plots[1]
glm_all_filt <- glm_df%>%
inner_join(min_filter%>%
select(feature_number, Organism, DayNight)%>%
unique(),
by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(org_exometabolites, by = c('feature_number', 'Organism', 'DayNight'))%>%
inner_join(log2_features%>%
select(feature_number, DayNight), by = c('DayNight', 'feature_number'))%>%
select(-network)%>%
mutate(network = 1600,
label = 'All filters',
num_features = 1)%>%
bind_rows(glm_no_filt, glm_log2_filt)%>%
filter(complete_removal != 'removed')%>%
group_by(network, num_features, label)%>%
nest()%>%
mutate(plots = map(data, ~ ggplot(.x, aes(value, log2_change, color = activity)) +
facet_wrap(~ response_var, scales = 'free_x') +
geom_point(stat = 'identity') +
scale_color_manual(values = c('#78B7C5', '#EBCC2A')) +
new_scale('color') +
geom_smooth(method = lm, aes(color = activity2)) +
scale_color_manual(values = c('#3B9AB2', '#E1AF00')) +
theme(
legend.position = "none",
plot.margin = unit(c(1,1,1.5,1.2), 'cm'),
# plot.margin = margin(2,.8,2,.8, "cm"),
axis.text.x = element_text(size = 15, angle = 60, hjust = 1),
axis.text.y = element_text(size = 20),
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
panel.grid.major = element_blank(), # get rid of major grid
panel.grid.minor = element_blank(), # get rid of minor grid
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent")
)))%>%
select(-data)
glm_all_filt$plots[1]
